{"version":3,"sources":["games/game5.js","games/game9.js","logo22.jpeg","Login.js","signup.js","games/game1.js","games/game2.js","games/game3.js","games/game4.js","games/game6.js","games/game7.js","games/game8.js","home.js","reducers/user.js","reducers/index.js","App.js","index.js"],"names":["fish_x","fish_y","op","correct_option","correct","moving_ball","Login","props","useState","nickname","setNickname","password","setPassword","error","seterror","errorS","seterrorMessage","handlesubmit","e","a","preventDefault","config","headers","axios","post","then","response","console","log","statusText","history","push","status","catch","className","src","logo","alt","Form","onSubmit","style","color","Group","controlId","Label","Control","type","placeholder","value","onChange","event","target","Button","to","Signup","email","setemail","pass","setpass","setnickname","signupHandle","validateEmail","test","String","toLowerCase","class","onClick","Game1","width","height","initial","equ","anw","hosX","hosY","balX","balY","bans","rise","run","mball","X","Y","val","thit","youlose","youwin","setup","p5","canvasParentRef","window","innerWidth","innerHeight","createCanvas","parent","draw","background","fill","textSize","textFont","text","num","sign","eq","ans","hit","i","int","random","b","si","noStroke","rect","square","circle","angleMode","DEGREES","atan2","mouseY","mouseX","translate","rotate","mouseClicked","prev","this","bind","Component","Game2","clr","ques","frac","fracangle","ra","rb","rc","rd","roll","n","milli","shape","angi","scr","rolled","hitl","quesl","millis","rand","arc","radians","PIE","point","x","y","piecenter","isInsideSector","center","radius","angle1","angle2","areClockwise","angle","point2","point1","Math","cos","sin","relPoint","x_start","y_start","x_cord","y_cord","beats","direction","changedirection","previous_direction","collide","food","answer","answers_remainig","start","setupstart","floor","check_collider","snake_head_x","snake_head_y","forEach","element","number","questions_and_answers","textAlign","CENTER","TOP","length","update_snake","index","update_direction","LEFT","getMouseClick","mouse_x","mouse_y","mouseIsPressed","keyPressed","keyCode","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","justifyContent","alignItems","alignContent","backgroundColor","new_question","question","n1","n2","options","score","retry","Y_cord","RIGHT","indexOf","walls","myfish","ellipse","keyTyped","keyIsDown","ques_shape","change_ques","next_shapes","dropped","shape_name","moveShapes","shapes","elemen","stroke","triangle","PI","CHORD","splice","max","xelement","min","restart","playagain","balls","answer_remaining","tap","hoopX","hoopY","hoop","noFill","strokeWeight","line","questionandanswer","dropball","getmousetap","showBalls","ellipseMode","pop","drawApple","restartSetup","j","startSetup","mouseDragged","mouseReleased","home","state","setState","prevState","game","initialState","token","register","action","payload","rootReducers","combineReducers","user","store","createStore","applyMiddleware","thunk","App","path","exact","component","signup","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.209aaecf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\n\r\n// Fish coordinates\r\nlet fish_x;\r\nlet fish_y;\r\n// speed of the fish\r\nlet speed = 5;\r\n\r\nlet new_question = false;\r\n//oprator in the question\r\nlet op;\r\n// question json body with two numbers and oprator between them\r\nlet question = {\r\n    n1: 0,\r\n    n2: 0,\r\n    op: 0\r\n}\r\n//options array\r\nlet options = []\r\nlet answer = true // if previous answer is true\r\nlet correct_option; // the correct option \r\nlet correct  // if the answer is correct\r\nlet score = 0\r\nlet start = true\r\n\r\nexport default (props) => {\r\n\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n        // use parent to render the canvas in this ref\r\n        // (without that p5 will render the canvas outside of your component)\r\n        p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n    };\r\n\r\n    const draw = (p5) => {\r\n\r\n        if (start) {\r\n            setupstart(p5)  //runs only first time\r\n        }\r\n        p5.background(255, 241, 208);\r\n\r\n        myfish(p5)\r\n        keyTyped(p5)\r\n        walls(p5)\r\n\r\n        questions_and_answers(p5);\r\n        retry(p5)\r\n\r\n    };\r\n\r\n\r\n    const setupstart = (p5) => {\r\n\r\n        // fish position in the cordinates\r\n        fish_x = window.innerWidth * 0.6 / 2;\r\n        fish_y = window.innerHeight * 0.75;\r\n\r\n        // picks the question randomly\r\n        question.n1 = p5.floor(p5.random(26, 50))\r\n        question.n2 = p5.floor(p5.random(1, 25))\r\n        question.op = p5.floor(p5.random(1, 3))\r\n\r\n        if (question.op == 1)  // get the oprator +ve or -ve\r\n            op = '+'\r\n        else\r\n            op = '-'\r\n\r\n        // calculate the right answer\r\n        correct_option = question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2\r\n        correct = p5.floor(p5.random(1, 5))\r\n\r\n        //        push the opions in the array \r\n        for (let i = 1; i <= 4; i++) {\r\n            if (i === 1) {\r\n                options.push({\r\n                    'x_cord': 350,\r\n                    'y_cord': window.innerHeight * 0.75 / 4,\r\n                    'number': correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                })\r\n            }\r\n            else if (i === 2) {\r\n                options.push({\r\n                    'x_cord': (window.innerWidth * 0.6 / 4),\r\n                    'y_cord': window.innerHeight * 0.75 / 1.8,\r\n                    'number': correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                })\r\n            } else if (i === 3) {\r\n                options.push({\r\n                    'x_cord': (window.innerWidth * 0.6 / 2) + 60,\r\n                    'y_cord': window.innerHeight * 0.75 / 4,\r\n                    'number': correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                })\r\n            } else if (i === 4) {\r\n                options.push({\r\n                    'x_cord': (window.innerWidth * 0.6 / 2) + window.innerWidth * 0.6 / 3,\r\n                    'y_cord': window.innerHeight * 0.75 / 1.8,\r\n                    'number': correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                })\r\n            }\r\n        }\r\n        start = false\r\n    }\r\n\r\n    const retry = (p5) => {\r\n\r\n        //get mouse position\r\n        let mouse_x;\r\n        let mouse_y;\r\n        if (p5.mouseIsPressed == true) {\r\n            mouse_x = p5.mouseX;\r\n            mouse_y = p5.mouseY;\r\n        }\r\n\r\n        // if pressed retry or play again\r\n        if (new_question || !answer && mouse_x >= window.innerWidth * 0.6 / 4 && mouse_x <= window.innerWidth * 0.6 / 4 + 80\r\n            && mouse_y > window.innerHeight * 0.75 / 1.2 && window.innerHeight * 0.75 / 1.2 + 20) {\r\n\r\n            // assign the new question\r\n            question.n1 = p5.floor(p5.random(26, 50))\r\n            question.n2 = p5.floor(p5.random(1, 25))\r\n            question.op = p5.floor(p5.random(1, 3))\r\n            if (question.op == 1)\r\n                op = '+'\r\n            else\r\n                op = '-'\r\n\r\n            // get the right answer\r\n            correct_option = question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2\r\n            correct = p5.floor(p5.random(0, 3))\r\n\r\n\r\n            // assign new options to the options array\r\n            for (let i = 0; i <= 3; i++) {\r\n                if (i === 0) {\r\n                    options[i].x_cord = 350\r\n                    options[i].Y_cord = window.innerHeight * 0.75 / 4\r\n                    options[i].number = correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                }\r\n\r\n                else if (i === 1) {\r\n\r\n                    options[i].x_cord = (window.innerWidth * 0.6 / 4)\r\n                    options[i].y_cord = window.innerHeight * 0.75 / 1.8\r\n                    options[i].number = correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n\r\n                } else if (i === 2) {\r\n\r\n                    options[i].x_cord = (window.innerWidth * 0.6 / 2) + 60\r\n                    options[i].y_cord = window.innerHeight * 0.75 / 4\r\n                    options[i].number = correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n\r\n                } else if (i === 3) {\r\n\r\n                    options[i].x_cord = (window.innerWidth * 0.6 / 2) + window.innerWidth * 0.6 / 3\r\n                    options[i].y_cord = window.innerHeight * 0.75 / 1.8\r\n                    options[i].number = correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                }\r\n            }\r\n\r\n            //setting the fish position\r\n            fish_x = window.innerWidth * 0.6 / 2;\r\n            fish_y = window.innerHeight * 0.75;\r\n            if (!answer) // check if answer is wrong\r\n                score = 0\r\n\r\n            answer = true\r\n            new_question = false\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const questions_and_answers = (p5) => {\r\n        p5.textSize(26);\r\n        p5.fill(0, 102, 153);\r\n\r\n        // display the question\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        \r\n   p5 .textFont('Cursive')\r\n        p5.text('Task :: Let the Funkie get the missing part', (window.innerWidth * 0.6) / 2, 30);\r\n        p5.text(question.n1 + ' ' + op + ' ' + question.n2 + ' =  ___', (window.innerWidth * 0.6) / 2, 60);\r\n\r\n\r\n\r\n        // display the score\r\n        p5.fill('#C22A85');\r\n        p5.textAlign(p5.RIGHT, p5.TOP);\r\n        p5.text('Score : ' + score + '   ', (window.innerWidth * 0.6), 20);\r\n\r\n\r\n        // display the opions\r\n        options.forEach(element => {\r\n            p5.textSize(26);\r\n            p5.fill('#27AE60');\r\n            p5.textAlign(p5.CENTER, p5.CENTER);\r\n            p5.text(element.number, element.x_cord, element.y_cord)\r\n        });\r\n\r\n\r\n        options.forEach(element => {\r\n            if (fish_x > element.x_cord - 25 && fish_x < element.x_cord + 30 && fish_y > element.y_cord + 30 && fish_y < element.y_cord + 60) {\r\n\r\n                // if fish gets the right option\r\n                if (element.number === correct_option) {\r\n                    const index = options.indexOf(element);\r\n                    if (index > -1) {\r\n\r\n\r\n                        score++;\r\n                        new_question = true\r\n                    }\r\n                }\r\n                else { // if get the wrong options\r\n                    answer = false\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        //    if(new_question){   \r\n        //     question.n1=p5.floor(p5.random(1,50))\r\n        //     question.n2=p5.floor(p5.random(1,50))\r\n        //     question.op=p5.floor(p5.random(1,3))\r\n        //     if(question.op==1)\r\n        //     op='+'\r\n        //     else\r\n        //     op='-'\r\n        //        new_question=false\r\n        //    }\r\n\r\n    }\r\n\r\n\r\n    const walls = (p5) => {\r\n\r\n        // Display the walls \r\n        p5.fill('#870000')\r\n        p5.rect(0, 0, window.innerWidth * 0.6, 10)\r\n        p5.rect(0, 0, 10, window.innerHeight * 0.75)\r\n        p5.rect(0, window.innerHeight * 0.75 - 10, window.innerWidth * 0.6, 10)\r\n        p5.rect(window.innerWidth * 0.6 - 10, 0, 10, window.innerHeight * 0.75);\r\n        p5.rect((window.innerWidth * 0.6) / 2, 120, 10, window.innerHeight * 0.75 - 240)\r\n        p5.rect((window.innerWidth * 0.6 / 2 * 0.3) - 10, window.innerHeight * 0.75 / 3, window.innerWidth * 0.6 / 4, 10)\r\n        p5.rect((window.innerWidth * 0.6 / 2 * 0.3) * 4 + 10, window.innerHeight * 0.75 / 3, window.innerWidth * 0.6 / 4, 10)\r\n        p5.rect((window.innerWidth * 0.6 / 2 * 0.3) - 10, (window.innerHeight * 0.75 / 3) * 2, window.innerWidth * 0.6 / 4, 10)\r\n        p5.rect((window.innerWidth * 0.6 / 2 * 0.3) * 4 + 10, (window.innerHeight * 0.75 / 3) * 2, window.innerWidth * 0.6 / 4, 10)\r\n    }\r\n\r\n\r\n    const myfish = (p5) => {\r\n\r\n        // Sketch the Fish\r\n        p5.noStroke()\r\n        p5.fill('#FF4A1D')\r\n        p5.circle(fish_x, fish_y - 50, 50, 50)\r\n\r\n        p5.fill('#fff')\r\n        p5.ellipse(fish_x - 10, fish_y - 58, 13, 16)\r\n        p5.ellipse(fish_x + 10, fish_y - 58, 13, 16)\r\n\r\n        p5.fill('#000')\r\n        p5.ellipse(fish_x - 10, fish_y - 58, 6, 6)\r\n        p5.ellipse(fish_x + 10, fish_y - 58, 6, 6)\r\n\r\n        p5.fill('#fff')\r\n        p5.ellipse(fish_x, fish_y - 38, 9, 9)\r\n\r\n    }\r\n    const keyTyped = (p5) => {\r\n\r\n        //Get the key typed\r\n        if (answer) {\r\n            if (p5.keyIsDown(p5.LEFT_ARROW) && fish_x > 35) {\r\n\r\n\r\n\r\n                // Check if there's wall between\r\n                if (fish_x >= (window.innerWidth * 0.6) / 2 && fish_x <= (window.innerWidth * 0.6) / 2 + 40\r\n                    && (fish_y > 150 && fish_y < 190 + window.innerHeight * 0.75 - 240)\r\n                    ||\r\n                    (fish_x >= (window.innerWidth * 0.6 / 2 * 0.3) - 10 && fish_x <= (window.innerWidth * 0.6 / 2 * 0.3) + 18 + window.innerWidth * 0.6 / 4\r\n                        || fish_x >= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) && fish_x <= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) + 45 + window.innerWidth * 0.6 / 4\r\n                    )\r\n\r\n                    && ((fish_y >= (window.innerHeight * 0.75) / 3 + 35 && fish_y < (window.innerHeight * 0.75) / 3 + 80)\r\n                        || (fish_y >= (2 * ((window.innerHeight * 0.75) / 3) + 35) && fish_y < (2 * ((window.innerHeight * 0.75) / 3) + 80))\r\n\r\n                    )\r\n                ) {\r\n\r\n                }\r\n                else\r\n                    fish_x -= speed;\r\n            }\r\n\r\n            // Check if there's wall between\r\n            else if (p5.keyIsDown(p5.RIGHT_ARROW) && fish_x < window.innerWidth * 0.6 - 35) {\r\n                if ((fish_x >= (window.innerWidth * 0.6) / 2 - 30 && fish_x <= (window.innerWidth * 0.6) / 2 + 35\r\n                    && (fish_y > 150 && fish_y < 190 + window.innerHeight * 0.75 - 240))\r\n                    ||\r\n                    (fish_x >= (window.innerWidth * 0.6 / 2 * 0.3) - 43 && fish_x <= (window.innerWidth * 0.6 / 2 * 0.3) - 20 + window.innerWidth * 0.6 / 4\r\n                        || fish_x >= (((window.innerWidth * 0.6 / 2 * 0.3) * 4) - 30) && fish_x <= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) + 34 + window.innerWidth * 0.6 / 4\r\n                    )\r\n\r\n                    && ((fish_y >= (window.innerHeight * 0.75) / 3 + 35 && fish_y < (window.innerHeight * 0.75) / 3 + 80)\r\n                        || (fish_y >= (2 * ((window.innerHeight * 0.75) / 3) + 35) && fish_y < (2 * ((window.innerHeight * 0.75) / 3) + 80))\r\n\r\n                    )\r\n                ) {\r\n\r\n                }\r\n                else\r\n                    fish_x += speed;\r\n            }\r\n\r\n            // Check if there's wall between\r\n            else if (p5.keyIsDown(p5.DOWN_ARROW) && fish_y < window.innerHeight * 0.75 + 15) {\r\n                if ((fish_x >= (window.innerWidth * 0.6) / 2 - 25 && fish_x <= (window.innerWidth * 0.6) / 2 + 35\r\n                    && (fish_y > 145 && fish_y < 190 + window.innerHeight * 0.75 - 240))\r\n                    ||\r\n                    (fish_x >= (window.innerWidth * 0.6 / 2 * 0.3) - 38 && fish_x <= (window.innerWidth * 0.6 / 2 * 0.3) + 10 + window.innerWidth * 0.6 / 4\r\n                        || fish_x >= (((window.innerWidth * 0.6 / 2 * 0.3) * 4) - 20) && fish_x <= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) + 34 + window.innerWidth * 0.6 / 4\r\n                    )\r\n\r\n                    && ((fish_y >= (window.innerHeight * 0.75) / 3 + 25 && fish_y < (window.innerHeight * 0.75) / 3 + 70)\r\n                        || (fish_y >= (2 * ((window.innerHeight * 0.75) / 3) + 25) && fish_y < (2 * ((window.innerHeight * 0.75) / 3) + 70))\r\n\r\n                    )\r\n                ) { }\r\n                else\r\n                    fish_y += speed;\r\n            }\r\n\r\n            // Check if there's wall between\r\n            else if (p5.keyIsDown(p5.UP_ARROW) && fish_y > 85) {\r\n                if ((fish_x >= (window.innerWidth * 0.6) / 2 - 25 && fish_x <= (window.innerWidth * 0.6) / 2 + 35\r\n                    && (fish_y > 130 && fish_y < 200 + window.innerHeight * 0.75 - 240))\r\n                    ||\r\n                    (fish_x >= (window.innerWidth * 0.6 / 2 * 0.3) - 38 && fish_x <= (window.innerWidth * 0.6 / 2 * 0.3) + 10 + window.innerWidth * 0.6 / 4\r\n                        || fish_x >= (((window.innerWidth * 0.6 / 2 * 0.3) * 4) - 20) && fish_x <= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) + 34 + window.innerWidth * 0.6 / 4\r\n                    )\r\n\r\n                    && ((fish_y >= (window.innerHeight * 0.75) / 3 + 25 && fish_y < (window.innerHeight * 0.75) / 3 + 90)\r\n                        || (fish_y >= (2 * ((window.innerHeight * 0.75) / 3) + 25) && fish_y < (2 * ((window.innerHeight * 0.75) / 3) + 90))\r\n\r\n                    )\r\n                ) { }\r\n                else\r\n                    fish_y -= speed;\r\n            }\r\n        }\r\n        else {\r\n            //Display the wrong answer message\r\n            p5.textSize(26);\r\n            p5.fill('#E74C3C')\r\n\r\n            p5.textAlign(p5.RIGHT, p5.TOP);\r\n            \r\n   p5 .textFont('Cursive')\r\n            p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2 + window.innerWidth * 0.6 / 3, window.innerHeight * 0.75 / 1.2)\r\n\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            \r\n   p5 .textFont('Cursive')\r\n            p5.text('Retry ↻', window.innerWidth * 0.6 / 4, window.innerHeight * 0.75 / 1.2)\r\n        }\r\n    }\r\n\r\n    return <Sketch setup={setup}\r\n        draw={draw}\r\n        style={\r\n            {\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                alignContent: 'center',\r\n\r\n            }\r\n        }\r\n    />;\r\n};","import { getQueriesForElement } from \"@testing-library/react\";\r\nimport { Dropdown } from \"bootstrap\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\n\r\n\r\n\r\nlet start = true;   // only true when game runs first time\r\nlet restart = false;  // for retry in case of wrong answer\r\nlet playagain = false;  // for play again in case in winning\r\nlet balls = []   // total number of balls or apple array\r\nlet answer = true   // if answer is true... false if answr is wrong \r\nlet answer_remaining = true // true if answer is remaining\r\nlet tap = false  //true when we tap and hold the ball\r\nlet moving_ball  // true when moves the ball\r\n\r\nlet radius = 32   //radius of baseket hoop\r\n// hoop coordinates\r\nlet hoopX = 100    \r\nlet hoopY = 150\r\nlet score=0\r\n\r\nexport default (props) => {\r\n\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n\r\n  };\r\n\r\n  const draw = (p5) => {\r\n\r\n    p5.background(255, 241, 208);  // background canvas color\r\n    \r\n    // execute when game runs first time\r\n    if (start) {\r\n      startSetup(p5)\r\n    }\r\n    \r\n    // execute when  retry or playagain\r\n    \r\n    if (restart) {\r\n      restartSetup(p5)\r\n    }\r\n\r\n\r\n    showBalls(p5)          // display all the balls or apples\r\n    getmousetap(p5)        // get the mouse click and pick the apple\r\n    dropball(p5)            // drop he apples\r\n    questionandanswer(p5)    //display the questions and their answers\r\n    hoop(p5)                  // display the baskets\r\n  };\r\n\r\n  const hoop = (p5) => {\r\n\r\n\r\n\r\n    //Set the coodinates of the two baskets on right and left end\r\n    for (let index = 0; index < 2; index++) {\r\n\r\n      if (index === 0) {\r\n            //Left end\r\n        hoopX = 60\r\n        hoopY = window.innerHeight * 0.75 - 100\r\n      }\r\n      else {\r\n          //Right end\r\n        hoopX = window.innerWidth * 0.60 - 60\r\n        hoopY = window.innerHeight * 0.75 - 100\r\n      }\r\n\r\n        // design the Basket \r\n\r\n      p5.noFill()\r\n      p5.stroke(0);\r\n      p5.strokeWeight(4);\r\n      p5.stroke(255, 140, 0);\r\n      p5.ellipse(hoopX, hoopY, radius * 3, radius / 2)\r\n      p5.stroke(0)\r\n      p5.fill(0, 0, 0)\r\n      // p5.quad(hoopX - radius*3/2 - radius/5, hoopY-radius/5, hoopX - radius*3/2 + radius*0.75 - radius/5, hoopY + radius/5, hoopX - radius*3/2 + radius*0.75 - radius/5, hoopY - radius*3 + radius/5, hoopX - radius*3/2 - radius/5, hoopY - radius*3 - radius/5)\r\n      ///  p5. line(hoopX - radius*3/2 + radius/10, hoopY, hoopX - radius*3/2 + radius/10,y_start+radius)\r\n      //rect(hoopX + radius*3/2,hoopY-radius*3, radius*0.75, radius*3)\r\n      p5.noFill()\r\n      //circle(440,100,5)\r\n      p5.stroke(255)\r\n      // line(440,100, 540,200)\r\n      // line(560, 100, 460, 200)\r\n      p5.stroke(0)\r\n\r\n      p5.strokeWeight(1);\r\n\r\n      p5.stroke(100)\r\n      p5.strokeWeight(4);\r\n      p5.line(hoopX - radius * 3 / 2, hoopY, hoopX - radius, hoopY + 3 * radius)\r\n      p5.line(hoopX + radius, hoopY + 3 * radius, hoopX + radius * 3 / 2, hoopY)\r\n      p5.line(hoopX + radius * 3 / 2, hoopY, (hoopX - radius * 3 / 2 + hoopX - radius) / 2, hoopY + radius * 3 / 2)\r\n      p5.line(hoopX - radius * 3 / 2, hoopY, (hoopX + radius * 3 / 2 + hoopX + radius) / 2, hoopY + radius * 3 / 2)\r\n      p5.line((hoopX - radius * 3 / 2 + hoopX - radius) / 2, hoopY + radius * 3 / 2, hoopX + radius, hoopY + 3 * radius)\r\n      p5.line((hoopX + radius * 3 / 2 + hoopX + radius) / 2, hoopY + radius * 3 / 2, hoopX - radius, hoopY + 3 * radius)\r\n      p5.stroke(0)\r\n      p5.strokeWeight(1)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const questionandanswer = (p5) => {\r\n\r\n\r\n    //display the questions\r\n    p5.textSize(26);\r\n    p5.fill(0, 102, 153);\r\n    p5.textAlign(p5.CENTER, p5.CENTER);\r\n    \r\n   p5 .textFont('Cursive')\r\n    p5.text('Task :: Pick and Throw the apple in \\nright basket', (window.innerWidth * 0.6) / 2, 40);\r\n\r\n\r\n\r\n    // check if thre's any apple on the screen\r\n    balls.forEach(element => {\r\n      if (element.x_cord > 0 && element.y_cord > 0 && answer) {\r\n        answer_remaining = true\r\n      }\r\n    });\r\n\r\n\r\n    // if there's no apple on the screen and will display the win message\r\n    if (!answer_remaining) {\r\n      p5.textSize(26);\r\n      p5.fill(0, 153, 0);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('You Won ✓', window.innerWidth * 0.6 / 2, 80)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Play again ↻', 20, 20)\r\n      playagain = true\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const dropball = (p5) => {\r\n\r\n\r\n\r\n    balls.forEach(element => {\r\n\r\n      // check if the apple dropes in he left basket with their coordinates\r\n      if (element.x_cord > 0 && element.x_cord < 120 && element.y_cord > window.innerHeight * 0.75 - 120 && element.y_cord < window.innerHeight * 0.75) {\r\n        {\r\n          element.x_cord = -200;\r\n          element.y_cord = -200;\r\n\r\n          //check if the answer is true\r\n          if (element.number > 5)\r\n            answer = false\r\n          else {\r\n            \r\n            //increase the score\r\n            score++\r\n\r\n            answer_remaining = false\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n\r\n      // check if the apple dropes in the right basket with their coordinates\r\n      else if (element.x_cord > window.innerWidth * 0.60 - 120 && element.x_cord < window.innerWidth * 0.60 && element.y_cord > window.innerHeight * 0.75 - 120 && element.y_cord < window.innerHeight * 0.75) {\r\n        {\r\n          element.x_cord = -200;\r\n          element.y_cord = -200;\r\n          \r\n          //check if the answer is true\r\n          if (element.number < 5)\r\n            answer = false\r\n          else {\r\n            //increase the score\r\n            score++;\r\n            answer_remaining = false\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  const getmousetap = (p5) => {\r\n\r\n    let mouse_x;\r\n    let mouse_y;\r\n    //get the mouse tap and their x and y cordinates\r\n    if (p5.mouseIsPressed == true) {\r\n      mouse_x = p5.mouseX;\r\n      mouse_y = p5.mouseY;\r\n    }\r\n\r\n    // Check if the  previos answer is true \r\n    if (answer && !playagain) {\r\n     \r\n\r\n      //check all the apples which apples is tappes from their coordinates\r\n      balls.forEach(element => {\r\n        if (!tap && mouse_x > element.x_cord - 25 && mouse_x < element.x_cord + 25 && mouse_y > element.y_cord - 25 && mouse_y < element.y_cord + 25) {\r\n\r\n\r\n\r\n          const index = balls.indexOf(element);\r\n       //   if tapped get the index of apple a\r\n          if (index > -1) {\r\n            moving_ball = index\r\n          }\r\n          tap = true\r\n        }\r\n      });\r\n    }\r\n\r\n    // check if play again or retry is pressed from their coordinates\r\n    else if ((playagain || !answer) && mouse_x > 20 && mouse_x < 120\r\n      && mouse_y > 20 && mouse_y < 40) {\r\n      restart = true\r\n      answer = true\r\n      playagain = false\r\n      score = 0\r\n    }\r\n\r\n    // check if previous answer is wrong then display wrong answer message\r\n    else if (!answer) {\r\n      p5.fill(157, 0, 0);\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 75)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n  }\r\n\r\n  const showBalls = (p5) => {\r\n\r\n    p5.fill('#000')\r\n    // p5.circle(0,(window.innerHeight*0.75),300,300)\r\n    // p5.circle((window.innerWidth*0.6),(window.innerHeight*0.75/1),300 ,300)\r\n \r\n      // Draw all the apples\r\n    balls.forEach(element => {\r\n      p5.fill('#ADC5' + element.color + '1'\r\n      )\r\n      drawApple(p5, element.x_cord, element.y_cord)\r\n    });\r\n\r\n    p5.fill('#555')\r\n    p5.text('< 5', 60, window.innerHeight * 0.75 - 130)\r\n    p5.text('> 5', window.innerWidth * 0.60 - 60, window.innerHeight * 0.75 - 130)\r\n\r\n\r\n    // Draw all the numbers on the apples\r\n    balls.forEach(element => {\r\n      p5.fill('#fff')\r\n      p5.text(element.number, element.x_cord, element.y_cord)\r\n    });\r\n\r\n\r\n  }\r\n\r\n  function drawApple(p5, x, y) {\r\n\r\n    // The apples Sketch\r\n    p5.noStroke();\r\n    p5.push();\r\n    p5.translate(x, y);\r\n    p5.fill(204, 55, 51);\r\n    p5.ellipseMode(p5.CENTER);\r\n    p5.ellipse(0, 0, 60, 55);\r\n    p5.stroke(78, 38, 0);\r\n    p5.strokeWeight(5);\r\n    p5.line(-5, -45, 0, -25);\r\n    p5.noStroke();\r\n    p5.rotate(p5.radians(-30));\r\n    p5.fill(39, 166, 21);\r\n    p5.ellipse(7, -33, 15, 25)\r\n    p5.pop();\r\n  }\r\n\r\n  const restartSetup = (p5) => {\r\n\r\n    // When play again or retry is pressed\r\n    let j = 0\r\n    for (let i = 0; i < 9; i++) {\r\n\r\n      if (i == 5) {\r\n        j++;\r\n      }\r\n      //all the apples get the cordinates and and their numbers in array\r\n      balls[i].x_cord = window.innerWidth * 0.6 - (60 * (j + 1))//:window.innerWidth*0.6/2+100,\r\n      balls[i].y_cord = i % 2 == 0 ? window.innerHeight * 0.75 / 2 - 100 : window.innerHeight * 0.75 / 2\r\n      balls[i].color = p5.floor(p5.random(1, 5))\r\n      balls[i].number = j\r\n\r\n\r\n\r\n      j++;\r\n\r\n    }\r\n    restart = false\r\n  }\r\n  const startSetup = (p5) => {\r\n\r\n    // Executes only first time to push the array with new numbers and coordinates\r\n    for (let i = 0; i < 10; i++) {\r\n\r\n      if (i == 5) {\r\n\r\n      } else {\r\n        balls.push({\r\n\r\n          'x_cord': window.innerWidth * 0.6 - (60 * (i + 1)),//:window.innerWidth*0.6/2+100,\r\n          'y_cord': i % 2 == 0 ? window.innerHeight * 0.75 / 2 - 100 : window.innerHeight * 0.75 / 2,\r\n          'color': p5.floor(p5.random(1, 5)),\r\n          'number': i\r\n\r\n        })\r\n      }\r\n\r\n    }\r\n    start = false\r\n  }\r\n\r\n  const mouseDragged = (p5) => {\r\n    let mouse_x = p5.mouseX;\r\n    let mouse_y = p5.mouseY;\r\n\r\n    // when is mouse is moving and is grabbing the apple\r\n    if (answer) {\r\n      balls.forEach(element => {\r\n        const index = balls.indexOf(element);\r\n        if (index > -1) {\r\n          if (tap && index === moving_ball) {\r\n            //is taped the ball assign the mouse cordinates to the apple\r\n            element.x_cord = mouse_x;\r\n            element.y_cord = mouse_y\r\n          }\r\n\r\n        }\r\n\r\n\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  const mouseReleased = () => {\r\n    // when mouse is released\r\n    tap = false\r\n  }\r\n\r\n\r\n  return <Sketch setup={setup}\r\n    draw={draw}\r\n    mouseDragged={mouseDragged}\r\n    mouseReleased={mouseReleased}\r\n\r\n\r\n  />;\r\n};","export default __webpack_public_path__ + \"static/media/logo22.22684768.jpeg\";","import React, { Component,useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {Form, Button, Container, Card, Col, Row} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css'\r\nimport {signin} from './actions/auth'\r\nimport logo from './logo22.jpeg'\r\n\r\n\r\nimport {useDispatch,connect} from 'react-redux'\r\nimport axios from 'axios';\r\n\r\n  const Login=(props)=>{ \r\n\r\n    const [nickname,setNickname]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const [logined,setLogin]=useState(false)\r\n    \r\n    const [error,seterror]=useState(false)\r\n    \r\n    const [errorS,seterrorMessage]=useState('')\r\n   const handlesubmit=async(e)=>{\r\n        e.preventDefault();\r\n     //  this.props.signin (this.state.nickname)\r\n     const config = {\r\n        headers: {\r\n            \"X-Requested-With\": \"XMLHttpRequest\"\r\n        }\r\n      }\r\n      if(nickname ==''){\r\n        seterror(true)\r\n        seterrorMessage('Nickname is required')   \r\n        return  \r\n    }\r\n      if(password===''){\r\n            \r\n        seterror(true)\r\n        seterrorMessage('Password is required')     \r\n        return\r\n    }else{\r\n        \r\n        seterror(false)\r\n        seterrorMessage('')  \r\n    }\r\n    await axios.post('https://frozen-island-11321.herokuapp.com/https://testcccvd.herokuapp.com/login'\r\n     ,{\r\n        'nickname': nickname\r\n     }, config)\r\n\r\n     .then(async function(response) {\r\n         console.log(response)\r\n        if(response.statusText==='OK'){\r\n           \r\n    props.history.push('/home')\r\n    }\r\n        else if(response.status===201){\r\n            \r\n        seterror(true)\r\n        seterrorMessage('No User with this nickname exits') \r\n        }\r\n\r\n         \r\n\t}).catch(function(e){\r\n        \r\n        seterror(true)\r\n        seterrorMessage(e) \r\n\t \tconsole.log(e);\r\n\t});\r\n \r\n\t \t \r\n     \r\n     // this.props.history.push('/home') \r\n       }\r\n      const nicknamehandler = event =>{\r\n         setNickname( event.target.value)\r\n    }\r\n   const passwordhandler = (event) =>{\r\n    setPassword( event.target.value)\r\n    }  \r\n        return (\r\n            <div className=\"formcontainer modal-dialog-centered\">\r\n              \r\n              <div>\r\n                <img className=\"logo\" src={logo} alt=\"logo\"/>\r\n                </div>  <div className=\"formarea rounded-lg shadow-lg\">\r\n                \r\n                    <Form className=\"form\" onSubmit={handlesubmit}> \r\n                        <h3 className=\"align-items-center text-primary text-danger mb-3 p-3 text-center\">Login</h3>\r\n                      \r\n                        {\r\n                    error?<p style={{\r\n                        color:'red'\r\n                    }}>{errorS}</p>:<p></p>\r\n                    }\r\n                        <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Nickname:</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"jerry\" value={nickname} onChange={nicknamehandler} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-2\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password:</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={passwordhandler}/>\r\n                        </Form.Group>\r\n                        \r\n                        <Button className=\" mt-2 btn-block bg-danger w-100\" type=\"submit\">\r\n                            Login\r\n                        </Button>\r\n                        <div className=\"text-center m-sm-3\">\r\n                            Create a new Account <Link to=\"/signup\">Sign up</Link>\r\n                            </div> \r\n                    </Form>\r\n                </div>\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n \r\n\r\nexport default  Login;","import React, { Component,useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {Form, Button, Container, Card, Col, Row} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css'\r\n\r\nimport logo from './logo22.jpeg'\r\nimport axios from 'axios';\r\n\r\nconst Signup=(props)=>{\r\n\r\n    const [email,setemail]=useState('')\r\n    const [pass,setpass]=useState('')\r\n    const [nickname,setnickname]=useState('')\r\n    const [error,seterror]=useState(false)\r\n    \r\n    const [errorS,seterrorMessage]=useState('')\r\n\r\n    const signupHandle=async(e)=>{\r\n\r\n        const config = {\r\n            headers: {\r\n                \"X-Requested-With\": \"XMLHttpRequest\"\r\n            }\r\n          }\r\n        if(nickname ==''){\r\n            seterror(true)\r\n            seterrorMessage('Nickname is required')   \r\n            return  \r\n        }\r\n        if(email===''){\r\n            \r\n            seterror(true)\r\n            seterrorMessage('enter valid email') \r\n            return\r\n        }\r\n        else{\r\n        const rr =   validateEmail(email)\r\n        if(!rr){\r\n            \r\n            seterror(true)\r\n        seterrorMessage('enter valid email') \r\n        return\r\n        }}\r\n        if(pass===''){\r\n            \r\n            seterror(true)\r\n            seterrorMessage('Password is required')     \r\n            return\r\n        }else{\r\n            \r\n            seterror(false)\r\n            seterrorMessage('')  \r\n        }\r\n        await axios.post('https://frozen-island-11321.herokuapp.com/https://testcccvd.herokuapp.com/signup'\r\n        ,{\r\n           'nickname': nickname\r\n        }, config)\r\n   \r\n        .then(async function(response) {\r\n            console.log(response)\r\n           if(response.statusText==='OK'){\r\n              \r\n       props.history.push('/home')\r\n       } \r\n   \r\n            \r\n       }).catch(function(e){\r\n            console.log(e);\r\n       });\r\n    \r\n\r\n    }\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n        return (\r\n            <div className=\"formcontainer modal-dialog-centered\">\r\n               \r\n               <div>\r\n                <img className=\"logo\" src={logo} alt=\"logo\"/>\r\n                </div>  \r\n                \r\n                 <div className=\"formarea rounded-lg shadow-lg\">\r\n                \r\n                    <Form className=\"form\"  > \r\n               \r\n\r\n\r\n                    <h3 className=\"align-items-center text-primary mb-1 p-3 text-danger text-center\">Sign up</h3>\r\n                    {\r\n                    error?<p style={{\r\n                        color:'red'\r\n                    }}>{errorS}</p>:<p></p>\r\n                    }\r\n\r\n                        <Form.Group className=\"mb-2\" controlId=\"formBasicnickname\">\r\n                            <Form.Label>Nickname:</Form.Label>\r\n                            <Form.Control class=\"form-control input-sm\" type=\"text\"value={nickname} onChange={(e)=>setnickname(e.target.value)} \r\n                             placeholder=\"jerry\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address:</Form.Label>\r\n                            <Form.Control class=\"form-control input-sm\" type=\"email\" value={email} onChange={(e)=>setemail(e.target.value)}  placeholder=\"example@example.com\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-2\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password:</Form.Label>\r\n                            <Form.Control class=\"form-control input-sm\" type=\"password\"value={pass} onChange={(e)=>setpass(e.target.value)}  placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Button className=\"mt-2 btn-block bg-danger w-100\" onClick={signupHandle}  >\r\n                            Login\r\n                        </Button>\r\n                        <div className=\"text-center m-sm-3\">\r\n                            Already have account? <Link to=\"/\">Sign in</Link>\r\n                            </div>   \r\n                    </Form>\r\n                </div>\r\n          </div>\r\n        );\r\n    }\r\n \r\n\r\nexport default Signup;","import React, { Component } from 'react';\r\nimport Sketch from 'react-p5'\r\n\r\nclass Game1 extends Component {\r\n    width =0;\r\n    height =0;\r\n     initial = true; \r\n     equ=[];    // holds the question of all blocks\r\n     anw=[];    // holds the answer of all blocks\r\n     hosX =0;\r\n     hosY =0;\r\n     balX =0;\r\n     balY =0;\r\n     bans = 0;  //bans -> ball answer\r\n     rise =0;   //increment veriable to move ball in y direction\r\n     run=0;   //increment veriable to move ball in x direction\r\n     mball = {\r\n        X: 0,\r\n        Y: 0,\r\n        val: 0\r\n      };    //mball -> moving ball\r\n      thit = [];    // hold the hit array as global\r\n      youlose = false;\r\n      youwin = true;\r\n            setup = (p5, canvasParentRef) => {\r\n                this.width = window.innerWidth*0.6;  //sets console width to 60% of the screen\r\n                this.height = window.innerHeight*0.75;  //sets console height to 75% of the screen\r\n                p5.createCanvas(this.width, this.height).parent(canvasParentRef);\r\n            };\r\n        \r\n            draw = (p5) => {\r\n                p5.background(255, 241, 208)\r\n                .fill(0,0,102)\r\n                .textSize(25)\r\n                .textFont('Cursive')\r\n                .text(\"Task :: Hit the target with right answer.\", 20, 60);\r\n                let num = (this.width/150)-1;\r\n                let sign = ['+','-'];\r\n                this.hosX = this.width/2 - 30;  //ball bank x-y coordinates\r\n                this.hosY = this.height - 60;\r\n                // this if runs every one the game restart\r\n                if(this.initial){\r\n                    this.balX = this.hosX + 30 ;    //ball x-y coordinates\r\n                    this.balY = this.hosY + 30 ;\r\n                    let eq =[];\r\n                    let ans = [];\r\n                    let hit = [];  //store true if the block gets hit by the ball\r\n                    for(let i=0;i<num;i++){\r\n                        \r\n                        hit.push(false);      //initialize with false \r\n                        let a = p5.int(p5.random(49));  //a and b of question equation\r\n                        let b = p5.int(p5.random(49));\r\n                        let si = p5.int(p5.random(2));  // operation between a and b (+ or -)\r\n                        if(a>b){  // always puts the greater number first to avoid negtive answer\r\n                        eq.push(a+sign[si]+b)\r\n                        }else{\r\n                            a=a+b;\r\n                            b=a-b;\r\n                            a=a-b;\r\n                        eq.push(a+sign[si]+b)\r\n                        }\r\n                     if(sign[si]==='+') //store the answer of each block in array\r\n                        ans.push(a+b);\r\n                        else\r\n                        ans.push(a-b);\r\n                    }\r\n                    this.thit= hit;// set to that global variables\r\n                    this.equ = eq;\r\n                    this.anw = ans;\r\n                    this.mball.X = this.balX; //initial position of moving ball is same is static ball\r\n                    this.mball.Y = this.balY;\r\n                    this.initial = false;\r\n                    this.bans = p5.random(this.anw);// value of the ball always selected form the answer array\r\n                }\r\n                p5\r\n                .textSize(22)\r\n                .fill(0,0,102)\r\n                .text(this.bans,this.hosX+20,this.hosY-5);\r\n                for(let i=0;i<num;i++){ // this for loop displays the blocks\r\n                \r\n                    if(!this.thit[i]){  //if the corresponding hit of the block is true-> do not show the block-> means block is popped\r\n                    p5.fill(204,204,0)\r\n                    .noStroke()\r\n                    .rect((i*150)+i*20,100, 135, 50)\r\n                    .fill(50,50,255)\r\n                    .textSize(20)\r\n                    .textFont('Helvetica')\r\n                    .text(this.equ[i]+\"=?\", (i*150)+i*20+35, 130);  //question equation on the block\r\n                    \r\n                    if(this.mball.X >= (i*150)+i*20 && this.mball.X <= (i*150)+(i*20)+135 && this.mball.Y <=150 && this.anw[i]===this.mball.val)// if the ball hits the (i)block and value of block is the answer of the block \r\n                    this.thit[i] = true;    //stores that the (i)block is hit\r\n                    else if(this.mball.X >= (i*150)+i*20 && this.mball.X <= (i*150)+(i*20)+135 && this.mball.Y <=150)//block gets hit but value of ball is not the answer of the block.\r\n                    {\r\n                        this.youlose = true;    //player losses\r\n                    }\r\n                }\r\n                }\r\n                p5.fill(204,204,0)\r\n                .square(this.hosX,this.hosY,60,20,20,0,0)//render the ball bank\r\n                .fill(255,0,0)\r\n                .circle(this.balX,this.balY,20);        //render the static ball\r\n                this.mball.X+=this.run;   //moving ball x-y cord. adding x-y value in previous location\r\n                this.mball.Y+=this.rise;\r\n                if(this.mball.Y>100)    //if ball have not passed block than show it...otherwise dont.\r\n                p5.fill(255,0,0)\r\n                .circle(this.mball.X,this.mball.Y,20);\r\n                else{   //otherwise moving ball is static\r\n                    this.mball.X = this.balX;\r\n                    this.mball.Y = this.balY; \r\n                    this.rise=0;\r\n                this.run=0;\r\n                }\r\n                for(let i=0;i<num;i++){//if all the block got hit...player wins\r\n                    if(!this.thit[i]){  \r\n                        this.youwin = false;\r\n                        break;\r\n                    }else\r\n                    this.youwin = true;\r\n                }\r\n                if(this.youwin){//show the victory sign\r\n                    p5\r\n                .textSize(30)\r\n                .fill(0,153,0)\r\n                .text(\"You Win !\",(this.width/2)-60,this.height/2)\r\n                .text(\"Play Again ↻\",(this.width/2)-80,this.height/2+60);\r\n                }\r\n                if(this.youlose){\r\n                    p5\r\n                .textSize(30)\r\n                .fill(255,0,0)\r\n                .text(\"You Lose !\",(this.width/2)-60,this.height/2)\r\n                .text(\"Retry ↻\",(this.width/2)-40,this.height/2+60);\r\n                }else{\r\n\r\n                p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\r\n                let a = p5.atan2(p5.mouseY - this.balY, p5.mouseX - this.balX);//to rotae the ball bank pointer around the static ball but in the direction of mouse cursor\r\n                p5.translate(this.balX, this.balY);\r\n                p5.rotate(a)//rotate according to the calculation above\r\n                .fill(p5.mouseY,50,50)\r\n                .rect(55, -4, 100, 8);//all above rotates this rectangle...pointer of the ball bank\r\n                }\r\n            };\r\n            mouseClicked = (p5) =>{\r\n               if(this.youlose || this.youwin){//if any victory or lost sign is showing ...remove them\r\n                    this.youlose = false;\r\n                   this.initial = true;//restart game by resting all the variable \r\n                       \r\n               }else{\r\n                this.mball.val = this.bans; //value of the moving ball\r\n                this.mball.X = this.balX;\r\n                this.mball.Y = this.balY;\r\n                this.rise=0;\r\n                this.run=0;\r\n                this.rise = (p5.mouseY-this.balY)/10;//direction of the ball calculated in the mouse direction\r\n                this.run  = (p5.mouseX-this.balX)/10; \r\n                let prev = this.bans;\r\n                do {\r\n                   this.bans = p5.random(this.anw); \r\n                } while (this.bans === prev);   //avoid to repeat previous answer\r\n                \r\n               }\r\n            }\r\n        render(){\r\n            return <Sketch \r\n            setup={this.setup} \r\n            draw={this.draw} \r\n            mouseClicked={this.mouseClicked.bind(this)}\r\n            />;\r\n        }\r\n        \r\n    \r\n}\r\n\r\nexport default Game1;","import React, { Component } from 'react';\r\nimport Sketch from 'react-p5'\r\n\r\nclass Game2 extends Component {\r\n    width =0;\r\n    height =0;\r\n    initial = true;\r\n    clr = [0,0,0,0];\r\n    ques = [];\r\n    frac =0;\r\n    fracangle =0;\r\n    ra=0;\r\n    rb=0;\r\n    rc=0;\r\n    rd=0;\r\n    roll = false;\r\n    n=1;\r\n    i=0;\r\n    milli = 0;\r\n    shape = \"\";\r\n    angi =0;\r\n    hit = [];\r\n    scr =0;\r\n    youlose = false;\r\n    youwin = false;\r\n    rolled = false;\r\n    \r\n            setup = (p5, canvasParentRef) => {\r\n                this.width = window.innerWidth*0.6;\r\n                this.height = window.innerHeight*0.75;\r\n                p5.createCanvas(this.width, this.height).parent(canvasParentRef);\r\n            };\r\n        \r\n            draw = (p5) => {\r\n                p5.background(255, 241, 208)\r\n                .fill(0,0,102)\r\n                .textSize(25)\r\n                .textFont('Cursive')\r\n                .text(\"Task :: Roll the dice and mark the fraction.\", 20, 60);\r\n                \r\n                if(this.initial){\r\n                    let hitl = []; //holds the sector click\r\n                    let quesl = []; //holds the questions on dice localy\r\n                    this.clr = [0,0,0,0];\r\n                    this.roll = false;// means if dice is rolling\r\n                    this.rolled = false;//means that dice rolling is completed\r\n                    this.angi=0;\r\n                    this.frac = p5.int(p5.random(5,9)); //calculate the total fraction\r\n                    this.ra = p5.int(p5.random(1,this.frac)); //nominator 1\r\n                    do{\r\n                        this.rb = p5.int(p5.random(1,this.frac));\r\n                    }\r\n                    while(this.rb===this.ra);//nominator 2---repeat if same from any previous\r\n                    do{\r\n                        this.rc = p5.int(p5.random(1,this.frac));\r\n                    }\r\n                    while(this.rc===this.ra || this.rc===this.rb);//nominator of 3rd fraction---repeat if same from any previous\r\n                    do{\r\n                        this.rd = p5.int(p5.random(1,this.frac));\r\n                    }\r\n                    while(this.rd===this.ra || this.rd===this.rb || this.rd===this.rc);//nominator 4th fraction---repeat if same from any previous\r\n                    this.shape = p5.random([\"cir\",\"rect\"]);\r\n\r\n                    quesl.push(this.ra+'/'+this.frac)//add the above calculated fractions in array\r\n                    quesl.push(this.rb+'/'+this.frac)\r\n                    quesl.push(this.rc+'/'+this.frac)\r\n                    quesl.push(this.rd+'/'+this.frac)\r\n                    this.ques = quesl;//copy to global\r\n                    for(let i=0;i<this.frac;i++){\r\n                        hitl.push(false);//\r\n                    }\r\n                    this.hit = hitl;//initializa hit with false\r\n                    this.fracangle = 360/ this.frac; //divide circle into number of fractions\r\n                    this.scr =0;//hold score\r\n                    this.initial = false;\r\n                }\r\n                p5.fill(204,204,this.clr[0])\r\n                .rect((this.width/2)-70,100, 70, 70)//dice 1\r\n                .fill(50,50,255)\r\n                    .textSize(20)\r\n                    .textFont('Helvetica')\r\n                    .text(this.ques[0],(this.width/2)-70+20,100+45)\r\n                .fill(204,204,this.clr[1])\r\n                .rect((this.width/2),100, 70, 70)//dice 2\r\n                .fill(50,50,255)\r\n                    .text(this.ques[1],(this.width/2)+20,100+45)\r\n                .fill(204,204,this.clr[2])\r\n                .rect((this.width/2),100+70, 70, 70)//dice 3\r\n                .fill(50,50,255)\r\n                    .text(this.ques[2],(this.width/2)+20,100+70+45)\r\n                .fill(204,204,this.clr[3])\r\n                .rect((this.width/2)-70,100+70, 70, 70)//dice 4\r\n                .fill(50,50,255)\r\n                    .text(this.ques[3],(this.width/2)-70+20,100+70+45);//show the fraction above the dice\r\n                \r\n                    p5.textSize(22)\r\n                    .textFont('Cursive')\r\n                    .fill(255,128,0)\r\n                    .rect((this.width - this.width/4),115, 150, 50,30)\r\n                    .fill(50,50,255)\r\n                    .text(\"Roll\",(this.width - this.width/4 + 60),150)//rool button area\r\n                    p5.fill(255,128,0)\r\n                    .rect((this.width - this.width/4),180, 150, 50,30)\r\n                    .fill(50,50,255)\r\n                    .text(\"OK\",(this.width - this.width/4) + 60,215)//ok button\r\n\r\n                if(this.roll){// if currently is rolling\r\n                    if(p5.millis()>this.milli){\r\n                       this.milli = p5.int(p5.millis())+(2^this.n);  //time after color updates---increase exponentialy each time\r\n                       \r\n                       this.clr[0] = 0;               \r\n                       this.clr[1] = 0;               \r\n                       this.clr[2] = 0;               \r\n                       this.clr[3] = 0;               \r\n\r\n                       this.clr[this.i] = 200;  //sets perticular dice color\r\n                       \r\n                       \r\n                       if((2^this.n)>200){//if dice is bieng rolling for sepecific time\r\n                        if(this.i === this.rand){\r\n                            this.roll=false;//stop the rolling\r\n                        }\r\n                       }\r\n                       this.n+=5;\r\n                       this.i++;\r\n                       if(this.i>3)  \r\n                       this.i=0;  \r\n                        }\r\n                    }\r\n\r\n                    if(this.youwin){//if player win\r\n                        p5\r\n                    .textSize(30)\r\n                    .fill(0,153,0)\r\n                    .text(\"You Win !\",(this.width/4)-60,150)\r\n                    .text(\"Play Again ↻\",(this.width/4)-80,215);\r\n                    }else if(this.youlose){\r\n                        p5\r\n                    .textSize(30)\r\n                    .fill(255,0,0)\r\n                    .text(\"You Lose !\",(this.width/4)-60,150)\r\n                    .text(\"Retry ↻\",(this.width/4)-40,215);\r\n                    }\r\n\r\n                    p5.fill(102,178,255);\r\n                    if(this.shape===\"cir\"){//if selected shape is circle\r\n                       for(let i=0;i< this.frac;i++){\r\n                        if(this.hit[i])\r\n                        p5.fill(0,0,255);\r\n                        else\r\n                        p5.fill(102,178,255);\r\n                        p5.arc(this.width/2, p5.int(this.height*0.7), 150, 150, p5.radians(this.angi), p5.radians(this.angi+this.fracangle), p5.PIE); \r\n                        this.angi+=this.fracangle;\r\n                     }\r\n                     }else if(this.shape ===\"rect\"){// else slected shape in rectangle\r\n                        for(let i=0;i< this.frac;i++){\r\n                            if(this.hit[i])\r\n                            p5.fill(0,0,255);\r\n                            else\r\n                            p5.fill(102,178,255);\r\n                            p5.rect(this.width/2-(this.width*0.6)/2 + i*(this.width*0.6)/this.frac,p5.int(this.height*0.7)-50,(this.width*0.6)/this.frac,100)\r\n                         }\r\n                     }\r\n                     \r\n            };\r\n            isInsideSector(point, center, radius, angle1, angle2) {//check which sector of cirle is clicked\r\n                \r\n                function areClockwise(center, radius, angle, point2) {\r\n                    \r\n                  var point1 = {\r\n                    x : (center.x + radius) * Math.cos(angle),\r\n                    y : (center.y + radius) * Math.sin(angle)\r\n                  };\r\n                  return -point1.x*point2.y + point1.y*point2.x > 0;\r\n                }\r\n              \r\n                var relPoint = {\r\n                  x: point.x - center.x,\r\n                  y: point.y - center.y\r\n                };\r\n              \r\n                return !areClockwise(center, radius, angle1, relPoint) &&\r\n                       areClockwise(center, radius, angle2, relPoint) &&\r\n                       (relPoint.x*relPoint.x + relPoint.y*relPoint.y <= radius * radius);\r\n              }\r\n            mouseClicked = (p5) =>{\r\n                if(this.youlose || this.youwin){//if any wanrnig of win and lose is showing \r\n                    this.youlose = false;\r\n                    this.youwin = false;\r\n                   this.initial = true;//reset variables\r\n                       \r\n               }else if(p5.mouseX > (this.width - this.width/4) && p5.mouseX < (this.width - this.width/4)+150\r\n                && p5.mouseY > 115 && p5.mouseY < 165){//if mouse is clicked on roll button\r\n                this.roll = true;\r\n                this.rolled = true;\r\n                this.n =1;\r\n                this.milli = p5.millis() + 2^this.n; \r\n                this.rand = p5.random([0,1,2,3]);\r\n                }else if(p5.mouseX > (this.width - this.width/4) && p5.mouseX < (this.width - this.width/4)+150\r\n                && p5.mouseY > 180 && p5.mouseY < 230){//if mouse is clicked on ok button\r\n                    this.scr=0;\r\n                    for(let i=0;i< this.frac;i++){//check if the highlighted sector are equal to given fraction\r\n                         if(this.hit[i]){\r\n                            this.scr++;\r\n                         }\r\n                       }\r\n                      \r\n                if(this.rand === 0){\r\n                    if(this.ra === this.scr){\r\n                    this.youwin = true\r\n                    this.youlose = false\r\n                    }else{\r\n                    this.youwin = false\r\n                    this.youlose = true\r\n                    }\r\n                }else if(this.rand === 1){\r\n                    if(this.rb === this.scr){\r\n                        this.youwin = true\r\n                        this.youlose = false\r\n                        }else{\r\n                        this.youwin = false\r\n                        this.youlose = true\r\n                        }\r\n                }else if(this.rand === 2){\r\n                    if(this.rc === this.scr){\r\n                        this.youwin = true\r\n                        this.youlose = false\r\n                        }else{\r\n                        this.youwin = false\r\n                        this.youlose = true\r\n                        }\r\n                }else if(this.rand === 3){\r\n                    if(this.rd === this.scr){\r\n                        this.youwin = true\r\n                        this.youlose = false\r\n                        }else{\r\n                        this.youwin = false\r\n                        this.youlose = true\r\n                        }\r\n                } \r\n                \r\n            }else if(!this.roll && this.rolled){//block or cirle is highlighted only after the dice is completelley rolled\r\n                if(this.shape === \"cir\"){\r\n                    for(let i=0;i< this.frac;i++){\r\n                        var point = { x: p5.mouseX, y: p5.mouseY };\r\n                         \r\n                        var piecenter = { x: this.width/2, y: p5.int(this.height*0.7) };\r\n                        if(this.isInsideSector(point,piecenter,75,p5.radians(this.angi),p5.radians(this.angi+this.fracangle))){\r\n                            this.hit[i] = !this.hit[i];\r\n                        }\r\n                        this.angi+=this.fracangle;\r\n                     }\r\n                }else if(this.shape === \"rect\"){\r\n                    for(let i=0;i< this.frac;i++){\r\n                     if(p5.mouseX >= this.width/2-(this.width*0.6)/2 + i*(this.width*0.6)/this.frac && p5.mouseX <= this.width/2-(this.width*0.6)/2 + i*(this.width*0.6)/this.frac + (this.width*0.6)/this.frac\r\n                        && p5.mouseY >= p5.int(this.height*0.7)-50 && p5.mouseY <= p5.int(this.height*0.7)-50 + 100 ){\r\n                         this.hit[i] = !this.hit[i];\r\n                     }\r\n                    }\r\n                }\r\n            }\r\n               \r\n            }\r\n        render(){\r\n            return <Sketch \r\n            setup={this.setup} \r\n            draw={this.draw} \r\n            mouseClicked={this.mouseClicked.bind(this)}\r\n            />;\r\n        }\r\n        \r\n    \r\n}\r\n\r\nexport default Game2;","import { getQueriesForElement } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n// Coordinates from where the snake starts\r\nlet x_start = 200;\r\nlet y_start = 200;\r\n// x and y cordinates array of the beads of snake \r\nlet x_cord = [];\r\nlet y_cord = [];\r\n// total beads of snake\r\nlet beats = 100;\r\n// Direction of snake \r\n//  1==>right\r\n// 2==> upwards\r\n// 3==>left\r\n// 4==>Down\r\nlet direction = 1;\r\nlet speed = 1;  //speed of snake\r\nlet changedirection = false;  // for changing the direction\r\nlet previous_direction = 2;\r\nlet collide = false;   //if snake collides with the outer walls\r\nlet food = [] // food array \r\nlet answer = true\r\nlet answers_remainig = true\r\nlet start = true\r\n\r\n\r\nexport default (props) => {\r\n\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n  };\r\n\r\n  const draw = (p5) => {\r\n\r\n\r\n    if (start) {\r\n      setupstart(p5) ///Runs only first time\r\n    }\r\n    p5.background(255, 241, 208);\r\n\r\n\r\n    update_snake(p5);//moves the snake \r\n    update_direction(p5);   // updates the direction if changed\r\n    check_collider(); //checks if snakes collide\r\n    questions_and_answers(p5);//dispaly the questions ans answrs\r\n\r\n\r\n    getMouseClick(p5)/// get the mouse click on the retry\r\n\r\n\r\n  };\r\n\r\n\r\n  const setupstart = (p5) => {\r\n\r\n    // First times push the food array with cordinates and the number \r\n    for (let i = beats; i > 0; i--) {\r\n      if (i == 1)\r\n        x_cord.push(x_start + 10)\r\n      else\r\n        x_cord.push(x_start - i);\r\n      y_cord.push(y_start)\r\n\r\n    }\r\n    for (let i = 0; i < 10; i++) {\r\n      food.push({\r\n        'x_cord': p5.floor(p5.random(10, (window.innerWidth * 0.6) / 10)) * 10,\r\n        'y_cord': p5.floor(p5.random(10, (window.innerHeight * 0.75) / 10)) * 10,\r\n        'number': p5.floor(p5.random(10, 99)),\r\n      })\r\n\r\n    }\r\n    start = false\r\n  }\r\n\r\n  const check_collider = () => {\r\n    let snake_head_x = x_cord[beats - 1];\r\n    let snake_head_y = y_cord[beats - 1];\r\n\r\n\r\n    //// Check if the snake collide with the canvas walls\r\n    if (snake_head_x < 0 || snake_head_x > window.innerWidth * 0.60 || snake_head_y < 0 || snake_head_y > window.innerHeight * 0.75) {\r\n      collide = true\r\n    }\r\n\r\n\r\n    food.forEach(element => {\r\n      if ((snake_head_x > element.x_cord - 15 && snake_head_x < element.x_cord + 15) && (snake_head_y > element.y_cord - 15 && snake_head_y < element.y_cord + 15)) {\r\n\r\n        // check if the snake get the right answer food\r\n        if (element.number % 2 == 0)\r\n          answer = false\r\n        else {\r\n\r\n          // const index = food.indexOf(element);\r\n          // if (index > -1) {\r\n          //   food.splice(index, 1);\r\n          // }\r\n          // answers_remainig=false;\r\n\r\n          // if the answer is right moves the food into the thirs axis tha will not be displayed on the screen\r\n          // and appears as the snake eated it \r\n          element.x_cord = -11\r\n          element.y_cord = -11\r\n          element.number = 2;\r\n          answers_remainig = false;\r\n        }\r\n      } else {\r\n\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const questions_and_answers = (p5) => {\r\n    // Display the questions \r\n    p5.textSize(26);\r\n    p5.fill(0, 102, 153);\r\n\r\n    p5.textAlign(p5.CENTER, p5.TOP);\r\n    \r\n    p5.textFont('Cursive')\r\n    p5.text('Task :: Let the snake eat the Odd numbers', (window.innerWidth * 0.6) / 2, 20);\r\n\r\n    // display all the numbers on the food present in the array \r\n    for (let i = 0; i < food.length; i++) {\r\n\r\n      p5.fill(255, 128, 0);\r\n      p5.circle(food[i].x_cord, food[i].y_cord, 30, 30);\r\n      p5.textSize(20);\r\n      p5.fill(0, 102, 153)\r\n\r\n      p5.textAlign(p5.CENTER, p5.CENTER);\r\n      p5.text(food[i].number, food[i].x_cord, food[i].y_cord)\r\n\r\n    }\r\n\r\n\r\n    food.forEach(element => {\r\n      // check if the answer is remaining\r\n      if (element.number % 2 != 0)\r\n        answers_remainig = true\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  const update_snake = (p5) => {\r\n    //p5.noStroke();        \r\n    /// Updates the snake position \r\n    p5.fill(157, 0, 0);\r\n    for (let index = 0; index < beats; index++) {\r\n      p5.circle(x_cord[index], y_cord[index], 10, 10);\r\n    }\r\n  }\r\n  const update_direction = (p5) => {\r\n\r\n    // if the snake present in the canvas and there's answer present there\r\n    if (!collide && answer && answers_remainig) {\r\n      switch (direction) {\r\n\r\n        // case 1 is the direcion in the right\r\n        case 1:\r\n          {\r\n            if (changedirection) {  // if direction is changed from previous direction\r\n              x_cord[beats - 1] += 10;\r\n              if (previous_direction == 2) // if previous direction is positive y axis\r\n                y_cord[beats - 1] += 10;\r\n              else       // if previous Direction is negative y axis\r\n                y_cord[beats - 1] -= 10;\r\n\r\n              changedirection = false;\r\n              previous_direction = 1;\r\n            }\r\n            for (let index = 0; index < beats; index++) {\r\n              if (index == beats - 1) {\r\n\r\n                x_cord[beats - 1] += speed;\r\n              }\r\n              else if (index == beats - 2) {\r\n\r\n                x_cord[index] = x_cord[index + 1] - 10;\r\n                y_cord[index] = y_cord[index + 1];\r\n\r\n              }\r\n\r\n              else {\r\n                x_cord[index] = x_cord[index + 1];\r\n                y_cord[index] = y_cord[index + 1];\r\n\r\n              }\r\n\r\n            }\r\n\r\n\r\n\r\n            changedirection = false;\r\n          }\r\n          break;\r\n\r\n        // case 2 is the direcion in the upwards\r\n        case 2:\r\n\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            y_cord[beats - 1] -= 10;\r\n            if (previous_direction == 3)// if previous direction is negative x axis\r\n              x_cord[beats - 1] += 10;\r\n            else    //if previous direction is positive x axis\r\n              x_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false\r\n            previous_direction = 2;\r\n          }\r\n\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              y_cord[beats - 1] -= speed;\r\n\r\n            }\r\n            else if (index + 1 == beats - 1) {\r\n\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1] + 10;\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n\r\n          changedirection = false;\r\n\r\n\r\n          break;\r\n\r\n        // case 3 is the direcion in the left\r\n        case 3:\r\n\r\n\r\n\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            x_cord[beats - 1] -= 10;\r\n            if (previous_direction == 2)// if previous direction is posiive y axis\r\n              y_cord[beats - 1] += 10;\r\n            else //if previous direction is negative y axis\r\n              y_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false;\r\n            previous_direction = 3;\r\n          }\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              x_cord[beats - 1] -= speed;\r\n            }\r\n            else if (index == beats - 2) {\r\n\r\n              x_cord[index] = x_cord[index + 1] + 10;\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n          changedirection = false;\r\n          break;\r\n\r\n        // case 4 is the direcion in the downwards\r\n        case 4:\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            y_cord[beats - 1] += 10;\r\n\r\n            if (previous_direction == 3)// if previous direction is negative x axis\r\n              x_cord[beats - 1] += 10;\r\n            else // if previous direction is posiive x axis\r\n              x_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false\r\n            previous_direction = 4;\r\n          }\r\n\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              y_cord[beats - 1] += speed;\r\n\r\n            }\r\n            else if (index + 1 == beats - 1) {\r\n\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1] - 10;\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n\r\n          changedirection = false;\r\n          break;\r\n\r\n\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    // if collided with canvas walls print message\r\n    else if (collide) {\r\n      p5.textSize(26);\r\n\r\n      p5.textFont('Cursive')\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      p5.text('Oops, Try again', window.innerWidth * 0.6 / 2, 50)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n\r\n    // if get the wrong answer\r\n    else if (!answer) {\r\n      p5.textSize(26);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n      p5.textFont('Cursive')\r\n      p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 50)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n\r\n    // if no answer remains\r\n    else if (!answers_remainig) {\r\n      p5.textSize(26);\r\n      p5.fill(0, 153, 0);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n      p5.textFont('Cursive')\r\n      p5.text('You Won ✓', window.innerWidth * 0.6 / 2, 50)\r\n    }\r\n  }\r\n\r\n\r\n  const getMouseClick = (p5) => {\r\n    let mouse_x;\r\n    let mouse_y;\r\n\r\n    //  get the mouse axis\r\n    if (p5.mouseIsPressed == true) {\r\n      mouse_x = p5.mouseX;\r\n      mouse_y = p5.mouseY;\r\n    }\r\n    if ((!answer || collide) && mouse_x > 20 && mouse_y > 20 && mouse_x < 100 && mouse_y < 40) {\r\n\r\n      // if pressed on retry or play again\r\n      for (let i = 0; i < 10; i++) {\r\n\r\n        food[i].x_cord = p5.floor(p5.random(10, (window.innerWidth * 0.6) / 10)) * 10\r\n        food[i].y_cord = p5.floor(p5.random(10, (window.innerHeight * 0.75) / 10)) * 10\r\n        food[i].number = p5.floor(p5.random(10, 99))\r\n\r\n\r\n      }\r\n      collide = false\r\n      answer = true\r\n\r\n      //reset the original direction and position\r\n      x_start = 200;\r\n      y_start = 200;\r\n      direction = 1\r\n      for (let i = beats; i > 0; i--) {\r\n        if (i == 1)\r\n          x_cord[i] = (x_start + 10)\r\n        else\r\n          x_cord[i] = (x_start - i);\r\n        y_cord[i] = (y_start)\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  const keyPressed = (p5) => {\r\n\r\n    // check which key is pressed\r\n    if (p5.keyCode === p5.LEFT_ARROW) {\r\n      if (direction !== 1 && direction !== 3) {\r\n        direction = 3;\r\n        changedirection = true;\r\n      }\r\n    } else if (p5.keyCode === p5.RIGHT_ARROW) {\r\n      if (direction !== 3 && direction !== 1) {\r\n        direction = 1;\r\n\r\n        changedirection = true;\r\n      }\r\n    }\r\n    else if (p5.keyCode === p5.UP_ARROW) {\r\n      if (direction !== 4 && direction !== 2) {\r\n        direction = 2;\r\n\r\n        changedirection = true;\r\n      }\r\n\r\n    }\r\n    else if (p5.keyCode === p5.DOWN_ARROW) {\r\n      if (direction !== 2 && direction !== 4) {\r\n        direction = 4;\r\n\r\n        changedirection = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return <Sketch setup={setup}\r\n    draw={draw}\r\n    keyPressed={keyPressed}\r\n    style={\r\n      {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        backgroundColor: '#FFF1D0',\r\n      }\r\n    }\r\n  />;\r\n};","import { getQueriesForElement } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n// Coordinates from where the snake starts\r\nlet x_start = 200;\r\nlet y_start = 200;\r\n// x and y cordinates array of the beads of snake \r\nlet x_cord = [];\r\nlet y_cord = [];\r\n// total beads of snake\r\nlet beats = 100;\r\n// Direction of snake \r\n//  1==>right\r\n// 2==> upwards\r\n// 3==>left\r\n// 4==>Down\r\nlet direction = 1;\r\nlet speed = 1;  //speed of snake\r\nlet changedirection = false;  // for changing the direction\r\nlet previous_direction = 2;\r\nlet collide = false;   //if snake collides with the outer walls\r\nlet food = [] // food array \r\nlet answer = true\r\nlet answers_remainig = true\r\nlet start = true\r\n\r\n\r\nexport default (props) => {\r\n\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n  };\r\n\r\n  const draw = (p5) => {\r\n\r\n\r\n    if (start) {\r\n      setupstart(p5) ///Runs only first time\r\n    }\r\n    p5.background(255, 241, 208);\r\n\r\n\r\n    update_snake(p5);//moves the snake \r\n    update_direction(p5);   // updates the direction if changed\r\n    check_collider(); //checks if snakes collide\r\n    questions_and_answers(p5);//dispaly the questions ans answrs\r\n    getMouseClick(p5)/// get the mouse click on the retry\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const setupstart = (p5) => {\r\n\r\n\r\n    // First times push the food array with cordinates and the number \r\n    for (let i = beats; i > 0; i--) {\r\n      if (i == 1)\r\n        x_cord.push(x_start + 10)\r\n      else\r\n        x_cord.push(x_start - i);\r\n      y_cord.push(y_start)\r\n\r\n    }\r\n    for (let i = 0; i < 10; i++) {\r\n      food.push({\r\n        'x_cord': p5.floor(p5.random(10, (window.innerWidth * 0.6) / 10)) * 10,\r\n        'y_cord': p5.floor(p5.random(10, (window.innerHeight * 0.75) / 10)) * 10,\r\n        'number': p5.floor(p5.random(10, 99)),\r\n      })\r\n\r\n    }\r\n    start = false\r\n\r\n  }\r\n  const check_collider = () => {\r\n    let snake_head_x = x_cord[beats - 1];\r\n    let snake_head_y = y_cord[beats - 1];\r\n\r\n\r\n    //// Check if the snake collide with the canvas walls\r\n    if (snake_head_x < 0 || snake_head_x > window.innerWidth * 0.6 || snake_head_y < 0 || snake_head_y > window.innerHeight * 0.75) {\r\n      collide = true\r\n    }\r\n\r\n\r\n    food.forEach(element => {\r\n      if ((snake_head_x > element.x_cord - 15 && snake_head_x < element.x_cord + 15) && (snake_head_y > element.y_cord - 15 && snake_head_y < element.y_cord + 15)) {\r\n\r\n        // check if the snake get the right answer food\r\n        if (element.number % 2 != 0)\r\n          answer = false\r\n        else {\r\n\r\n          // const index = food.indexOf(element);\r\n          // if (index > -1) {\r\n          //   food.splice(index, 1);\r\n          // }\r\n\r\n          // if the answer is right moves the food into the thirs axis tha will not be displayed on the screen\r\n          // and appears as the snake eated it \r\n          element.x_cord = -11\r\n          element.y_cord = -11\r\n          element.number = 1;\r\n          answers_remainig = false;\r\n        }\r\n      } else {\r\n\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const questions_and_answers = (p5) => {\r\n    // Display the questions \r\n    p5.textSize(26);\r\n    p5.fill(0, 102, 153);\r\n\r\n    p5.textAlign(p5.CENTER, p5.CENTER);\r\n    \r\n   p5 .textFont('Cursive')\r\n    p5.text('Task :: Let the snake eat the Even numbers', (window.innerWidth * 0.6) / 2, 20);\r\n\r\n    // display all the numbers on the food present in the array \r\n    for (let i = 0; i < food.length; i++) {\r\n\r\n      p5.fill(255, 128, 0);\r\n      p5.circle(food[i].x_cord, food[i].y_cord, 30, 30);\r\n      p5.textSize(20);\r\n      p5.fill(0, 102, 153)\r\n\r\n      p5.textAlign(p5.CENTER, p5.CENTER);\r\n      p5.text(food[i].number, food[i].x_cord, food[i].y_cord)\r\n\r\n    }\r\n\r\n\r\n    food.forEach(element => {\r\n      // check if the answer is remaining\r\n      if (element.number % 2 == 0)\r\n        answers_remainig = true\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  const update_snake = (p5) => {\r\n    //p5.noStroke();        \r\n    /// Updates the snake position \r\n    p5.fill(157, 0, 0);\r\n    for (let index = 0; index < beats; index++) {\r\n      p5.circle(x_cord[index], y_cord[index], 10, 10);\r\n    }\r\n  }\r\n  const update_direction = (p5) => {\r\n\r\n    // if the snake present in the canvas and there's answer present there\r\n    if (!collide && answer && answers_remainig) {\r\n      switch (direction) {\r\n\r\n        // case 1 is the direcion in the right\r\n        case 1:\r\n          {\r\n            if (changedirection) {  // if direction is changed from previous direction\r\n              x_cord[beats - 1] += 10;\r\n              if (previous_direction == 2)  // if previous direction is positive y axis\r\n                y_cord[beats - 1] += 10;\r\n              else      // if previous Direction is negative y axis\r\n                y_cord[beats - 1] -= 10;\r\n\r\n              changedirection = false;\r\n              previous_direction = 1;\r\n            }\r\n            for (let index = 0; index < beats; index++) {\r\n              if (index == beats - 1) {\r\n\r\n                x_cord[beats - 1] += speed;\r\n              }\r\n              else if (index == beats - 2) {\r\n\r\n                x_cord[index] = x_cord[index + 1] - 10;\r\n                y_cord[index] = y_cord[index + 1];\r\n\r\n              }\r\n\r\n              else {\r\n                x_cord[index] = x_cord[index + 1];\r\n                y_cord[index] = y_cord[index + 1];\r\n              }\r\n            }\r\n            changedirection = false;\r\n          }\r\n          break;\r\n\r\n        // case 2 is the direcion in the upwards\r\n        case 2:\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            y_cord[beats - 1] -= 10;\r\n            if (previous_direction == 3)// if previous direction is negative x axis\r\n              x_cord[beats - 1] += 10;\r\n            else  //if previous direction is positive x axis\r\n              x_cord[beats - 1] -= 10;\r\n            changedirection = false\r\n            previous_direction = 2;\r\n          }\r\n\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              y_cord[beats - 1] -= speed;\r\n\r\n            }\r\n            else if (index + 1 == beats - 1) {\r\n\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1] + 10;\r\n\r\n            }\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n            }\r\n          }\r\n\r\n\r\n          changedirection = false;\r\n\r\n          break;\r\n\r\n        // case 3 is the direcion in the left\r\n        case 3:\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            x_cord[beats - 1] -= 10;\r\n            if (previous_direction == 2)// if previous direction is posiive y axis\r\n              y_cord[beats - 1] += 10;\r\n            else //if previous direction is negative y axis\r\n              y_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false;\r\n            previous_direction = 3;\r\n          }\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              x_cord[beats - 1] -= speed;\r\n            }\r\n            else if (index == beats - 2) {\r\n\r\n              x_cord[index] = x_cord[index + 1] + 10;\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n          changedirection = false;\r\n          break;\r\n\r\n        // case 4 is the direcion in the downwards\r\n        case 4:\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            y_cord[beats - 1] += 10;\r\n\r\n            if (previous_direction == 3)// if previous direction is negative x axis\r\n              x_cord[beats - 1] += 10;\r\n            else // if previous direction is posiive x axis\r\n              x_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false\r\n            previous_direction = 4;\r\n          }\r\n\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              y_cord[beats - 1] += speed;\r\n\r\n            }\r\n            else if (index + 1 == beats - 1) {\r\n\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1] - 10;\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n\r\n          changedirection = false;\r\n          break;\r\n\r\n\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    // if collided with canvas walls print message\r\n    else if (collide) {\r\n      p5.textSize(26);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Oops, Try again', window.innerWidth * 0.6 / 2, 50)\r\n\r\n      p5 .textFont('Cursive')\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n\r\n    // if get the wrong answer\r\n    else if (!answer) {\r\n      p5.textSize(26);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 50)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n\r\n    // if no answer remains\r\n    else if (!answers_remainig) {\r\n      p5.textSize(26);\r\n      p5.fill(0, 153, 0);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('You Won ✓', window.innerWidth * 0.6 / 2, 50)\r\n    }\r\n  }\r\n\r\n\r\n  const getMouseClick = (p5) => {\r\n    let mouse_x;\r\n    let mouse_y;\r\n\r\n    //  get the mouse axis\r\n    if (p5.mouseIsPressed == true) {\r\n      mouse_x = p5.mouseX;\r\n      mouse_y = p5.mouseY;\r\n    }\r\n\r\n    // if pressed on retry or play again\r\n    if ((!answer || collide) && mouse_x > 20 && mouse_y > 20 && mouse_x < 100 && mouse_y < 40) {\r\n      for (let i = 0; i < 10; i++) {\r\n\r\n        food[i].x_cord = p5.floor(p5.random(10, (window.innerWidth * 0.6) / 10)) * 10\r\n        food[i].y_cord = p5.floor(p5.random(10, (window.innerHeight * 0.75) / 10)) * 10\r\n        food[i].number = p5.floor(p5.random(10, 99))\r\n\r\n\r\n      }\r\n      collide = false\r\n      answer = true\r\n\r\n      //reset the original direction and position\r\n      x_start = 200;\r\n      y_start = 200;\r\n      direction = 1\r\n      for (let i = beats; i > 0; i--) {\r\n        if (i == 1)\r\n          x_cord[i] = (x_start + 10)\r\n        else\r\n          x_cord[i] = (x_start - i);\r\n        y_cord[i] = (y_start)\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  const keyPressed = (p5) => {\r\n\r\n    // check which key is pressed\r\n    if (p5.keyCode === p5.LEFT_ARROW) {\r\n      if (direction !== 1 && direction !== 3) {\r\n        direction = 3;\r\n        changedirection = true;\r\n      }\r\n    } else if (p5.keyCode === p5.RIGHT_ARROW) {\r\n      if (direction !== 3 && direction !== 1) {\r\n        direction = 1;\r\n\r\n        changedirection = true;\r\n      }\r\n    }\r\n    else if (p5.keyCode === p5.UP_ARROW) {\r\n      if (direction !== 4 && direction !== 2) {\r\n        direction = 2;\r\n\r\n        changedirection = true;\r\n      }\r\n\r\n    }\r\n    else if (p5.keyCode === p5.DOWN_ARROW) {\r\n      if (direction !== 2 && direction !== 4) {\r\n        direction = 4;\r\n\r\n        changedirection = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return <Sketch setup={setup}\r\n    draw={draw}\r\n    keyPressed={keyPressed}\r\n    style={\r\n      {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        backgroundColor: '#FFF1D0',\r\n      }\r\n    }\r\n  />;\r\n};","import { getQueriesForElement } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nlet shape = []; //shapes array contain multiple shapes\r\nlet speed = 1  // speed from which they comes down\r\nlet score = 0\r\nlet answer = true;  // if previous answer is true\r\nlet ques_shape = 1;   // correct answer shape\r\nlet change_ques = false  // to change the question\r\nlet next_shapes = false;   // setup the next shape\r\nlet dropped = false      // if correct shape is dropped\r\nlet start = true\r\n\r\nexport default (props) => {\r\n\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n        // use parent to render the canvas in this ref\r\n        // (without that p5 will render the canvas outside of your component)\r\n        p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n    };\r\n\r\n    const draw = (p5) => {\r\n\r\n\r\n\r\n        if (start) {\r\n            setupstart(p5)   // runs only first time\r\n        }\r\n        p5.background(255, 241, 208);\r\n\r\n        shapes(p5)   // display the shapes \r\n        getMouseClick(p5)  // get the mouse tap\r\n        questions_and_answers(p5);  //display the shapes\r\n\r\n        moveShapes(p5)  // move the shapes\r\n    };\r\n\r\n\r\n    const setupstart = (p5) => {\r\n        // runs only first time\r\n\r\n        // assign the shapes in the shape array with their position coordinates\r\n        for (let i = 1; i <= 3; i++) {\r\n            shape.push({\r\n                'x_cord': i === 1 ? window.innerWidth * 0.1 : i === 2 ? window.innerWidth * 0.3 : window.innerWidth * 0.5,\r\n                'y_cord': 10,\r\n                'shape': p5.floor(p5.random(1, 7))\r\n            })\r\n\r\n        }\r\n        //correct answer shape\r\n        ques_shape = p5.floor(p5.random(1, 7))\r\n\r\n        //adding the correct shape in the options\r\n        let ans = p5.floor(p5.random(1, 4))\r\n        for (let i = 0; i < 3; i++) {\r\n            if (i === ans - 1)\r\n                shape[i].shape = ques_shape\r\n        }\r\n        start = false\r\n\r\n    }\r\n    const questions_and_answers = (p5) => {\r\n\r\n        let shape_name;\r\n        // if question is changes or selcted the right answer\r\n        if (change_ques && next_shapes) {\r\n            ques_shape = p5.floor(p5.random(1, 7))\r\n            let ans = p5.floor(p5.random(1, 4))\r\n\r\n            //asign shapes to the option\r\n            for (let i = 0; i < 3; i++) {\r\n                if (shape[i]) {\r\n                    if (i === 0)\r\n                        shape[i].x_cord = window.innerWidth * 0.1;\r\n                    else if (i === 1)\r\n                        shape[i].x_cord = window.innerWidth * 0.3;\r\n                    else\r\n                        shape[i].x_cord = window.innerWidth * 0.5;\r\n\r\n                    shape[i].y_cord = 10;\r\n                    shape[i].shape = p5.floor(p5.random(1, 7));\r\n\r\n                }\r\n                //            adding new option if right answer is tapped and removed\r\n                else {\r\n                    shape.push({\r\n                        'x_cord': i === 0 ? window.innerWidth * 0.1 : i === 1 ? window.innerWidth * 0.3 : window.innerWidth * 0.5,\r\n                        'y_cord': 10,\r\n                        'shape': p5.floor(p5.random(1, 7))\r\n                    })\r\n                }\r\n                if (i === ans - 1)\r\n                    shape[i].shape = ques_shape\r\n            }\r\n\r\n            change_ques = false\r\n            next_shapes = true\r\n        }\r\n        // questions shapes with reference to their assign number\r\n        switch (ques_shape) {\r\n            case 1:\r\n                shape_name = 'Triangle'\r\n                break;\r\n            case 2:\r\n\r\n                shape_name = 'Half Circle'\r\n                break;\r\n            case 3:\r\n\r\n                shape_name = 'Square'\r\n                break;\r\n            case 4:\r\n\r\n                shape_name = 'Rectangle'\r\n                break;\r\n            case 5:\r\n\r\n                shape_name = 'Circle'\r\n                break;\r\n            case 6:\r\n\r\n                shape_name = 'Ellipse'\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        p5.noStroke();\r\n        p5.fill(255, 241, 208)\r\n        p5.rect(0, 0, window.innerWidth, 60)\r\n\r\n        // Display the question\r\n        p5.textSize(26);\r\n        p5.fill(0, 102, 153);\r\n        p5.textAlign(p5.CENTER, p5.TOP);\r\n        \r\n   p5 .textFont('Cursive')\r\n        p5.text('Task :: Tap the ' + shape_name + ' shape', (window.innerWidth * 0.6) / 2, 20);\r\n\r\n\r\n        // Display the score\r\n        p5.fill('#C22A85');\r\n        p5.textAlign(p5.RIGHT, p5.TOP);\r\n        \r\n   p5 .textFont('Cursive')\r\n        p5.text('Score : ' + score + '   ', (window.innerWidth * 0.6), 20);\r\n\r\n\r\n    }\r\n\r\n    const moveShapes = (p5) => {\r\n\r\n        // if previous answer is true and the shape is not dropped\r\n        if (answer && !dropped) {\r\n            shape.forEach(element => {\r\n\r\n\r\n                //            moves the y axis of the all shapes \r\n                element.y_cord += speed\r\n                if (element.y_cord > window.innerHeight) {\r\n                    //if shapes goes in the bottom of the canvas\r\n\r\n                    if (ques_shape === element.shape) {\r\n                        //if answer is dropped\r\n                        dropped = true\r\n                        answer = false\r\n                        change_ques = true\r\n                        next_shapes = true\r\n                    }\r\n                    else {\r\n                        // resetting their position \r\n                        element.y_cord = 0\r\n                        element.shape = p5.floor(p5.random(1, 7))\r\n                        next_shapes = true\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n        else if (!answer && dropped == false) {\r\n            // if the answer is wrong :: Display the wrong msg\r\n            p5.textSize(26);\r\n            p5.fill(157, 0, 0);\r\n            p5.textAlign(p5.CENTER, p5.TOP);\r\n            p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 70)\r\n            p5.fill('#C22A85');\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            p5.text('Retry ↻', 20, 20)\r\n        }\r\n        else if (dropped && !answer) {\r\n            // If the right answer shape is dropped ::display the msg\r\n            p5.textSize(26);\r\n\r\n            p5.fill(157, 0, 0);\r\n            p5.textAlign(p5.CENTER, p5.TOP);\r\n            \r\n   p5 .textFont('Cursive')\r\n            p5.text('Oops shape dropped ✘', window.innerWidth * 0.6 / 2, 70)\r\n            p5.fill('#C22A85');\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            \r\n   p5 .textFont('Cursive')\r\n            p5.text('Retry ↻', 20, 20)\r\n        }\r\n\r\n    }\r\n    const shapes = (p5) => {\r\n\r\n        // Sketch each shape and fill seprate color\r\n        p5.fill('#222')\r\n\r\n        shape.forEach(elemen => {\r\n            if (elemen.shape === 1) {\r\n\r\n                //                ---------------*****  Triangle   ****---------------------\r\n                p5.stroke(1)\r\n                p5.fill('#686DA7')\r\n                p5.triangle(elemen.x_cord, elemen.y_cord, elemen.x_cord + 50, elemen.y_cord + 50, elemen.x_cord, elemen.y_cord + 50)\r\n                // p5.line(elemen.x_cord,elemen.y_cord,elemen.x_cord+50,elemen.y_cord+50);\r\n                // p5.line(elemen.x_cord,elemen.y_cord,elemen.x_cord,elemen.y_cord+50);\r\n                // p5.line(elemen.x_cord,elemen.y_cord+50,elemen.x_cord+50,elemen.y_cord+50);\r\n            }\r\n            else if (elemen.shape === 2) {\r\n\r\n                //                ---------------*****  half circle   ****---------------------\r\n                p5.fill('#681346')\r\n                p5.arc(elemen.x_cord, elemen.y_cord + 25, 50, 50, p5.PI, 0, p5.CHORD);\r\n            }\r\n            else if (elemen.shape === 3) {\r\n\r\n                //                ---------------*****  square   ****---------------------\r\n                p5.fill('#4633FF')\r\n                p5.rect(elemen.x_cord, elemen.y_cord, 50, 50);\r\n            }\r\n            else if (elemen.shape === 4) {\r\n\r\n                //                ---------------*****  rectangle   ****---------------------\r\n                p5.fill('#FF5733')\r\n                p5.rect(elemen.x_cord, elemen.y_cord, 80, 50);\r\n            } else if (elemen.shape === 5) {\r\n                //                ---------------*****  circle   ****---------------------\r\n                p5.fill('#33FF36')\r\n                p5.circle(elemen.x_cord, elemen.y_cord + 25, 50, 50);\r\n            } else if (elemen.shape === 6) {\r\n                //                ---------------*****  ellipse   ****---------------------\r\n                p5.fill('#3396FF')\r\n                p5.ellipse(elemen.x_cord, elemen.y_cord + 25, 80, 50);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const getMouseClick = (p5) => {\r\n        // ge the mouse click position\r\n        let mouse_x;\r\n        let mouse_y;\r\n        if (p5.mouseIsPressed == true) {\r\n            mouse_x = p5.mouseX;\r\n            mouse_y = p5.mouseY;\r\n        }\r\n\r\n        if (answer) {\r\n            shape.forEach(element => {\r\n                if (mouse_x > element.x_cord - 25 && mouse_y > element.y_cord - 25) { // if mouse is tapped on the shape \r\n                    switch (element.shape) {\r\n                        case 1:    // if the shape is triangle\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {// check the ques shape\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);    // remove frrom the display\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 2:   /// if the shape is half circle\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 3:// if the shape is square\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 4:// if the shape is rectangle\r\n                            if (p5.mouseX < element.x_cord + 80 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 5:// if the shape is circle\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 6:// if the shape is ellipse\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n        else if (!answer) {\r\n            // if tapped on retry \r\n            if (mouse_x > 20 && mouse_y > 20 && mouse_x < 100 && mouse_y < 40) {\r\n                answer = true\r\n                dropped = false\r\n                score = 0\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return <Sketch setup={setup}\r\n        draw={draw}\r\n        style={\r\n            {\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                alignContent: 'center',\r\n\r\n            }\r\n        }\r\n    />;\r\n};","import { getQueriesForElement } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n// Coordinates from where the snake starts\r\nlet x_start = 200;\r\nlet y_start = 200;\r\n// x and y cordinates array of the beads of snake \r\nlet x_cord = [];\r\nlet y_cord = [];\r\n// total beads of snake\r\nlet beats = 100;\r\n// Direction of snake \r\n//  1==>right\r\n// 2==> upwards\r\n// 3==>left\r\n// 4==>Down\r\nlet direction = 1;\r\nlet speed = 1;  //speed of snake\r\nlet changedirection = false;  // for changing the direction\r\nlet previous_direction = 2;\r\nlet collide = false;   //if snake collides with the outer walls\r\nlet food = [] // food array \r\nlet answer = true\r\nlet answers_remainig = true\r\nlet start = true\r\n\r\nexport default (props) => {\r\n \r\n  \r\n\tconst setup = (p5, canvasParentRef) => {\r\n\t\t// use parent to render the canvas in this ref\r\n\t\t// (without that p5 will render the canvas outside of your component)\r\n     p5.createCanvas(window.innerWidth*0.6, window.innerHeight*0.75).parent(canvasParentRef)\r\n\r\n   \r\n\t};\r\n\r\n\tconst draw = (p5) => {\r\n\r\n    \r\n    if(start){\r\n      setupstart(p5) ///Runs only first time\r\n    }\r\n\t\tp5.background(255,241,208);\r\n    \r\n\r\n    update_snake(p5);//moves the snake \r\n    update_direction(p5);   // updates the direction if changed\r\n    check_collider(); //checks if snakes collide\r\n    questions_and_answers(p5);//dispaly the questions ans answrs\r\n\r\n  \r\n    getMouseClick(p5)/// get the mouse click on the retry\r\n    \r\n    \r\n\t};\r\n\r\n  const setupstart=(p5)=>{\r\n\r\n// First times push the food array with cordinates and the number \r\n    for (let i = beats; i > 0; i--) {\r\n      if(i==1)\r\n      x_cord.push(x_start+10)\r\n      else\r\n     x_cord.push(x_start-i);\r\n     y_cord.push(y_start)\r\n      \r\n    }\r\n     for (let i = 0; i < 10; i++) {\r\n       food.push({\r\n         'x_cord':p5.floor(p5.random(10, (window.innerWidth*0.6 ) / 10)) * 10,\r\n         'y_cord':p5.floor(p5.random(10, (window.innerHeight*0.75 ) / 10)) * 10,\r\n         'number':p5.floor(p5.random(10, 99)) ,\r\n       })\r\n       \r\n     }\r\n     start=false\r\n  }\r\n\r\n  const check_collider=()=>{\r\n    let snake_head_x=x_cord[beats-1];\r\n    let snake_head_y=y_cord[beats-1];\r\n\r\n\r\n//// Check if the snake collide with the canvas walls\r\n      if(snake_head_x<0||snake_head_x>window.innerWidth*0.60||snake_head_y<0||snake_head_y>window.innerHeight*0.75){\r\n        collide=true\r\n      }\r\n\r\n     \r\n      food.forEach(element => {\r\n        if ((snake_head_x>element.x_cord-15&&snake_head_x<element.x_cord+15)&&(snake_head_y>element.y_cord-15&&snake_head_y<element.y_cord+15)) {\r\n          \r\n        // logic to get the maximum number\r\n            let max=0;\r\n            food.forEach(xelement => {\r\n               if(max<xelement.number)\r\n                max= xelement.number\r\n            });\r\n            \r\n        // check if the snake get the right answer food\r\n          if(element.number!=max)\r\n          answer=false\r\n          else{\r\n                        \r\n            // const index = food.indexOf(element);\r\n            // if (index > -1) {\r\n            //   food.splice(index, 1);\r\n            // }\r\n\r\n          // if the answer is right moves the food into the thirs axis tha will not be displayed on the screen\r\n          // and appears as the snake eated it \r\n\r\n            element.x_cord=-11\r\n            element.y_cord=-11\r\n            element.number=0;\r\n            answers_remainig=false;\r\n            \r\n          }\r\n        } else {\r\n          \r\n        }\r\n      });\r\n\r\n \r\n      \r\n\r\n\r\n  }\r\n\r\n  const questions_and_answers=(p5)=>{\r\n    \r\n    // Display the questions \r\n    p5.textSize(26);\r\n    p5.fill(0, 102, 153);\r\n    p5.textAlign(p5.CENTER,p5.TOP);\r\n    \r\n   p5 .textFont('Cursive')\r\n    p5.text('Task :: Let the snake eat the numbers in \\n Descending order ', (window.innerWidth*0.6)/2, 10);\r\n    \r\n    // display all the numbers on the food present in the array \r\n    for (let i = 0; i < food.length; i++) {\r\n           \r\n    p5.fill(255,128,0);\r\n    p5.circle(food[i].x_cord, food[i].y_cord, 30, 30);\r\n    p5.textSize(20);\r\n    p5.fill(0, 102, 153)\r\n    \r\n    p5.textAlign(p5.CENTER,p5.CENTER);\r\n    p5.text(food[i].number,food[i].x_cord,food[i].y_cord)\r\n\r\n    }\r\n\r\n\r\n        food.forEach(element => {\r\n          // check if the answer is remaining\r\n            if(element.number>0)\r\n            answers_remainig=true\r\n\r\n             \r\n        });\r\n    \r\n  }\r\n \r\n  const update_snake=(p5)=>{\r\n    //p5.noStroke();        \r\n    \r\n    /// Updates the snake position \r\n    p5.fill(157,0,0);\r\n    for (let index = 0; index <beats; index++) {\r\n         p5.circle(x_cord[index], y_cord[index], 10, 10); \r\n    }\r\n  }\r\n  const update_direction=(p5)=>{\r\n\r\n    // if the snake present in the canvas and there's answer present there\r\n        if(!collide&&answer&&answers_remainig){ \r\n                  switch (direction) {\r\n                    \r\n        // case 1 is the direcion in the right\r\n                    case 1:\r\n                  {  \r\n                if(changedirection){  // if direction is changed from previous direction\r\n                  x_cord[beats-1]+=10;\r\n                  if(previous_direction==2) // if previous direction is positive y axis\r\n                  y_cord[beats-1]+=10;\r\n                  else    // if previous Direction is negative y axis\r\n                  y_cord[beats-1]-=10;\r\n                  \r\n                  changedirection=false;\r\n                  previous_direction=1;\r\n                    }\r\n                      for (let index = 0; index < beats; index++) {\r\n                      if(index==beats-1){\r\n                        \r\n                      x_cord[beats-1]+=speed;\r\n                      }\r\n                      else if(index==beats-2){\r\n                        \r\n                        x_cord[index]=x_cord[index+1]-10;\r\n                        y_cord[index]=y_cord[index+1];\r\n                            \r\n                      }\r\n\r\n                      else{\r\n                        x_cord[index]=x_cord[index+1];\r\n                        y_cord[index]=y_cord[index+1];\r\n                                          \r\n                      }\r\n              \r\n                      }\r\n                        \r\n                    \r\n                      \r\n                      changedirection=false;\r\n                  }\r\n                      break;\r\n\r\n // case 2 is the direcion in the upwards\r\n                      case 2:\r\n                    \r\n                        if(changedirection){ // if direction is changed from previous direction\r\n                          y_cord[beats-1]-=10;\r\n                          if(previous_direction==3)// if previous direction is negative x axis\r\n                          x_cord[beats-1]+=10;\r\n                          else    //if previous direction is positive x axis\r\n                          x_cord[beats-1]-=10;\r\n                          \r\n                          changedirection=false\r\n                          previous_direction=2;\r\n                            }\r\n                        \r\n                      for (let index = 0; index < beats; index++) {\r\n                        if(index==beats-1){\r\n                          \r\n                      y_cord[beats-1]-=speed;\r\n                      \r\n                        }\r\n                        else if(index+1==beats-1){\r\n                          \r\n                        x_cord[index]=x_cord[index+1];\r\n                        y_cord[index]=y_cord[index+1]+10;\r\n                            \r\n                        }\r\n              \r\n                        else{\r\n                        x_cord[index]=x_cord[index+1];\r\n                        y_cord[index]=y_cord[index+1];\r\n                                            \r\n                      }\r\n                \r\n                      }\r\n                        \r\n\r\n                      changedirection=false;\r\n\r\n\r\n                        break;\r\n\r\n                        \r\n           // case 3 is the direcion in the left\r\n                        case 3:\r\n                          \r\n\r\n                          \r\n                if(changedirection){ // if direction is changed from previous direction\r\n                  x_cord[beats-1]-=10;\r\n                  if(previous_direction==2)// if previous direction is posiive y axis\r\n                  y_cord[beats-1]+=10;\r\n                  else //if previous direction is negative y axis\r\n                  y_cord[beats-1]-=10;\r\n                  \r\n                  changedirection=false;\r\n                  previous_direction=3;\r\n                    }\r\n                      for (let index = 0; index < beats; index++) {\r\n                      if(index==beats-1){\r\n                        \r\n                      x_cord[beats-1]-=speed;\r\n                      }\r\n                      else if(index==beats-2){\r\n                        \r\n                        x_cord[index]=x_cord[index+1]+10;\r\n                        y_cord[index]=y_cord[index+1];\r\n                            \r\n                      }\r\n\r\n                      else{\r\n                        x_cord[index]=x_cord[index+1];\r\n                        y_cord[index]=y_cord[index+1];\r\n                                          \r\n                      }\r\n              \r\n                      }\r\n                        \r\n                      changedirection=false;\r\n                      break;\r\n\r\n           // case 4 is the direcion in the downwards\r\n                      case 4:\r\n                        if(changedirection){ // if direction is changed from previous direction\r\n                          y_cord[beats-1]+=10;\r\n                          \r\n                        if(previous_direction==3)// if previous direction is negative x axis\r\n                          x_cord[beats-1]+=10;\r\n                          else // if previous direction is posiive x axis\r\n                          x_cord[beats-1]-=10;\r\n                          \r\n                          changedirection=false\r\n                          previous_direction=4;\r\n                            }\r\n                        \r\n                      for (let index = 0; index < beats; index++) {\r\n                        if(index==beats-1){\r\n                          \r\n                      y_cord[beats-1]+=speed;\r\n                      \r\n                        }\r\n                        else if(index+1==beats-1){\r\n                          \r\n                        x_cord[index]=x_cord[index+1];\r\n                        y_cord[index]=y_cord[index+1]-10;\r\n                            \r\n                        }\r\n              \r\n                        else{\r\n                        x_cord[index]=x_cord[index+1];\r\n                        y_cord[index]=y_cord[index+1];\r\n                                            \r\n                      }\r\n                \r\n                      }\r\n                        \r\n\r\n                      changedirection=false;\r\n                      break;\r\n\r\n\r\n                  \r\n                    default:\r\n                      break;\r\n                  }\r\n                }\r\n                \r\n    // if collided with canvas walls print message\r\n                else if (collide){\r\n                  p5.textSize(26);\r\n                  \r\n                 p5.textAlign(p5.CENTER,p5.TOP);\r\n                 \r\n   p5 .textFont('Cursive')\r\n                  p5.text('Oops, Try again',window.innerWidth*0.6/2,70)\r\n                  p5.textAlign(p5.LEFT,p5.TOP);\r\n                  \r\n   p5 .textFont('Cursive')\r\n                  p5.text('Retry ↻',20,20)\r\n                }\r\n                \r\n    // if get the wrong answer\r\n                else if(!answer){\r\n                  p5.textSize(26);\r\n                  \r\n                 p5.textAlign(p5.CENTER,p5.TOP);\r\n                 \r\n   p5 .textFont('Cursive')\r\n                  p5.text('Wrong answer ✘',window.innerWidth*0.6/2,70)\r\n                  p5.textAlign(p5.LEFT,p5.TOP);\r\n                  \r\n   p5 .textFont('Cursive')\r\n                  p5.text('Retry ↻',20,20)\r\n                }\r\n                \r\n    // if no answer remains\r\n                else if(!answers_remainig){\r\n                  p5.textSize(26);\r\n                  p5.fill(0,153,0);\r\n                  \r\n                 p5.textAlign(p5.CENTER,p5.TOP);\r\n                 \r\n   p5 .textFont('Cursive')\r\n                  p5.text('You Won ✓',window.innerWidth*0.6/2,70)\r\n                }\r\n  } \r\n\r\n  const getMouseClick=(p5)=>{\r\n    let mouse_x;\r\n    let mouse_y;\r\n    \r\n    //  get the mouse axis\r\n    if(p5.mouseIsPressed==true){\r\n        mouse_x=p5.mouseX;        \r\n        mouse_y=p5.mouseY;\r\n    }\r\n    \r\n    // if pressed on retry or play again\r\n    if((!answer||collide)&&mouse_x>20&&mouse_y>20&&mouse_x<100&&mouse_y<40)\r\n    {\r\n      for (let i = 0; i < 10; i++) {\r\n         \r\n         food[i]. x_cord=p5.floor(p5.random(10, (window.innerWidth *0.6) / 10)) * 10\r\n         food[i]. y_cord=p5.floor(p5.random(10, (window.innerHeight *0.75) / 10)) * 10\r\n         food[i]. number=p5.floor(p5.random(10, 99)) \r\n         \r\n        \r\n      }\r\n      collide=false\r\n      answer=true\r\n      \r\n      //reset the original direction and position\r\n\t  x_start = 200;\r\n\t  y_start = 200;\r\n    direction=1\r\n    for (let i = beats; i > 0; i--) {\r\n      if(i==1)\r\n      x_cord[i]=(x_start+10)\r\n      else\r\n     x_cord[i]=(x_start-i);\r\n     y_cord[i]=(y_start)\r\n      \r\n    }\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  const keyPressed=(p5)=> {\r\n    \r\n    // check which key is pressed\r\n    if (p5.keyCode === p5.LEFT_ARROW) {\r\n      if(direction!==1&&direction!==3){\r\n      direction=3;\r\n      changedirection=true;}\r\n    } else  if (p5.keyCode === p5.RIGHT_ARROW) \r\n      {\r\n        if(direction!==3&&direction!==1){\r\n        direction=1;\r\n        \r\n      changedirection=true;}\r\n    }\r\n    else  if (p5.keyCode === p5.UP_ARROW) \r\n      {\r\n        if(direction!==4&&direction!==2){ \r\n        direction=2;\r\n      \r\n        changedirection=true;  \r\n      }\r\n      \r\n    }\r\n    else  if (p5.keyCode === p5.DOWN_ARROW) \r\n      {\r\n        if(direction!==2&&direction!==4){\r\n        direction=4;\r\n        \r\n      changedirection=true;\r\n      }\r\n    }\r\n  }\r\n\r\n\treturn  <Sketch setup={setup} \r\n  draw={draw} \r\n  keyPressed={keyPressed} \r\n  style={\r\n    {\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n      alignContent:'center',\r\n      backgroundColor:'#FFF1D0',\r\n    }\r\n  }\r\n  />;\r\n};","import { getQueriesForElement } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\n// Coordinates from where the snake starts\r\nlet x_start = 200;\r\nlet y_start = 200;\r\n// x and y cordinates array of the beads of snake \r\nlet x_cord = [];\r\nlet y_cord = [];\r\n// total beads of snake\r\nlet beats = 100;\r\n// Direction of snake \r\n//  1==>right\r\n// 2==> upwards\r\n// 3==>left\r\n// 4==>Down\r\nlet direction = 1;\r\nlet speed = 1;  //speed of snake\r\nlet changedirection = false;  // for changing the direction\r\nlet previous_direction = 2;\r\nlet collide = false;   //if snake collides with the outer walls\r\nlet food = [] // food array \r\nlet answer = true\r\nlet answers_remainig = true\r\nlet start = true\r\n\r\n\r\nexport default (props) => {\r\n\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n\r\n  };\r\n\r\n  const draw = (p5) => {\r\n\r\n\r\n    if (start) {\r\n      setupstart(p5)   ///Runs only first time\r\n    }\r\n\r\n    p5.background(255, 241, 208);\r\n\r\n\r\n    update_snake(p5);  //moves the snake \r\n    update_direction(p5);   // updates the direction if changed\r\n    check_collider();    //checks if snakes collide\r\n    questions_and_answers(p5);   //dispaly the questions ans answrs\r\n\r\n\r\n    getMouseClick(p5) /// get the mouse click on the retry\r\n\r\n\r\n  };\r\n\r\n  const setupstart = (p5) => {\r\n\r\n\r\n\r\n// First times push the food array with cordinates and the number \r\n    for (let i = beats; i > 0; i--) {\r\n      if (i == 1)\r\n        x_cord.push(x_start + 10)\r\n      else\r\n        x_cord.push(x_start - i);\r\n      y_cord.push(y_start)\r\n\r\n    }\r\n\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      food.push({\r\n        'x_cord': p5.floor(p5.random(10, (window.innerWidth * 0.6) / 10)) * 10,\r\n        'y_cord': p5.floor(p5.random(10, (window.innerHeight * 0.75) / 10)) * 10,\r\n        'number': p5.floor(p5.random(10, 99)),\r\n      })\r\n\r\n    }\r\n    start = false\r\n  }\r\n\r\n\r\n  const check_collider = () => {\r\n    let snake_head_x = x_cord[beats - 1];\r\n    let snake_head_y = y_cord[beats - 1];\r\n\r\n//// Check if the snake collide with the canvas walls\r\n    if (snake_head_x < 0 || snake_head_x > window.innerWidth * 0.60 || snake_head_y < 0 || snake_head_y > window.innerHeight * 0.75) {\r\n      collide = true\r\n    }\r\n\r\n\r\n    food.forEach(element => {\r\n      // Checks if the snake head collide with any food in array\r\n      if ((snake_head_x > element.x_cord - 15 && snake_head_x < element.x_cord + 15) && (snake_head_y > element.y_cord - 15 && snake_head_y < element.y_cord + 15)) {\r\n\r\n\r\n        // logic to get the minimum number\r\n        let min = 100;\r\n        food.forEach(xelement => {\r\n          if (min > xelement.number)\r\n            min = xelement.number\r\n        });\r\n        // check if the snake get the right answer food\r\n        if (element.number != min)\r\n          answer = false\r\n        else {\r\n\r\n          // const index = food.indexOf(element);\r\n          // if (index > -1) {\r\n          //   food.splice(index, 1);\r\n          // }\r\n          // answers_remainig=false;\r\n\r\n          // if the answer is right moves the food into the thirs axis tha will not be displayed on the screen\r\n          // and appears as the snake eated it \r\n          element.x_cord = -11\r\n          element.y_cord = -11\r\n          element.number = 111;\r\n          answers_remainig = false;\r\n        }\r\n      } else {\r\n\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const questions_and_answers = (p5) => {\r\n    // Display the questions \r\n    p5.textSize(26);\r\n    p5.fill(0, 102, 153);\r\n    p5.textAlign(p5.CENTER, p5.TOP);\r\n    \r\n   p5 .textFont('Cursive')\r\n    p5.text('Task :: Let the snake eat the numbers in\\n Ascending order ', (window.innerWidth * 0.6) / 2, 10);\r\n\r\n    // display all the numbers on the food present in the array \r\n    for (let i = 0; i < food.length; i++) {\r\n      p5.fill(255, 128, 0);\r\n      p5.circle(food[i].x_cord, food[i].y_cord, 30, 30);\r\n      p5.textSize(20);\r\n      p5.fill(0, 102, 153)\r\n\r\n      p5.textAlign(p5.CENTER, p5.CENTER);\r\n      p5.text(food[i].number, food[i].x_cord, food[i].y_cord)\r\n\r\n    }\r\n\r\n\r\n    food.forEach(element => {\r\n      // check if the answer is remaining\r\n      if (element.number < 100)\r\n        answers_remainig = true\r\n    });\r\n\r\n  }\r\n\r\n  const update_snake = (p5) => {\r\n    //p5.noStroke();        \r\n    /// Updates the snake position \r\n    p5.fill(157, 0, 0);\r\n    for (let index = 0; index < beats; index++) {\r\n      p5.circle(x_cord[index], y_cord[index], 10, 10);\r\n    }\r\n  }\r\n  const update_direction = (p5) => {\r\n \r\n    // if the snake present in the canvas and there's answer present there\r\n    if (!collide && answer && answers_remainig) {\r\n      switch (direction) {\r\n\r\n        // case 1 is the direcion in the right\r\n        case 1:\r\n          {\r\n            if (changedirection) { // if direction is changed from previous direction\r\n              x_cord[beats - 1] += 10;\r\n              if (previous_direction == 2) // if previous direction is positive y axis\r\n                y_cord[beats - 1] += 10;\r\n              else                        // if previous Direction is negative y axis\r\n                y_cord[beats - 1] -= 10;\r\n\r\n              changedirection = false;\r\n              previous_direction = 1;\r\n            }\r\n            for (let index = 0; index < beats; index++) {\r\n              if (index == beats - 1) {\r\n\r\n                x_cord[beats - 1] += speed; // every snake bead get the position of its warly bead\r\n              }\r\n              else if (index == beats - 2) {\r\n\r\n                x_cord[index] = x_cord[index + 1] - 10;  // the head space of snake\r\n                y_cord[index] = y_cord[index + 1];\r\n\r\n              }\r\n\r\n              else {\r\n                x_cord[index] = x_cord[index + 1]; // every snake bead get the position of its early bead\r\n                y_cord[index] = y_cord[index + 1];\r\n\r\n              }\r\n\r\n            }\r\n\r\n\r\n\r\n            changedirection = false;\r\n          }\r\n          break;\r\n\r\n // case 2 is the direcion in the upwards\r\n        case 2:\r\n\r\n          if (changedirection) {// if direction is changed from previous direction\r\n            y_cord[beats - 1] -= 10;\r\n            if (previous_direction == 3)// if previous direction is negative x axis\r\n              x_cord[beats - 1] += 10;\r\n            else\r\n              x_cord[beats - 1] -= 10;//if previous direction is positive x axis\r\n\r\n            changedirection = false\r\n            previous_direction = 2;\r\n          }\r\n\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              y_cord[beats - 1] -= speed;\r\n\r\n            }\r\n            else if (index + 1 == beats - 1) {\r\n\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1] + 10;\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n\r\n          changedirection = false;\r\n\r\n\r\n          break;\r\n\r\n           // case 3 is the direcion in the left\r\n        case 3:\r\n\r\n\r\n\r\n          if (changedirection) {// if direction is changed from previous direction\r\n            x_cord[beats - 1] -= 10;\r\n            if (previous_direction == 2)// if previous direction is posiive y axis\r\n              y_cord[beats - 1] += 10;\r\n            else                //if previous direction is negative y axis\r\n              y_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false;\r\n            previous_direction = 3;\r\n          }\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              x_cord[beats - 1] -= speed;\r\n            }\r\n            else if (index == beats - 2) {\r\n\r\n              x_cord[index] = x_cord[index + 1] + 10;\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n          changedirection = false;\r\n          break;\r\n\r\n           // case 4 is the direcion in the downwards\r\n        case 4:\r\n          if (changedirection) {// if direction is changed from previous direction\r\n            y_cord[beats - 1] += 10;\r\n\r\n            if (previous_direction == 3)// if previous direction is negative x axis\r\n              x_cord[beats - 1] += 10;\r\n            else                        // if previous direction is posiive x axis\r\n              x_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false\r\n            previous_direction = 4;\r\n          }\r\n\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              y_cord[beats - 1] += speed;\r\n\r\n            }\r\n            else if (index + 1 == beats - 1) {\r\n\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1] - 10;\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n\r\n          changedirection = false;\r\n          break;\r\n\r\n\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    // if collided with canvas walls print message\r\n    else if (collide) {\r\n      p5.textSize(26);\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Oops, Try again', window.innerWidth * 0.6 / 2, 70)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n    \r\n    // if get the wrong answer\r\n    else if (!answer) {\r\n      p5.textSize(26);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 70)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n\r\n    // if no answer remains\r\n    else if (!answers_remainig) {\r\n      p5.textSize(26);\r\n      p5.fill(0, 153, 0);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('You Won ✓', window.innerWidth * 0.6 / 2, 70)\r\n    }\r\n  }\r\n\r\n  const getMouseClick = (p5) => {\r\n    let mouse_x;\r\n    let mouse_y;\r\n    //  get the mouse axis\r\n    if (p5.mouseIsPressed == true) {\r\n      mouse_x = p5.mouseX;\r\n      mouse_y = p5.mouseY;\r\n    }\r\n\r\n    // if pressed on retry or play again\r\n    if ((!answer || collide) && mouse_x > 20 && mouse_y > 20 && mouse_x < 100 && mouse_y < 40) {\r\n      for (let i = 0; i < 10; i++) {\r\n\r\n        food[i].x_cord = p5.floor(p5.random(10, (window.innerWidth * 0.6) / 10)) * 10\r\n        food[i].y_cord = p5.floor(p5.random(10, (window.innerHeight * 0.75) / 10)) * 10\r\n        food[i].number = p5.floor(p5.random(10, 99))\r\n\r\n\r\n      }\r\n      collide = false\r\n      answer = true\r\n\r\n\r\n      //reset the original direction and position\r\n      x_start = 200;\r\n      y_start = 200;\r\n      direction = 1\r\n      for (let i = beats; i > 0; i--) {\r\n        if (i == 1)\r\n          x_cord[i] = (x_start + 10)\r\n        else\r\n          x_cord[i] = (x_start - i);\r\n        y_cord[i] = (y_start)\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const keyPressed = (p5) => {\r\n\r\n    // check which key is pressed\r\n    if (p5.keyCode === p5.LEFT_ARROW) {\r\n      if (direction !== 1 && direction !== 3) {\r\n        direction = 3;\r\n        changedirection = true;\r\n      }\r\n    } else if (p5.keyCode === p5.RIGHT_ARROW) {\r\n      if (direction !== 3 && direction !== 1) {\r\n        direction = 1;\r\n\r\n        changedirection = true;\r\n      }\r\n    }\r\n    else if (p5.keyCode === p5.UP_ARROW) {\r\n      if (direction !== 4 && direction !== 2) {\r\n        direction = 2;\r\n\r\n        changedirection = true;\r\n      }\r\n\r\n    }\r\n    else if (p5.keyCode === p5.DOWN_ARROW) {\r\n      if (direction !== 2 && direction !== 4) {\r\n        direction = 4;\r\n\r\n        changedirection = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return <Sketch setup={setup}\r\n    draw={draw}\r\n    keyPressed={keyPressed}\r\n    style={\r\n      {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        backgroundColor: '#FFF1D0',\r\n      }\r\n    }\r\n  />;\r\n};","import React, { Component } from 'react';\r\nimport Game1 from './games/game1';\r\nimport Game2 from './games/game2';\r\n\r\nimport Game3 from './games/game3';\r\nimport Game4 from './games/game4';\r\nimport Game5 from './games/game5';\r\nimport Game6 from './games/game6';\r\nimport Game7 from './games/game7';\r\nimport Game8 from './games/game8';\r\nimport Game9 from './games/game9';\r\nimport './App.css'\r\nimport { Prev } from 'react-bootstrap/esm/PageItem';\r\n\r\nclass home extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n       this.state = {\r\n           index : 0\r\n       }\r\n\r\n    }\r\n    \r\n game(index) {\r\n\r\n        // if(index.index === 0){\r\n        //   return <Game1/>;\r\n        // }else if (index.index === 1){\r\n        //   return <Game2 />;\r\n        // }\r\n       \r\n        switch (index.index) {\r\n            case 0:\r\n                return <Game1/>;\r\n                break;\r\n                case 1:\r\n                    return <Game2/>;\r\n                    break;\r\n                    case 2:\r\n                        return <Game3/>;\r\n                        break;\r\n                        case 3:\r\n                            return <Game4/>;\r\n                            break;\r\n                            case 4:\r\n                                return <Game5/>;\r\n                                break;\r\n                                case 5:\r\n                                    return <Game6/>;\r\n                                    break;\r\n                                    case 6:\r\n                                        return <Game7/>;\r\n                                        break;\r\n                                        case 7:\r\n                                            return <Game8/>;\r\n                                            break;\r\n                                            case 8:\r\n                                            return <Game9/>;\r\n                                            break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n     \r\n    \r\n        render() {\r\n     \r\n\r\n        return (\r\n            <div className=\"home\" >\r\n                 \r\n                 <input className=\"innerhomebtn  btn-outline-secondary\" type=\"button\" value=\"previous\" onClick={()=>{\r\n                    if(this.state.index>0)\r\n                    this.setState(prevState =>({\r\n                        index : prevState.index-1\r\n                    }))\r\n                   \r\n                    }}></input>  \r\n                <div className=\"innerhome\"><this.game index = {this.state.index}/></div>\r\n                 <input className=\"innerhomebtn\" type=\"button\" value=\"Next\"onClick={()=>{\r\n                    if(this.state.index<8)\r\n                    this.setState(prevState =>({\r\n                        index : prevState.index+1\r\n                    }))\r\n                    \r\n                   }}></input>\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default home;","\r\n\r\nconst initialState = {\r\n    token: null,\r\n}\r\n\r\n\r\nconst register = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n\r\n\r\n        case 'LOG_OUT':\r\n            return {\r\n                ...state,\r\n                token: null\r\n            }\r\n        case 'TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default register;","import user from './user'  \r\n\r\nimport {combineReducers } from 'redux' \r\n\r\n\r\n\r\nconst rootReducers=combineReducers({\r\n     user,\r\n});\r\nexport default rootReducers;","import React, { Component } from 'react';\r\nimport Login from './Login';\r\nimport signup from './signup';\r\nimport './App.css'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport home from './home';\r\n\r\nimport {Provider} from 'react-redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport rootReducers from './reducers'\r\nimport {createStore,applyMiddleware} from 'redux'\r\n\r\nconst store = createStore(rootReducers,applyMiddleware(thunk));\r\nclass App extends Component {\r\n \r\n\trender() {\r\n\t\treturn (\r\n            <>\r\n    <Provider store={store}> \r\n\t\t\t<main>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Login}/>\r\n                <Route path=\"/signup\" component={signup} />\r\n                <Route path=\"/home\" component={home} />\r\n            </Switch>\r\n        </main>\r\n        \r\n    </Provider>\r\n    </>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <App />\r\n</BrowserRouter>\r\n, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}