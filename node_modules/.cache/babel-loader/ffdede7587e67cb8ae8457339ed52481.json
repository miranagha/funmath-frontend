{"ast":null,"code":"import{getQueriesForElement}from\"@testing-library/react\";import React from\"react\";import Sketch from\"react-p5\";// Coordinates from where the snake starts\nimport{jsx as _jsx}from\"react/jsx-runtime\";var x_start=200;var y_start=200;// x and y cordinates array of the beads of snake \nvar x_cord=[];var y_cord=[];// total beads of snake\nvar beats=100;// Direction of snake \n//  1==>right\n// 2==> upwards\n// 3==>left\n// 4==>Down\nvar direction=1;var speed=1;//speed of snake\nvar changedirection=false;// for changing the direction\nvar previous_direction=2;var collide=false;//if snake collides with the outer walls\nvar food=[];// food array \nvar answer=true;var answers_remainig=true;var start=true;export default(function(props){var setup=function setup(p5,canvasParentRef){// use parent to render the canvas in this ref\n// (without that p5 will render the canvas outside of your component)\np5.createCanvas(window.innerWidth*0.6,window.innerHeight*0.75).parent(canvasParentRef);};var draw=function draw(p5){if(start){setupstart(p5);///Runs only first time\n}p5.background(255,241,208);update_snake(p5);//moves the snake \nupdate_direction(p5);// updates the direction if changed\ncheck_collider();//checks if snakes collide\nquestions_and_answers(p5);//dispaly the questions ans answrs\ngetMouseClick(p5);/// get the mouse click on the retry\n};var setupstart=function setupstart(p5){// First times push the food array with cordinates and the number \nfor(var i=beats;i>0;i--){if(i==1)x_cord.push(x_start+10);else x_cord.push(x_start-i);y_cord.push(y_start);}for(var _i=0;_i<10;_i++){food.push({'x_cord':p5.floor(p5.random(10,window.innerWidth*0.6/10))*10,'y_cord':p5.floor(p5.random(10,window.innerHeight*0.75/10))*10,'number':p5.floor(p5.random(10,99))});}start=false;};var check_collider=function check_collider(){var snake_head_x=x_cord[beats-1];var snake_head_y=y_cord[beats-1];//// Check if the snake collide with the canvas walls\nif(snake_head_x<0||snake_head_x>window.innerWidth*0.60||snake_head_y<0||snake_head_y>window.innerHeight*0.75){collide=true;}food.forEach(function(element){if(snake_head_x>element.x_cord-15&&snake_head_x<element.x_cord+15&&snake_head_y>element.y_cord-15&&snake_head_y<element.y_cord+15){// check if the snake get the right answer food\nif(element.number%2==0)answer=false;else{// const index = food.indexOf(element);\n// if (index > -1) {\n//   food.splice(index, 1);\n// }\n// answers_remainig=false;\n// if the answer is right moves the food into the thirs axis tha will not be displayed on the screen\n// and appears as the snake eated it \nelement.x_cord=-11;element.y_cord=-11;element.number=2;answers_remainig=false;}}else{}});};var questions_and_answers=function questions_and_answers(p5){// Display the questions \np5.textSize(26);p5.fill(0,102,153);p5.textAlign(p5.CENTER,p5.TOP);p5.textFont('Cursive');p5.text('Task :: Let the snake eat the Odd numbers',window.innerWidth*0.6/2,20);// display all the numbers on the food present in the array \nfor(var i=0;i<food.length;i++){p5.fill(255,128,0);p5.circle(food[i].x_cord,food[i].y_cord,30,30);p5.textSize(20);p5.fill(0,102,153);p5.textAlign(p5.CENTER,p5.CENTER);p5.text(food[i].number,food[i].x_cord,food[i].y_cord);}food.forEach(function(element){// check if the answer is remaining\nif(element.number%2!=0)answers_remainig=true;});};var update_snake=function update_snake(p5){//p5.noStroke();        \n/// Updates the snake position \np5.fill(157,0,0);for(var index=0;index<beats;index++){p5.circle(x_cord[index],y_cord[index],10,10);}};var update_direction=function update_direction(p5){// if the snake present in the canvas and there's answer present there\nif(!collide&&answer&&answers_remainig){switch(direction){// case 1 is the direcion in the right\ncase 1:{if(changedirection){// if direction is changed from previous direction\nx_cord[beats-1]+=10;if(previous_direction==2)// if previous direction is positive y axis\ny_cord[beats-1]+=10;else// if previous Direction is negative y axis\ny_cord[beats-1]-=10;changedirection=false;previous_direction=1;}for(var index=0;index<beats;index++){if(index==beats-1){x_cord[beats-1]+=speed;}else if(index==beats-2){x_cord[index]=x_cord[index+1]-10;y_cord[index]=y_cord[index+1];}else{x_cord[index]=x_cord[index+1];y_cord[index]=y_cord[index+1];}}changedirection=false;}break;// case 2 is the direcion in the upwards\ncase 2:if(changedirection){// if direction is changed from previous direction\ny_cord[beats-1]-=10;if(previous_direction==3)// if previous direction is negative x axis\nx_cord[beats-1]+=10;else//if previous direction is positive x axis\nx_cord[beats-1]-=10;changedirection=false;previous_direction=2;}for(var _index=0;_index<beats;_index++){if(_index==beats-1){y_cord[beats-1]-=speed;}else if(_index+1==beats-1){x_cord[_index]=x_cord[_index+1];y_cord[_index]=y_cord[_index+1]+10;}else{x_cord[_index]=x_cord[_index+1];y_cord[_index]=y_cord[_index+1];}}changedirection=false;break;// case 3 is the direcion in the left\ncase 3:if(changedirection){// if direction is changed from previous direction\nx_cord[beats-1]-=10;if(previous_direction==2)// if previous direction is posiive y axis\ny_cord[beats-1]+=10;else//if previous direction is negative y axis\ny_cord[beats-1]-=10;changedirection=false;previous_direction=3;}for(var _index2=0;_index2<beats;_index2++){if(_index2==beats-1){x_cord[beats-1]-=speed;}else if(_index2==beats-2){x_cord[_index2]=x_cord[_index2+1]+10;y_cord[_index2]=y_cord[_index2+1];}else{x_cord[_index2]=x_cord[_index2+1];y_cord[_index2]=y_cord[_index2+1];}}changedirection=false;break;// case 4 is the direcion in the downwards\ncase 4:if(changedirection){// if direction is changed from previous direction\ny_cord[beats-1]+=10;if(previous_direction==3)// if previous direction is negative x axis\nx_cord[beats-1]+=10;else// if previous direction is posiive x axis\nx_cord[beats-1]-=10;changedirection=false;previous_direction=4;}for(var _index3=0;_index3<beats;_index3++){if(_index3==beats-1){y_cord[beats-1]+=speed;}else if(_index3+1==beats-1){x_cord[_index3]=x_cord[_index3+1];y_cord[_index3]=y_cord[_index3+1]-10;}else{x_cord[_index3]=x_cord[_index3+1];y_cord[_index3]=y_cord[_index3+1];}}changedirection=false;break;default:break;}}// if collided with canvas walls print message\nelse if(collide){p5.textSize(26);p5.textFont('Cursive');p5.textAlign(p5.CENTER,p5.TOP);p5.text('Oops, Try again',window.innerWidth*0.6/2,50);p5.textAlign(p5.LEFT,p5.TOP);p5.text('Retry ↻',20,20);}// if get the wrong answer\nelse if(!answer){p5.textSize(26);p5.textAlign(p5.CENTER,p5.TOP);p5.textFont('Cursive');p5.text('Wrong answer ✘',window.innerWidth*0.6/2,50);p5.textAlign(p5.LEFT,p5.TOP);p5.text('Retry ↻',20,20);}// if no answer remains\nelse if(!answers_remainig){p5.textSize(26);p5.fill(0,153,0);p5.textAlign(p5.CENTER,p5.TOP);p5.textFont('Cursive');p5.text('You Won ✓',window.innerWidth*0.6/2,50);}};var getMouseClick=function getMouseClick(p5){var mouse_x;var mouse_y;//  get the mouse axis\nif(p5.mouseIsPressed==true){mouse_x=p5.mouseX;mouse_y=p5.mouseY;}if((!answer||collide)&&mouse_x>20&&mouse_y>20&&mouse_x<100&&mouse_y<40){// if pressed on retry or play again\nfor(var i=0;i<10;i++){food[i].x_cord=p5.floor(p5.random(10,window.innerWidth*0.6/10))*10;food[i].y_cord=p5.floor(p5.random(10,window.innerHeight*0.75/10))*10;food[i].number=p5.floor(p5.random(10,99));}collide=false;answer=true;//reset the original direction and position\nx_start=200;y_start=200;direction=1;for(var _i2=beats;_i2>0;_i2--){if(_i2==1)x_cord[_i2]=x_start+10;else x_cord[_i2]=x_start-_i2;y_cord[_i2]=y_start;}}};var keyPressed=function keyPressed(p5){// check which key is pressed\nif(p5.keyCode===p5.LEFT_ARROW){if(direction!==1&&direction!==3){direction=3;changedirection=true;}}else if(p5.keyCode===p5.RIGHT_ARROW){if(direction!==3&&direction!==1){direction=1;changedirection=true;}}else if(p5.keyCode===p5.UP_ARROW){if(direction!==4&&direction!==2){direction=2;changedirection=true;}}else if(p5.keyCode===p5.DOWN_ARROW){if(direction!==2&&direction!==4){direction=4;changedirection=true;}}};return/*#__PURE__*/_jsx(Sketch,{setup:setup,draw:draw,keyPressed:keyPressed,style:{justifyContent:'center',alignItems:'center',alignContent:'center',backgroundColor:'#FFF1D0'}});});","map":{"version":3,"sources":["/Users/user/Desktop/funmath-frontend/src/games/game3.js"],"names":["getQueriesForElement","React","Sketch","x_start","y_start","x_cord","y_cord","beats","direction","speed","changedirection","previous_direction","collide","food","answer","answers_remainig","start","props","setup","p5","canvasParentRef","createCanvas","window","innerWidth","innerHeight","parent","draw","setupstart","background","update_snake","update_direction","check_collider","questions_and_answers","getMouseClick","i","push","floor","random","snake_head_x","snake_head_y","forEach","element","number","textSize","fill","textAlign","CENTER","TOP","textFont","text","length","circle","index","LEFT","mouse_x","mouse_y","mouseIsPressed","mouseX","mouseY","keyPressed","keyCode","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","justifyContent","alignItems","alignContent","backgroundColor"],"mappings":"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","sourcesContent":["import { getQueriesForElement } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n// Coordinates from where the snake starts\r\nlet x_start = 200;\r\nlet y_start = 200;\r\n// x and y cordinates array of the beads of snake \r\nlet x_cord = [];\r\nlet y_cord = [];\r\n// total beads of snake\r\nlet beats = 100;\r\n// Direction of snake \r\n//  1==>right\r\n// 2==> upwards\r\n// 3==>left\r\n// 4==>Down\r\nlet direction = 1;\r\nlet speed = 1;  //speed of snake\r\nlet changedirection = false;  // for changing the direction\r\nlet previous_direction = 2;\r\nlet collide = false;   //if snake collides with the outer walls\r\nlet food = [] // food array \r\nlet answer = true\r\nlet answers_remainig = true\r\nlet start = true\r\n\r\n\r\nexport default (props) => {\r\n\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n  };\r\n\r\n  const draw = (p5) => {\r\n\r\n\r\n    if (start) {\r\n      setupstart(p5) ///Runs only first time\r\n    }\r\n    p5.background(255, 241, 208);\r\n\r\n\r\n    update_snake(p5);//moves the snake \r\n    update_direction(p5);   // updates the direction if changed\r\n    check_collider(); //checks if snakes collide\r\n    questions_and_answers(p5);//dispaly the questions ans answrs\r\n\r\n\r\n    getMouseClick(p5)/// get the mouse click on the retry\r\n\r\n\r\n  };\r\n\r\n\r\n  const setupstart = (p5) => {\r\n\r\n    // First times push the food array with cordinates and the number \r\n    for (let i = beats; i > 0; i--) {\r\n      if (i == 1)\r\n        x_cord.push(x_start + 10)\r\n      else\r\n        x_cord.push(x_start - i);\r\n      y_cord.push(y_start)\r\n\r\n    }\r\n    for (let i = 0; i < 10; i++) {\r\n      food.push({\r\n        'x_cord': p5.floor(p5.random(10, (window.innerWidth * 0.6) / 10)) * 10,\r\n        'y_cord': p5.floor(p5.random(10, (window.innerHeight * 0.75) / 10)) * 10,\r\n        'number': p5.floor(p5.random(10, 99)),\r\n      })\r\n\r\n    }\r\n    start = false\r\n  }\r\n\r\n  const check_collider = () => {\r\n    let snake_head_x = x_cord[beats - 1];\r\n    let snake_head_y = y_cord[beats - 1];\r\n\r\n\r\n    //// Check if the snake collide with the canvas walls\r\n    if (snake_head_x < 0 || snake_head_x > window.innerWidth * 0.60 || snake_head_y < 0 || snake_head_y > window.innerHeight * 0.75) {\r\n      collide = true\r\n    }\r\n\r\n\r\n    food.forEach(element => {\r\n      if ((snake_head_x > element.x_cord - 15 && snake_head_x < element.x_cord + 15) && (snake_head_y > element.y_cord - 15 && snake_head_y < element.y_cord + 15)) {\r\n\r\n        // check if the snake get the right answer food\r\n        if (element.number % 2 == 0)\r\n          answer = false\r\n        else {\r\n\r\n          // const index = food.indexOf(element);\r\n          // if (index > -1) {\r\n          //   food.splice(index, 1);\r\n          // }\r\n          // answers_remainig=false;\r\n\r\n          // if the answer is right moves the food into the thirs axis tha will not be displayed on the screen\r\n          // and appears as the snake eated it \r\n          element.x_cord = -11\r\n          element.y_cord = -11\r\n          element.number = 2;\r\n          answers_remainig = false;\r\n        }\r\n      } else {\r\n\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const questions_and_answers = (p5) => {\r\n    // Display the questions \r\n    p5.textSize(26);\r\n    p5.fill(0, 102, 153);\r\n\r\n    p5.textAlign(p5.CENTER, p5.TOP);\r\n    \r\n    p5.textFont('Cursive')\r\n    p5.text('Task :: Let the snake eat the Odd numbers', (window.innerWidth * 0.6) / 2, 20);\r\n\r\n    // display all the numbers on the food present in the array \r\n    for (let i = 0; i < food.length; i++) {\r\n\r\n      p5.fill(255, 128, 0);\r\n      p5.circle(food[i].x_cord, food[i].y_cord, 30, 30);\r\n      p5.textSize(20);\r\n      p5.fill(0, 102, 153)\r\n\r\n      p5.textAlign(p5.CENTER, p5.CENTER);\r\n      p5.text(food[i].number, food[i].x_cord, food[i].y_cord)\r\n\r\n    }\r\n\r\n\r\n    food.forEach(element => {\r\n      // check if the answer is remaining\r\n      if (element.number % 2 != 0)\r\n        answers_remainig = true\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  const update_snake = (p5) => {\r\n    //p5.noStroke();        \r\n    /// Updates the snake position \r\n    p5.fill(157, 0, 0);\r\n    for (let index = 0; index < beats; index++) {\r\n      p5.circle(x_cord[index], y_cord[index], 10, 10);\r\n    }\r\n  }\r\n  const update_direction = (p5) => {\r\n\r\n    // if the snake present in the canvas and there's answer present there\r\n    if (!collide && answer && answers_remainig) {\r\n      switch (direction) {\r\n\r\n        // case 1 is the direcion in the right\r\n        case 1:\r\n          {\r\n            if (changedirection) {  // if direction is changed from previous direction\r\n              x_cord[beats - 1] += 10;\r\n              if (previous_direction == 2) // if previous direction is positive y axis\r\n                y_cord[beats - 1] += 10;\r\n              else       // if previous Direction is negative y axis\r\n                y_cord[beats - 1] -= 10;\r\n\r\n              changedirection = false;\r\n              previous_direction = 1;\r\n            }\r\n            for (let index = 0; index < beats; index++) {\r\n              if (index == beats - 1) {\r\n\r\n                x_cord[beats - 1] += speed;\r\n              }\r\n              else if (index == beats - 2) {\r\n\r\n                x_cord[index] = x_cord[index + 1] - 10;\r\n                y_cord[index] = y_cord[index + 1];\r\n\r\n              }\r\n\r\n              else {\r\n                x_cord[index] = x_cord[index + 1];\r\n                y_cord[index] = y_cord[index + 1];\r\n\r\n              }\r\n\r\n            }\r\n\r\n\r\n\r\n            changedirection = false;\r\n          }\r\n          break;\r\n\r\n        // case 2 is the direcion in the upwards\r\n        case 2:\r\n\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            y_cord[beats - 1] -= 10;\r\n            if (previous_direction == 3)// if previous direction is negative x axis\r\n              x_cord[beats - 1] += 10;\r\n            else    //if previous direction is positive x axis\r\n              x_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false\r\n            previous_direction = 2;\r\n          }\r\n\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              y_cord[beats - 1] -= speed;\r\n\r\n            }\r\n            else if (index + 1 == beats - 1) {\r\n\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1] + 10;\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n\r\n          changedirection = false;\r\n\r\n\r\n          break;\r\n\r\n        // case 3 is the direcion in the left\r\n        case 3:\r\n\r\n\r\n\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            x_cord[beats - 1] -= 10;\r\n            if (previous_direction == 2)// if previous direction is posiive y axis\r\n              y_cord[beats - 1] += 10;\r\n            else //if previous direction is negative y axis\r\n              y_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false;\r\n            previous_direction = 3;\r\n          }\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              x_cord[beats - 1] -= speed;\r\n            }\r\n            else if (index == beats - 2) {\r\n\r\n              x_cord[index] = x_cord[index + 1] + 10;\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n          changedirection = false;\r\n          break;\r\n\r\n        // case 4 is the direcion in the downwards\r\n        case 4:\r\n          if (changedirection) { // if direction is changed from previous direction\r\n            y_cord[beats - 1] += 10;\r\n\r\n            if (previous_direction == 3)// if previous direction is negative x axis\r\n              x_cord[beats - 1] += 10;\r\n            else // if previous direction is posiive x axis\r\n              x_cord[beats - 1] -= 10;\r\n\r\n            changedirection = false\r\n            previous_direction = 4;\r\n          }\r\n\r\n          for (let index = 0; index < beats; index++) {\r\n            if (index == beats - 1) {\r\n\r\n              y_cord[beats - 1] += speed;\r\n\r\n            }\r\n            else if (index + 1 == beats - 1) {\r\n\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1] - 10;\r\n\r\n            }\r\n\r\n            else {\r\n              x_cord[index] = x_cord[index + 1];\r\n              y_cord[index] = y_cord[index + 1];\r\n\r\n            }\r\n\r\n          }\r\n\r\n\r\n          changedirection = false;\r\n          break;\r\n\r\n\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    // if collided with canvas walls print message\r\n    else if (collide) {\r\n      p5.textSize(26);\r\n\r\n      p5.textFont('Cursive')\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      p5.text('Oops, Try again', window.innerWidth * 0.6 / 2, 50)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n\r\n    // if get the wrong answer\r\n    else if (!answer) {\r\n      p5.textSize(26);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n      p5.textFont('Cursive')\r\n      p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 50)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n\r\n    // if no answer remains\r\n    else if (!answers_remainig) {\r\n      p5.textSize(26);\r\n      p5.fill(0, 153, 0);\r\n\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n      p5.textFont('Cursive')\r\n      p5.text('You Won ✓', window.innerWidth * 0.6 / 2, 50)\r\n    }\r\n  }\r\n\r\n\r\n  const getMouseClick = (p5) => {\r\n    let mouse_x;\r\n    let mouse_y;\r\n\r\n    //  get the mouse axis\r\n    if (p5.mouseIsPressed == true) {\r\n      mouse_x = p5.mouseX;\r\n      mouse_y = p5.mouseY;\r\n    }\r\n    if ((!answer || collide) && mouse_x > 20 && mouse_y > 20 && mouse_x < 100 && mouse_y < 40) {\r\n\r\n      // if pressed on retry or play again\r\n      for (let i = 0; i < 10; i++) {\r\n\r\n        food[i].x_cord = p5.floor(p5.random(10, (window.innerWidth * 0.6) / 10)) * 10\r\n        food[i].y_cord = p5.floor(p5.random(10, (window.innerHeight * 0.75) / 10)) * 10\r\n        food[i].number = p5.floor(p5.random(10, 99))\r\n\r\n\r\n      }\r\n      collide = false\r\n      answer = true\r\n\r\n      //reset the original direction and position\r\n      x_start = 200;\r\n      y_start = 200;\r\n      direction = 1\r\n      for (let i = beats; i > 0; i--) {\r\n        if (i == 1)\r\n          x_cord[i] = (x_start + 10)\r\n        else\r\n          x_cord[i] = (x_start - i);\r\n        y_cord[i] = (y_start)\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  const keyPressed = (p5) => {\r\n\r\n    // check which key is pressed\r\n    if (p5.keyCode === p5.LEFT_ARROW) {\r\n      if (direction !== 1 && direction !== 3) {\r\n        direction = 3;\r\n        changedirection = true;\r\n      }\r\n    } else if (p5.keyCode === p5.RIGHT_ARROW) {\r\n      if (direction !== 3 && direction !== 1) {\r\n        direction = 1;\r\n\r\n        changedirection = true;\r\n      }\r\n    }\r\n    else if (p5.keyCode === p5.UP_ARROW) {\r\n      if (direction !== 4 && direction !== 2) {\r\n        direction = 2;\r\n\r\n        changedirection = true;\r\n      }\r\n\r\n    }\r\n    else if (p5.keyCode === p5.DOWN_ARROW) {\r\n      if (direction !== 2 && direction !== 4) {\r\n        direction = 4;\r\n\r\n        changedirection = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return <Sketch setup={setup}\r\n    draw={draw}\r\n    keyPressed={keyPressed}\r\n    style={\r\n      {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        backgroundColor: '#FFF1D0',\r\n      }\r\n    }\r\n  />;\r\n};"]},"metadata":{},"sourceType":"module"}