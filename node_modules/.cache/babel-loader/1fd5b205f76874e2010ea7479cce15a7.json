{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/funmath-frontend/src/games/game9.js\";\nimport { getQueriesForElement } from \"@testing-library/react\";\nimport { Dropdown } from \"bootstrap\";\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet start = true; // only true when game runs first time\n\nlet restart = false; // for retry in case of wrong answer\n\nlet playagain = false; // for play again in case in winning\n\nlet balls = []; // total number of balls or apple array\n\nlet answer = true; // if answer is true... false if answr is wrong \n\nlet answer_remaining = true; // true if answer is remaining\n\nlet tap = false; //true when we tap and hold the ball\n\nlet moving_ball; // true when moves the ball\n\nlet radius = 32; //radius of baseket hoop\n// hoop coordinates\n\nlet hoopX = 100;\nlet hoopY = 150;\nlet score = 0;\nexport default (props => {\n  const setup = (p5, canvasParentRef) => {\n    // use parent to render the canvas in this ref\n    // (without that p5 will render the canvas outside of your component)\n    p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef);\n  };\n\n  const draw = p5 => {\n    p5.background(255, 241, 208); // background canvas color\n    // execute when game runs first time\n\n    if (start) {\n      startSetup(p5);\n    } // execute when  retry or playagain\n\n\n    if (restart) {\n      restartSetup(p5);\n    }\n\n    showBalls(p5); // display all the balls or apples\n\n    getmousetap(p5); // get the mouse click and pick the apple\n\n    dropball(p5); // drop he apples\n\n    questionandanswer(p5); //display the questions and their answers\n\n    hoop(p5); // display the baskets\n  };\n\n  const hoop = p5 => {\n    //Set the coodinates of the two baskets on right and left end\n    for (let index = 0; index < 2; index++) {\n      if (index === 0) {\n        //Left end\n        hoopX = 60;\n        hoopY = window.innerHeight * 0.75 - 100;\n      } else {\n        //Right end\n        hoopX = window.innerWidth * 0.60 - 60;\n        hoopY = window.innerHeight * 0.75 - 100;\n      } // design the Basket \n\n\n      p5.noFill();\n      p5.stroke(0);\n      p5.strokeWeight(4);\n      p5.stroke(255, 140, 0);\n      p5.ellipse(hoopX, hoopY, radius * 3, radius / 2);\n      p5.stroke(0);\n      p5.fill(0, 0, 0); // p5.quad(hoopX - radius*3/2 - radius/5, hoopY-radius/5, hoopX - radius*3/2 + radius*0.75 - radius/5, hoopY + radius/5, hoopX - radius*3/2 + radius*0.75 - radius/5, hoopY - radius*3 + radius/5, hoopX - radius*3/2 - radius/5, hoopY - radius*3 - radius/5)\n      ///  p5. line(hoopX - radius*3/2 + radius/10, hoopY, hoopX - radius*3/2 + radius/10,y_start+radius)\n      //rect(hoopX + radius*3/2,hoopY-radius*3, radius*0.75, radius*3)\n\n      p5.noFill(); //circle(440,100,5)\n\n      p5.stroke(255); // line(440,100, 540,200)\n      // line(560, 100, 460, 200)\n\n      p5.stroke(0);\n      p5.strokeWeight(1);\n      p5.stroke(100);\n      p5.strokeWeight(4);\n      p5.line(hoopX - radius * 3 / 2, hoopY, hoopX - radius, hoopY + 3 * radius);\n      p5.line(hoopX + radius, hoopY + 3 * radius, hoopX + radius * 3 / 2, hoopY);\n      p5.line(hoopX + radius * 3 / 2, hoopY, (hoopX - radius * 3 / 2 + hoopX - radius) / 2, hoopY + radius * 3 / 2);\n      p5.line(hoopX - radius * 3 / 2, hoopY, (hoopX + radius * 3 / 2 + hoopX + radius) / 2, hoopY + radius * 3 / 2);\n      p5.line((hoopX - radius * 3 / 2 + hoopX - radius) / 2, hoopY + radius * 3 / 2, hoopX + radius, hoopY + 3 * radius);\n      p5.line((hoopX + radius * 3 / 2 + hoopX + radius) / 2, hoopY + radius * 3 / 2, hoopX - radius, hoopY + 3 * radius);\n      p5.stroke(0);\n      p5.strokeWeight(1);\n    }\n  };\n\n  const questionandanswer = p5 => {\n    //display the questions\n    p5.textSize(26);\n    p5.fill(0, 102, 153);\n    p5.textAlign(p5.CENTER, p5.CENTER);\n    p5.textFont('Cursive');\n    p5.text('Task :: Pick and Throw the apple in \\nright basket', window.innerWidth * 0.6 / 2, 40); // check if thre's any apple on the screen\n\n    balls.forEach(element => {\n      if (element.x_cord > 0 && element.y_cord > 0 && answer) {\n        answer_remaining = true;\n      }\n    }); // if there's no apple on the screen and will display the win message\n\n    if (!answer_remaining) {\n      p5.textSize(26);\n      p5.fill(0, 153, 0);\n      p5.textFont('Cursive');\n      p5.text('You Won ✓', window.innerWidth * 0.6 / 2, 80);\n      p5.textAlign(p5.LEFT, p5.TOP);\n      p5.textFont('Cursive');\n      p5.text('Play again ↻', 20, 20);\n      playagain = true;\n    }\n  };\n\n  const dropball = p5 => {\n    balls.forEach(element => {\n      // check if the apple dropes in he left basket with their coordinates\n      if (element.x_cord > 0 && element.x_cord < 120 && element.y_cord > window.innerHeight * 0.75 - 120 && element.y_cord < window.innerHeight * 0.75) {\n        {\n          element.x_cord = -200;\n          element.y_cord = -200; //check if the answer is true\n\n          if (element.number > 5) answer = false;else {\n            //increase the score\n            score++;\n            answer_remaining = false;\n          }\n        }\n      } // check if the apple dropes in the right basket with their coordinates\n      else if (element.x_cord > window.innerWidth * 0.60 - 120 && element.x_cord < window.innerWidth * 0.60 && element.y_cord > window.innerHeight * 0.75 - 120 && element.y_cord < window.innerHeight * 0.75) {\n          {\n            element.x_cord = -200;\n            element.y_cord = -200; //check if the answer is true\n\n            if (element.number < 5) answer = false;else {\n              //increase the score\n              score++;\n              answer_remaining = false;\n            }\n          }\n        }\n    });\n  };\n\n  const getmousetap = p5 => {\n    let mouse_x;\n    let mouse_y; //get the mouse tap and their x and y cordinates\n\n    if (p5.mouseIsPressed == true) {\n      mouse_x = p5.mouseX;\n      mouse_y = p5.mouseY;\n    } // Check if the  previos answer is true \n\n\n    if (answer && !playagain) {\n      //check all the apples which apples is tappes from their coordinates\n      balls.forEach(element => {\n        if (!tap && mouse_x > element.x_cord - 25 && mouse_x < element.x_cord + 25 && mouse_y > element.y_cord - 25 && mouse_y < element.y_cord + 25) {\n          const index = balls.indexOf(element); //   if tapped get the index of apple a\n\n          if (index > -1) {\n            moving_ball = index;\n          }\n\n          tap = true;\n        }\n      });\n    } // check if play again or retry is pressed from their coordinates\n    else if ((playagain || !answer) && mouse_x > 20 && mouse_x < 120 && mouse_y > 20 && mouse_y < 40) {\n        restart = true;\n        answer = true;\n        playagain = false;\n        score = 0;\n      } // check if previous answer is wrong then display wrong answer message\n      else if (!answer) {\n          p5.fill(157, 0, 0);\n          p5.textAlign(p5.CENTER, p5.TOP);\n          p5.textFont('Cursive');\n          p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 75);\n          p5.textAlign(p5.LEFT, p5.TOP);\n          p5.textFont('Cursive');\n          p5.text('Retry ↻', 20, 20);\n        }\n  };\n\n  const showBalls = p5 => {\n    p5.fill('#000'); // p5.circle(0,(window.innerHeight*0.75),300,300)\n    // p5.circle((window.innerWidth*0.6),(window.innerHeight*0.75/1),300 ,300)\n    // Draw all the apples\n\n    balls.forEach(element => {\n      p5.fill('#ADC5' + element.color + '1');\n      drawApple(p5, element.x_cord, element.y_cord);\n    });\n    p5.fill('#555');\n    p5.text('< 5', 60, window.innerHeight * 0.75 - 130);\n    p5.text('> 5', window.innerWidth * 0.60 - 60, window.innerHeight * 0.75 - 130); // Draw all the numbers on the apples\n\n    balls.forEach(element => {\n      p5.fill('#fff');\n      p5.text(element.number, element.x_cord, element.y_cord);\n    });\n  };\n\n  function drawApple(p5, x, y) {\n    // The apples Sketch\n    p5.noStroke();\n    p5.push();\n    p5.translate(x, y);\n    p5.fill(204, 55, 51);\n    p5.ellipseMode(p5.CENTER);\n    p5.ellipse(0, 0, 60, 55);\n    p5.stroke(78, 38, 0);\n    p5.strokeWeight(5);\n    p5.line(-5, -45, 0, -25);\n    p5.noStroke();\n    p5.rotate(p5.radians(-30));\n    p5.fill(39, 166, 21);\n    p5.ellipse(7, -33, 15, 25);\n    p5.pop();\n  }\n\n  const restartSetup = p5 => {\n    // When play again or retry is pressed\n    let j = 0;\n\n    for (let i = 0; i < 9; i++) {\n      if (i == 5) {\n        j++;\n      } //all the apples get the cordinates and and their numbers in array\n\n\n      balls[i].x_cord = window.innerWidth * 0.6 - 60 * (j + 1); //:window.innerWidth*0.6/2+100,\n\n      balls[i].y_cord = i % 2 == 0 ? window.innerHeight * 0.75 / 2 - 100 : window.innerHeight * 0.75 / 2;\n      balls[i].color = p5.floor(p5.random(1, 5));\n      balls[i].number = j;\n      j++;\n    }\n\n    restart = false;\n  };\n\n  const startSetup = p5 => {\n    // Executes only first time to push the array with new numbers and coordinates\n    for (let i = 0; i < 10; i++) {\n      if (i == 5) {} else {\n        balls.push({\n          'x_cord': window.innerWidth * 0.6 - 60 * (i + 1),\n          //:window.innerWidth*0.6/2+100,\n          'y_cord': i % 2 == 0 ? window.innerHeight * 0.75 / 2 - 100 : window.innerHeight * 0.75 / 2,\n          'color': p5.floor(p5.random(1, 5)),\n          'number': i\n        });\n      }\n    }\n\n    start = false;\n  };\n\n  const mouseDragged = p5 => {\n    let mouse_x = p5.mouseX;\n    let mouse_y = p5.mouseY; // when is mouse is moving and is grabbing the apple\n\n    if (answer) {\n      balls.forEach(element => {\n        const index = balls.indexOf(element);\n\n        if (index > -1) {\n          if (tap && index === moving_ball) {\n            //is taped the ball assign the mouse cordinates to the apple\n            element.x_cord = mouse_x;\n            element.y_cord = mouse_y;\n          }\n        }\n      });\n    }\n\n    return false;\n  };\n\n  const mouseReleased = () => {\n    // when mouse is released\n    tap = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw,\n    mouseDragged: mouseDragged,\n    mouseReleased: mouseReleased\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 10\n  }, this);\n});","map":{"version":3,"sources":["/Users/user/Desktop/funmath-frontend/src/games/game9.js"],"names":["getQueriesForElement","Dropdown","React","Sketch","start","restart","playagain","balls","answer","answer_remaining","tap","moving_ball","radius","hoopX","hoopY","score","props","setup","p5","canvasParentRef","createCanvas","window","innerWidth","innerHeight","parent","draw","background","startSetup","restartSetup","showBalls","getmousetap","dropball","questionandanswer","hoop","index","noFill","stroke","strokeWeight","ellipse","fill","line","textSize","textAlign","CENTER","textFont","text","forEach","element","x_cord","y_cord","LEFT","TOP","number","mouse_x","mouse_y","mouseIsPressed","mouseX","mouseY","indexOf","color","drawApple","x","y","noStroke","push","translate","ellipseMode","rotate","radians","pop","j","i","floor","random","mouseDragged","mouseReleased"],"mappings":"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","sourcesContent":["import { getQueriesForElement } from \"@testing-library/react\";\r\nimport { Dropdown } from \"bootstrap\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\n\r\n\r\n\r\nlet start = true;   // only true when game runs first time\r\nlet restart = false;  // for retry in case of wrong answer\r\nlet playagain = false;  // for play again in case in winning\r\nlet balls = []   // total number of balls or apple array\r\nlet answer = true   // if answer is true... false if answr is wrong \r\nlet answer_remaining = true // true if answer is remaining\r\nlet tap = false  //true when we tap and hold the ball\r\nlet moving_ball  // true when moves the ball\r\n\r\nlet radius = 32   //radius of baseket hoop\r\n// hoop coordinates\r\nlet hoopX = 100    \r\nlet hoopY = 150\r\nlet score=0\r\n\r\nexport default (props) => {\r\n\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n\r\n  };\r\n\r\n  const draw = (p5) => {\r\n\r\n    p5.background(255, 241, 208);  // background canvas color\r\n    \r\n    // execute when game runs first time\r\n    if (start) {\r\n      startSetup(p5)\r\n    }\r\n    \r\n    // execute when  retry or playagain\r\n    \r\n    if (restart) {\r\n      restartSetup(p5)\r\n    }\r\n\r\n\r\n    showBalls(p5)          // display all the balls or apples\r\n    getmousetap(p5)        // get the mouse click and pick the apple\r\n    dropball(p5)            // drop he apples\r\n    questionandanswer(p5)    //display the questions and their answers\r\n    hoop(p5)                  // display the baskets\r\n  };\r\n\r\n  const hoop = (p5) => {\r\n\r\n\r\n\r\n    //Set the coodinates of the two baskets on right and left end\r\n    for (let index = 0; index < 2; index++) {\r\n\r\n      if (index === 0) {\r\n            //Left end\r\n        hoopX = 60\r\n        hoopY = window.innerHeight * 0.75 - 100\r\n      }\r\n      else {\r\n          //Right end\r\n        hoopX = window.innerWidth * 0.60 - 60\r\n        hoopY = window.innerHeight * 0.75 - 100\r\n      }\r\n\r\n        // design the Basket \r\n\r\n      p5.noFill()\r\n      p5.stroke(0);\r\n      p5.strokeWeight(4);\r\n      p5.stroke(255, 140, 0);\r\n      p5.ellipse(hoopX, hoopY, radius * 3, radius / 2)\r\n      p5.stroke(0)\r\n      p5.fill(0, 0, 0)\r\n      // p5.quad(hoopX - radius*3/2 - radius/5, hoopY-radius/5, hoopX - radius*3/2 + radius*0.75 - radius/5, hoopY + radius/5, hoopX - radius*3/2 + radius*0.75 - radius/5, hoopY - radius*3 + radius/5, hoopX - radius*3/2 - radius/5, hoopY - radius*3 - radius/5)\r\n      ///  p5. line(hoopX - radius*3/2 + radius/10, hoopY, hoopX - radius*3/2 + radius/10,y_start+radius)\r\n      //rect(hoopX + radius*3/2,hoopY-radius*3, radius*0.75, radius*3)\r\n      p5.noFill()\r\n      //circle(440,100,5)\r\n      p5.stroke(255)\r\n      // line(440,100, 540,200)\r\n      // line(560, 100, 460, 200)\r\n      p5.stroke(0)\r\n\r\n      p5.strokeWeight(1);\r\n\r\n      p5.stroke(100)\r\n      p5.strokeWeight(4);\r\n      p5.line(hoopX - radius * 3 / 2, hoopY, hoopX - radius, hoopY + 3 * radius)\r\n      p5.line(hoopX + radius, hoopY + 3 * radius, hoopX + radius * 3 / 2, hoopY)\r\n      p5.line(hoopX + radius * 3 / 2, hoopY, (hoopX - radius * 3 / 2 + hoopX - radius) / 2, hoopY + radius * 3 / 2)\r\n      p5.line(hoopX - radius * 3 / 2, hoopY, (hoopX + radius * 3 / 2 + hoopX + radius) / 2, hoopY + radius * 3 / 2)\r\n      p5.line((hoopX - radius * 3 / 2 + hoopX - radius) / 2, hoopY + radius * 3 / 2, hoopX + radius, hoopY + 3 * radius)\r\n      p5.line((hoopX + radius * 3 / 2 + hoopX + radius) / 2, hoopY + radius * 3 / 2, hoopX - radius, hoopY + 3 * radius)\r\n      p5.stroke(0)\r\n      p5.strokeWeight(1)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const questionandanswer = (p5) => {\r\n\r\n\r\n    //display the questions\r\n    p5.textSize(26);\r\n    p5.fill(0, 102, 153);\r\n    p5.textAlign(p5.CENTER, p5.CENTER);\r\n    \r\n   p5 .textFont('Cursive')\r\n    p5.text('Task :: Pick and Throw the apple in \\nright basket', (window.innerWidth * 0.6) / 2, 40);\r\n\r\n\r\n\r\n    // check if thre's any apple on the screen\r\n    balls.forEach(element => {\r\n      if (element.x_cord > 0 && element.y_cord > 0 && answer) {\r\n        answer_remaining = true\r\n      }\r\n    });\r\n\r\n\r\n    // if there's no apple on the screen and will display the win message\r\n    if (!answer_remaining) {\r\n      p5.textSize(26);\r\n      p5.fill(0, 153, 0);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('You Won ✓', window.innerWidth * 0.6 / 2, 80)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Play again ↻', 20, 20)\r\n      playagain = true\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const dropball = (p5) => {\r\n\r\n\r\n\r\n    balls.forEach(element => {\r\n\r\n      // check if the apple dropes in he left basket with their coordinates\r\n      if (element.x_cord > 0 && element.x_cord < 120 && element.y_cord > window.innerHeight * 0.75 - 120 && element.y_cord < window.innerHeight * 0.75) {\r\n        {\r\n          element.x_cord = -200;\r\n          element.y_cord = -200;\r\n\r\n          //check if the answer is true\r\n          if (element.number > 5)\r\n            answer = false\r\n          else {\r\n            \r\n            //increase the score\r\n            score++\r\n\r\n            answer_remaining = false\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n\r\n      // check if the apple dropes in the right basket with their coordinates\r\n      else if (element.x_cord > window.innerWidth * 0.60 - 120 && element.x_cord < window.innerWidth * 0.60 && element.y_cord > window.innerHeight * 0.75 - 120 && element.y_cord < window.innerHeight * 0.75) {\r\n        {\r\n          element.x_cord = -200;\r\n          element.y_cord = -200;\r\n          \r\n          //check if the answer is true\r\n          if (element.number < 5)\r\n            answer = false\r\n          else {\r\n            //increase the score\r\n            score++;\r\n            answer_remaining = false\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  const getmousetap = (p5) => {\r\n\r\n    let mouse_x;\r\n    let mouse_y;\r\n    //get the mouse tap and their x and y cordinates\r\n    if (p5.mouseIsPressed == true) {\r\n      mouse_x = p5.mouseX;\r\n      mouse_y = p5.mouseY;\r\n    }\r\n\r\n    // Check if the  previos answer is true \r\n    if (answer && !playagain) {\r\n     \r\n\r\n      //check all the apples which apples is tappes from their coordinates\r\n      balls.forEach(element => {\r\n        if (!tap && mouse_x > element.x_cord - 25 && mouse_x < element.x_cord + 25 && mouse_y > element.y_cord - 25 && mouse_y < element.y_cord + 25) {\r\n\r\n\r\n\r\n          const index = balls.indexOf(element);\r\n       //   if tapped get the index of apple a\r\n          if (index > -1) {\r\n            moving_ball = index\r\n          }\r\n          tap = true\r\n        }\r\n      });\r\n    }\r\n\r\n    // check if play again or retry is pressed from their coordinates\r\n    else if ((playagain || !answer) && mouse_x > 20 && mouse_x < 120\r\n      && mouse_y > 20 && mouse_y < 40) {\r\n      restart = true\r\n      answer = true\r\n      playagain = false\r\n      score = 0\r\n    }\r\n\r\n    // check if previous answer is wrong then display wrong answer message\r\n    else if (!answer) {\r\n      p5.fill(157, 0, 0);\r\n      p5.textAlign(p5.CENTER, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 75)\r\n      p5.textAlign(p5.LEFT, p5.TOP);\r\n      \r\n   p5 .textFont('Cursive')\r\n      p5.text('Retry ↻', 20, 20)\r\n    }\r\n  }\r\n\r\n  const showBalls = (p5) => {\r\n\r\n    p5.fill('#000')\r\n    // p5.circle(0,(window.innerHeight*0.75),300,300)\r\n    // p5.circle((window.innerWidth*0.6),(window.innerHeight*0.75/1),300 ,300)\r\n \r\n      // Draw all the apples\r\n    balls.forEach(element => {\r\n      p5.fill('#ADC5' + element.color + '1'\r\n      )\r\n      drawApple(p5, element.x_cord, element.y_cord)\r\n    });\r\n\r\n    p5.fill('#555')\r\n    p5.text('< 5', 60, window.innerHeight * 0.75 - 130)\r\n    p5.text('> 5', window.innerWidth * 0.60 - 60, window.innerHeight * 0.75 - 130)\r\n\r\n\r\n    // Draw all the numbers on the apples\r\n    balls.forEach(element => {\r\n      p5.fill('#fff')\r\n      p5.text(element.number, element.x_cord, element.y_cord)\r\n    });\r\n\r\n\r\n  }\r\n\r\n  function drawApple(p5, x, y) {\r\n\r\n    // The apples Sketch\r\n    p5.noStroke();\r\n    p5.push();\r\n    p5.translate(x, y);\r\n    p5.fill(204, 55, 51);\r\n    p5.ellipseMode(p5.CENTER);\r\n    p5.ellipse(0, 0, 60, 55);\r\n    p5.stroke(78, 38, 0);\r\n    p5.strokeWeight(5);\r\n    p5.line(-5, -45, 0, -25);\r\n    p5.noStroke();\r\n    p5.rotate(p5.radians(-30));\r\n    p5.fill(39, 166, 21);\r\n    p5.ellipse(7, -33, 15, 25)\r\n    p5.pop();\r\n  }\r\n\r\n  const restartSetup = (p5) => {\r\n\r\n    // When play again or retry is pressed\r\n    let j = 0\r\n    for (let i = 0; i < 9; i++) {\r\n\r\n      if (i == 5) {\r\n        j++;\r\n      }\r\n      //all the apples get the cordinates and and their numbers in array\r\n      balls[i].x_cord = window.innerWidth * 0.6 - (60 * (j + 1))//:window.innerWidth*0.6/2+100,\r\n      balls[i].y_cord = i % 2 == 0 ? window.innerHeight * 0.75 / 2 - 100 : window.innerHeight * 0.75 / 2\r\n      balls[i].color = p5.floor(p5.random(1, 5))\r\n      balls[i].number = j\r\n\r\n\r\n\r\n      j++;\r\n\r\n    }\r\n    restart = false\r\n  }\r\n  const startSetup = (p5) => {\r\n\r\n    // Executes only first time to push the array with new numbers and coordinates\r\n    for (let i = 0; i < 10; i++) {\r\n\r\n      if (i == 5) {\r\n\r\n      } else {\r\n        balls.push({\r\n\r\n          'x_cord': window.innerWidth * 0.6 - (60 * (i + 1)),//:window.innerWidth*0.6/2+100,\r\n          'y_cord': i % 2 == 0 ? window.innerHeight * 0.75 / 2 - 100 : window.innerHeight * 0.75 / 2,\r\n          'color': p5.floor(p5.random(1, 5)),\r\n          'number': i\r\n\r\n        })\r\n      }\r\n\r\n    }\r\n    start = false\r\n  }\r\n\r\n  const mouseDragged = (p5) => {\r\n    let mouse_x = p5.mouseX;\r\n    let mouse_y = p5.mouseY;\r\n\r\n    // when is mouse is moving and is grabbing the apple\r\n    if (answer) {\r\n      balls.forEach(element => {\r\n        const index = balls.indexOf(element);\r\n        if (index > -1) {\r\n          if (tap && index === moving_ball) {\r\n            //is taped the ball assign the mouse cordinates to the apple\r\n            element.x_cord = mouse_x;\r\n            element.y_cord = mouse_y\r\n          }\r\n\r\n        }\r\n\r\n\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  const mouseReleased = () => {\r\n    // when mouse is released\r\n    tap = false\r\n  }\r\n\r\n\r\n  return <Sketch setup={setup}\r\n    draw={draw}\r\n    mouseDragged={mouseDragged}\r\n    mouseReleased={mouseReleased}\r\n\r\n\r\n  />;\r\n};"]},"metadata":{},"sourceType":"module"}