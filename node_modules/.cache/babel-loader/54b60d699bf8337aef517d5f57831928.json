{"ast":null,"code":"import{getQueriesForElement}from\"@testing-library/react\";import React from\"react\";import Sketch from\"react-p5\";import{jsx as _jsx}from\"react/jsx-runtime\";var shape=[];//shapes array contain multiple shapes\nvar speed=1;// speed from which they comes down\nvar score=0;var answer=true;// if previous answer is true\nvar ques_shape=1;// correct answer shape\nvar change_ques=false;// to change the question\nvar next_shapes=false;// setup the next shape\nvar dropped=false;// if correct shape is dropped\nvar start=true;export default(function(props){var setup=function setup(p5,canvasParentRef){// use parent to render the canvas in this ref\n// (without that p5 will render the canvas outside of your component)\np5.createCanvas(window.innerWidth*0.6,window.innerHeight*0.75).parent(canvasParentRef);};var draw=function draw(p5){if(start){setupstart(p5);// runs only first time\n}p5.background(255,241,208);shapes(p5);// display the shapes \ngetMouseClick(p5);// get the mouse tap\nquestions_and_answers(p5);//display the shapes\nmoveShapes(p5);// move the shapes\n};var setupstart=function setupstart(p5){// runs only first time\n// assign the shapes in the shape array with their position coordinates\nfor(var i=1;i<=3;i++){shape.push({'x_cord':i===1?window.innerWidth*0.1:i===2?window.innerWidth*0.3:window.innerWidth*0.5,'y_cord':10,'shape':p5.floor(p5.random(1,7))});}//correct answer shape\nques_shape=p5.floor(p5.random(1,7));//adding the correct shape in the options\nvar ans=p5.floor(p5.random(1,4));for(var _i=0;_i<3;_i++){if(_i===ans-1)shape[_i].shape=ques_shape;}start=false;};var questions_and_answers=function questions_and_answers(p5){var shape_name;// if question is changes or selcted the right answer\nif(change_ques&&next_shapes){ques_shape=p5.floor(p5.random(1,7));var ans=p5.floor(p5.random(1,4));//asign shapes to the option\nfor(var i=0;i<3;i++){if(shape[i]){if(i===0)shape[i].x_cord=window.innerWidth*0.1;else if(i===1)shape[i].x_cord=window.innerWidth*0.3;else shape[i].x_cord=window.innerWidth*0.5;shape[i].y_cord=10;shape[i].shape=p5.floor(p5.random(1,7));}//            adding new option if right answer is tapped and removed\nelse{shape.push({'x_cord':i===0?window.innerWidth*0.1:i===1?window.innerWidth*0.3:window.innerWidth*0.5,'y_cord':10,'shape':p5.floor(p5.random(1,7))});}if(i===ans-1)shape[i].shape=ques_shape;}change_ques=false;next_shapes=true;}// questions shapes with reference to their assign number\nswitch(ques_shape){case 1:shape_name='Triangle';break;case 2:shape_name='Half Circle';break;case 3:shape_name='Square';break;case 4:shape_name='Rectangle';break;case 5:shape_name='Circle';break;case 6:shape_name='Ellipse';break;default:break;}p5.noStroke();p5.fill(255,241,208);p5.rect(0,0,window.innerWidth,60);// Display the question\np5.textSize(26);p5.fill(0,102,153);p5.textAlign(p5.CENTER,p5.TOP);p5.textFont('Cursive');p5.text('Task :: Tap the '+shape_name+' shape',window.innerWidth*0.6/2,20);// Display the score\np5.fill('#C22A85');p5.textAlign(p5.RIGHT,p5.TOP);p5.textFont('Cursive');p5.text('Score : '+score+'   ',window.innerWidth*0.6,20);};var moveShapes=function moveShapes(p5){// if previous answer is true and the shape is not dropped\nif(answer&&!dropped){shape.forEach(function(element){//            moves the y axis of the all shapes \nelement.y_cord+=speed;if(element.y_cord>window.innerHeight){//if shapes goes in the bottom of the canvas\nif(ques_shape===element.shape){//if answer is dropped\ndropped=true;answer=false;change_ques=true;next_shapes=true;}else{// resetting their position \nelement.y_cord=0;element.shape=p5.floor(p5.random(1,7));next_shapes=true;}}});}else if(!answer&&dropped==false){// if the answer is wrong :: Display the wrong msg\np5.textSize(26);p5.fill(157,0,0);p5.textAlign(p5.CENTER,p5.TOP);p5.text('Wrong answer ✘',window.innerWidth*0.6/2,70);p5.fill('#C22A85');p5.textAlign(p5.LEFT,p5.TOP);p5.text('Retry ↻',20,20);}else if(dropped&&!answer){// If the right answer shape is dropped ::display the msg\np5.textSize(26);p5.fill(157,0,0);p5.textAlign(p5.CENTER,p5.TOP);p5.textFont('Cursive');p5.text('Oops shape dropped ✘',window.innerWidth*0.6/2,70);p5.fill('#C22A85');p5.textAlign(p5.LEFT,p5.TOP);p5.textFont('Cursive');p5.text('Retry ↻',20,20);}};var shapes=function shapes(p5){// Sketch each shape and fill seprate color\np5.fill('#222');shape.forEach(function(elemen){if(elemen.shape===1){//                ---------------*****  Triangle   ****---------------------\np5.stroke(1);p5.fill('#686DA7');p5.triangle(elemen.x_cord,elemen.y_cord,elemen.x_cord+50,elemen.y_cord+50,elemen.x_cord,elemen.y_cord+50);// p5.line(elemen.x_cord,elemen.y_cord,elemen.x_cord+50,elemen.y_cord+50);\n// p5.line(elemen.x_cord,elemen.y_cord,elemen.x_cord,elemen.y_cord+50);\n// p5.line(elemen.x_cord,elemen.y_cord+50,elemen.x_cord+50,elemen.y_cord+50);\n}else if(elemen.shape===2){//                ---------------*****  half circle   ****---------------------\np5.fill('#681346');p5.arc(elemen.x_cord,elemen.y_cord+25,50,50,p5.PI,0,p5.CHORD);}else if(elemen.shape===3){//                ---------------*****  square   ****---------------------\np5.fill('#4633FF');p5.rect(elemen.x_cord,elemen.y_cord,50,50);}else if(elemen.shape===4){//                ---------------*****  rectangle   ****---------------------\np5.fill('#FF5733');p5.rect(elemen.x_cord,elemen.y_cord,80,50);}else if(elemen.shape===5){//                ---------------*****  circle   ****---------------------\np5.fill('#33FF36');p5.circle(elemen.x_cord,elemen.y_cord+25,50,50);}else if(elemen.shape===6){//                ---------------*****  ellipse   ****---------------------\np5.fill('#3396FF');p5.ellipse(elemen.x_cord,elemen.y_cord+25,80,50);}});};var getMouseClick=function getMouseClick(p5){// ge the mouse click position\nvar mouse_x;var mouse_y;if(p5.mouseIsPressed==true){mouse_x=p5.mouseX;mouse_y=p5.mouseY;}if(answer){shape.forEach(function(element){if(mouse_x>element.x_cord-25&&mouse_y>element.y_cord-25){// if mouse is tapped on the shape \nswitch(element.shape){case 1:// if the shape is triangle\nif(p5.mouseX<element.x_cord+50&&p5.mouseY<element.y_cord+50){if(ques_shape===element.shape){// check the ques shape\nvar index=shape.indexOf(element);if(index>-1){shape.splice(index,1);// remove frrom the display\n}score++;change_ques=true;}else{answer=false;}}else{}break;case 2:/// if the shape is half circle\nif(p5.mouseX<element.x_cord+50&&p5.mouseY<element.y_cord+50){if(ques_shape===element.shape){var _index=shape.indexOf(element);if(_index>-1){shape.splice(_index,1);}score++;change_ques=true;}else{answer=false;}}else{}break;case 3:// if the shape is square\nif(p5.mouseX<element.x_cord+50&&p5.mouseY<element.y_cord+50){if(ques_shape===element.shape){var _index2=shape.indexOf(element);if(_index2>-1){shape.splice(_index2,1);}score++;change_ques=true;}else{answer=false;}}else{}break;case 4:// if the shape is rectangle\nif(p5.mouseX<element.x_cord+80&&p5.mouseY<element.y_cord+50){if(ques_shape===element.shape){var _index3=shape.indexOf(element);if(_index3>-1){shape.splice(_index3,1);}score++;change_ques=true;}else{answer=false;}}else{}break;case 5:// if the shape is circle\nif(p5.mouseX<element.x_cord+50&&p5.mouseY<element.y_cord+50){if(ques_shape===element.shape){var _index4=shape.indexOf(element);if(_index4>-1){shape.splice(_index4,1);}score++;change_ques=true;}else{answer=false;}}else{}break;case 6:// if the shape is ellipse\nif(p5.mouseX<element.x_cord+50&&p5.mouseY<element.y_cord+50){if(ques_shape===element.shape){var _index5=shape.indexOf(element);if(_index5>-1){shape.splice(_index5,1);}score++;change_ques=true;}else{answer=false;}}else{}break;default:break;}}});}else if(!answer){// if tapped on retry \nif(mouse_x>20&&mouse_y>20&&mouse_x<100&&mouse_y<40){answer=true;dropped=false;score=0;}}};return/*#__PURE__*/_jsx(Sketch,{setup:setup,draw:draw,style:{justifyContent:'center',alignItems:'center',alignContent:'center'}});});","map":{"version":3,"sources":["/Users/user/Desktop/funmath-frontend/src/games/game6.js"],"names":["getQueriesForElement","React","Sketch","shape","speed","score","answer","ques_shape","change_ques","next_shapes","dropped","start","props","setup","p5","canvasParentRef","createCanvas","window","innerWidth","innerHeight","parent","draw","setupstart","background","shapes","getMouseClick","questions_and_answers","moveShapes","i","push","floor","random","ans","shape_name","x_cord","y_cord","noStroke","fill","rect","textSize","textAlign","CENTER","TOP","textFont","text","RIGHT","forEach","element","LEFT","elemen","stroke","triangle","arc","PI","CHORD","circle","ellipse","mouse_x","mouse_y","mouseIsPressed","mouseX","mouseY","index","indexOf","splice","justifyContent","alignItems","alignContent"],"mappings":"AAAA,OAASA,oBAAT,KAAqC,wBAArC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,2CAEA,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAAgB;AAChB,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CAAe;AACf,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIC,CAAAA,MAAM,CAAG,IAAb,CAAoB;AACpB,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CAAsB;AACtB,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CAAyB;AACzB,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CAA2B;AAC3B,GAAIC,CAAAA,OAAO,CAAG,KAAd,CAAyB;AACzB,GAAIC,CAAAA,KAAK,CAAG,IAAZ,CAEA,eAAe,SAACC,KAAD,CAAW,CAGtB,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,EAAD,CAAKC,eAAL,CAAyB,CACnC;AACA;AACAD,EAAE,CAACE,YAAH,CAAgBC,MAAM,CAACC,UAAP,CAAoB,GAApC,CAAyCD,MAAM,CAACE,WAAP,CAAqB,IAA9D,EAAoEC,MAApE,CAA2EL,eAA3E,EAEH,CALD,CAOA,GAAMM,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACP,EAAD,CAAQ,CAIjB,GAAIH,KAAJ,CAAW,CACPW,UAAU,CAACR,EAAD,CAAV,CAAiB;AACpB,CACDA,EAAE,CAACS,UAAH,CAAc,GAAd,CAAmB,GAAnB,CAAwB,GAAxB,EAEAC,MAAM,CAACV,EAAD,CAAN,CAAa;AACbW,aAAa,CAACX,EAAD,CAAb,CAAmB;AACnBY,qBAAqB,CAACZ,EAAD,CAArB,CAA4B;AAE5Ba,UAAU,CAACb,EAAD,CAAV,CAAgB;AACnB,CAdD,CAiBA,GAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACR,EAAD,CAAQ,CACvB;AAEA;AACA,IAAK,GAAIc,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,CAArB,CAAwBA,CAAC,EAAzB,CAA6B,CACzBzB,KAAK,CAAC0B,IAAN,CAAW,CACP,SAAUD,CAAC,GAAK,CAAN,CAAUX,MAAM,CAACC,UAAP,CAAoB,GAA9B,CAAoCU,CAAC,GAAK,CAAN,CAAUX,MAAM,CAACC,UAAP,CAAoB,GAA9B,CAAoCD,MAAM,CAACC,UAAP,CAAoB,GAD/F,CAEP,SAAU,EAFH,CAGP,QAASJ,EAAE,CAACgB,KAAH,CAAShB,EAAE,CAACiB,MAAH,CAAU,CAAV,CAAa,CAAb,CAAT,CAHF,CAAX,EAMH,CACD;AACAxB,UAAU,CAAGO,EAAE,CAACgB,KAAH,CAAShB,EAAE,CAACiB,MAAH,CAAU,CAAV,CAAa,CAAb,CAAT,CAAb,CAEA;AACA,GAAIC,CAAAA,GAAG,CAAGlB,EAAE,CAACgB,KAAH,CAAShB,EAAE,CAACiB,MAAH,CAAU,CAAV,CAAa,CAAb,CAAT,CAAV,CACA,IAAK,GAAIH,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAG,CAApB,CAAuBA,EAAC,EAAxB,CAA4B,CACxB,GAAIA,EAAC,GAAKI,GAAG,CAAG,CAAhB,CACI7B,KAAK,CAACyB,EAAD,CAAL,CAASzB,KAAT,CAAiBI,UAAjB,CACP,CACDI,KAAK,CAAG,KAAR,CAEH,CAvBD,CAwBA,GAAMe,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACZ,EAAD,CAAQ,CAElC,GAAImB,CAAAA,UAAJ,CACA;AACA,GAAIzB,WAAW,EAAIC,WAAnB,CAAgC,CAC5BF,UAAU,CAAGO,EAAE,CAACgB,KAAH,CAAShB,EAAE,CAACiB,MAAH,CAAU,CAAV,CAAa,CAAb,CAAT,CAAb,CACA,GAAIC,CAAAA,GAAG,CAAGlB,EAAE,CAACgB,KAAH,CAAShB,EAAE,CAACiB,MAAH,CAAU,CAAV,CAAa,CAAb,CAAT,CAAV,CAEA;AACA,IAAK,GAAIH,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CACxB,GAAIzB,KAAK,CAACyB,CAAD,CAAT,CAAc,CACV,GAAIA,CAAC,GAAK,CAAV,CACIzB,KAAK,CAACyB,CAAD,CAAL,CAASM,MAAT,CAAkBjB,MAAM,CAACC,UAAP,CAAoB,GAAtC,CADJ,IAEK,IAAIU,CAAC,GAAK,CAAV,CACDzB,KAAK,CAACyB,CAAD,CAAL,CAASM,MAAT,CAAkBjB,MAAM,CAACC,UAAP,CAAoB,GAAtC,CADC,IAGDf,CAAAA,KAAK,CAACyB,CAAD,CAAL,CAASM,MAAT,CAAkBjB,MAAM,CAACC,UAAP,CAAoB,GAAtC,CAEJf,KAAK,CAACyB,CAAD,CAAL,CAASO,MAAT,CAAkB,EAAlB,CACAhC,KAAK,CAACyB,CAAD,CAAL,CAASzB,KAAT,CAAiBW,EAAE,CAACgB,KAAH,CAAShB,EAAE,CAACiB,MAAH,CAAU,CAAV,CAAa,CAAb,CAAT,CAAjB,CAEH,CACD;AAZA,IAaK,CACD5B,KAAK,CAAC0B,IAAN,CAAW,CACP,SAAUD,CAAC,GAAK,CAAN,CAAUX,MAAM,CAACC,UAAP,CAAoB,GAA9B,CAAoCU,CAAC,GAAK,CAAN,CAAUX,MAAM,CAACC,UAAP,CAAoB,GAA9B,CAAoCD,MAAM,CAACC,UAAP,CAAoB,GAD/F,CAEP,SAAU,EAFH,CAGP,QAASJ,EAAE,CAACgB,KAAH,CAAShB,EAAE,CAACiB,MAAH,CAAU,CAAV,CAAa,CAAb,CAAT,CAHF,CAAX,EAKH,CACD,GAAIH,CAAC,GAAKI,GAAG,CAAG,CAAhB,CACI7B,KAAK,CAACyB,CAAD,CAAL,CAASzB,KAAT,CAAiBI,UAAjB,CACP,CAEDC,WAAW,CAAG,KAAd,CACAC,WAAW,CAAG,IAAd,CACH,CACD;AACA,OAAQF,UAAR,EACI,IAAK,EAAL,CACI0B,UAAU,CAAG,UAAb,CACA,MACJ,IAAK,EAAL,CAEIA,UAAU,CAAG,aAAb,CACA,MACJ,IAAK,EAAL,CAEIA,UAAU,CAAG,QAAb,CACA,MACJ,IAAK,EAAL,CAEIA,UAAU,CAAG,WAAb,CACA,MACJ,IAAK,EAAL,CAEIA,UAAU,CAAG,QAAb,CACA,MACJ,IAAK,EAAL,CAEIA,UAAU,CAAG,SAAb,CACA,MAEJ,QACI,MA1BR,CA6BAnB,EAAE,CAACsB,QAAH,GACAtB,EAAE,CAACuB,IAAH,CAAQ,GAAR,CAAa,GAAb,CAAkB,GAAlB,EACAvB,EAAE,CAACwB,IAAH,CAAQ,CAAR,CAAW,CAAX,CAAcrB,MAAM,CAACC,UAArB,CAAiC,EAAjC,EAEA;AACAJ,EAAE,CAACyB,QAAH,CAAY,EAAZ,EACAzB,EAAE,CAACuB,IAAH,CAAQ,CAAR,CAAW,GAAX,CAAgB,GAAhB,EACAvB,EAAE,CAAC0B,SAAH,CAAa1B,EAAE,CAAC2B,MAAhB,CAAwB3B,EAAE,CAAC4B,GAA3B,EAEL5B,EAAE,CAAE6B,QAAJ,CAAa,SAAb,EACK7B,EAAE,CAAC8B,IAAH,CAAQ,mBAAqBX,UAArB,CAAkC,QAA1C,CAAqDhB,MAAM,CAACC,UAAP,CAAoB,GAArB,CAA4B,CAAhF,CAAmF,EAAnF,EAGA;AACAJ,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAAC0B,SAAH,CAAa1B,EAAE,CAAC+B,KAAhB,CAAuB/B,EAAE,CAAC4B,GAA1B,EAEL5B,EAAE,CAAE6B,QAAJ,CAAa,SAAb,EACK7B,EAAE,CAAC8B,IAAH,CAAQ,WAAavC,KAAb,CAAqB,KAA7B,CAAqCY,MAAM,CAACC,UAAP,CAAoB,GAAzD,CAA+D,EAA/D,EAGH,CAxFD,CA0FA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACb,EAAD,CAAQ,CAEvB;AACA,GAAIR,MAAM,EAAI,CAACI,OAAf,CAAwB,CACpBP,KAAK,CAAC2C,OAAN,CAAc,SAAAC,OAAO,CAAI,CAGrB;AACAA,OAAO,CAACZ,MAAR,EAAkB/B,KAAlB,CACA,GAAI2C,OAAO,CAACZ,MAAR,CAAiBlB,MAAM,CAACE,WAA5B,CAAyC,CACrC;AAEA,GAAIZ,UAAU,GAAKwC,OAAO,CAAC5C,KAA3B,CAAkC,CAC9B;AACAO,OAAO,CAAG,IAAV,CACAJ,MAAM,CAAG,KAAT,CACAE,WAAW,CAAG,IAAd,CACAC,WAAW,CAAG,IAAd,CACH,CAND,IAOK,CACD;AACAsC,OAAO,CAACZ,MAAR,CAAiB,CAAjB,CACAY,OAAO,CAAC5C,KAAR,CAAgBW,EAAE,CAACgB,KAAH,CAAShB,EAAE,CAACiB,MAAH,CAAU,CAAV,CAAa,CAAb,CAAT,CAAhB,CACAtB,WAAW,CAAG,IAAd,CACH,CACJ,CAEJ,CAvBD,EAyBH,CA1BD,IA2BK,IAAI,CAACH,MAAD,EAAWI,OAAO,EAAI,KAA1B,CAAiC,CAClC;AACAI,EAAE,CAACyB,QAAH,CAAY,EAAZ,EACAzB,EAAE,CAACuB,IAAH,CAAQ,GAAR,CAAa,CAAb,CAAgB,CAAhB,EACAvB,EAAE,CAAC0B,SAAH,CAAa1B,EAAE,CAAC2B,MAAhB,CAAwB3B,EAAE,CAAC4B,GAA3B,EACA5B,EAAE,CAAC8B,IAAH,CAAQ,gBAAR,CAA0B3B,MAAM,CAACC,UAAP,CAAoB,GAApB,CAA0B,CAApD,CAAuD,EAAvD,EACAJ,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAAC0B,SAAH,CAAa1B,EAAE,CAACkC,IAAhB,CAAsBlC,EAAE,CAAC4B,GAAzB,EACA5B,EAAE,CAAC8B,IAAH,CAAQ,SAAR,CAAmB,EAAnB,CAAuB,EAAvB,EACH,CATI,IAUA,IAAIlC,OAAO,EAAI,CAACJ,MAAhB,CAAwB,CACzB;AACAQ,EAAE,CAACyB,QAAH,CAAY,EAAZ,EAEAzB,EAAE,CAACuB,IAAH,CAAQ,GAAR,CAAa,CAAb,CAAgB,CAAhB,EACAvB,EAAE,CAAC0B,SAAH,CAAa1B,EAAE,CAAC2B,MAAhB,CAAwB3B,EAAE,CAAC4B,GAA3B,EAET5B,EAAE,CAAE6B,QAAJ,CAAa,SAAb,EACS7B,EAAE,CAAC8B,IAAH,CAAQ,sBAAR,CAAgC3B,MAAM,CAACC,UAAP,CAAoB,GAApB,CAA0B,CAA1D,CAA6D,EAA7D,EACAJ,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAAC0B,SAAH,CAAa1B,EAAE,CAACkC,IAAhB,CAAsBlC,EAAE,CAAC4B,GAAzB,EAET5B,EAAE,CAAE6B,QAAJ,CAAa,SAAb,EACS7B,EAAE,CAAC8B,IAAH,CAAQ,SAAR,CAAmB,EAAnB,CAAuB,EAAvB,EACH,CAEJ,CAxDD,CAyDA,GAAMpB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACV,EAAD,CAAQ,CAEnB;AACAA,EAAE,CAACuB,IAAH,CAAQ,MAAR,EAEAlC,KAAK,CAAC2C,OAAN,CAAc,SAAAG,MAAM,CAAI,CACpB,GAAIA,MAAM,CAAC9C,KAAP,GAAiB,CAArB,CAAwB,CAEpB;AACAW,EAAE,CAACoC,MAAH,CAAU,CAAV,EACApC,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAACqC,QAAH,CAAYF,MAAM,CAACf,MAAnB,CAA2Be,MAAM,CAACd,MAAlC,CAA0Cc,MAAM,CAACf,MAAP,CAAgB,EAA1D,CAA8De,MAAM,CAACd,MAAP,CAAgB,EAA9E,CAAkFc,MAAM,CAACf,MAAzF,CAAiGe,MAAM,CAACd,MAAP,CAAgB,EAAjH,EACA;AACA;AACA;AACH,CATD,IAUK,IAAIc,MAAM,CAAC9C,KAAP,GAAiB,CAArB,CAAwB,CAEzB;AACAW,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAACsC,GAAH,CAAOH,MAAM,CAACf,MAAd,CAAsBe,MAAM,CAACd,MAAP,CAAgB,EAAtC,CAA0C,EAA1C,CAA8C,EAA9C,CAAkDrB,EAAE,CAACuC,EAArD,CAAyD,CAAzD,CAA4DvC,EAAE,CAACwC,KAA/D,EACH,CALI,IAMA,IAAIL,MAAM,CAAC9C,KAAP,GAAiB,CAArB,CAAwB,CAEzB;AACAW,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAACwB,IAAH,CAAQW,MAAM,CAACf,MAAf,CAAuBe,MAAM,CAACd,MAA9B,CAAsC,EAAtC,CAA0C,EAA1C,EACH,CALI,IAMA,IAAIc,MAAM,CAAC9C,KAAP,GAAiB,CAArB,CAAwB,CAEzB;AACAW,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAACwB,IAAH,CAAQW,MAAM,CAACf,MAAf,CAAuBe,MAAM,CAACd,MAA9B,CAAsC,EAAtC,CAA0C,EAA1C,EACH,CALI,IAKE,IAAIc,MAAM,CAAC9C,KAAP,GAAiB,CAArB,CAAwB,CAC3B;AACAW,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAACyC,MAAH,CAAUN,MAAM,CAACf,MAAjB,CAAyBe,MAAM,CAACd,MAAP,CAAgB,EAAzC,CAA6C,EAA7C,CAAiD,EAAjD,EACH,CAJM,IAIA,IAAIc,MAAM,CAAC9C,KAAP,GAAiB,CAArB,CAAwB,CAC3B;AACAW,EAAE,CAACuB,IAAH,CAAQ,SAAR,EACAvB,EAAE,CAAC0C,OAAH,CAAWP,MAAM,CAACf,MAAlB,CAA0Be,MAAM,CAACd,MAAP,CAAgB,EAA1C,CAA8C,EAA9C,CAAkD,EAAlD,EACH,CACJ,CArCD,EAwCH,CA7CD,CAkDA,GAAMV,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACX,EAAD,CAAQ,CAC1B;AACA,GAAI2C,CAAAA,OAAJ,CACA,GAAIC,CAAAA,OAAJ,CACA,GAAI5C,EAAE,CAAC6C,cAAH,EAAqB,IAAzB,CAA+B,CAC3BF,OAAO,CAAG3C,EAAE,CAAC8C,MAAb,CACAF,OAAO,CAAG5C,EAAE,CAAC+C,MAAb,CACH,CAED,GAAIvD,MAAJ,CAAY,CACRH,KAAK,CAAC2C,OAAN,CAAc,SAAAC,OAAO,CAAI,CACrB,GAAIU,OAAO,CAAGV,OAAO,CAACb,MAAR,CAAiB,EAA3B,EAAiCwB,OAAO,CAAGX,OAAO,CAACZ,MAAR,CAAiB,EAAhE,CAAoE,CAAE;AAClE,OAAQY,OAAO,CAAC5C,KAAhB,EACI,IAAK,EAAL,CAAW;AACP,GAAIW,EAAE,CAAC8C,MAAH,CAAYb,OAAO,CAACb,MAAR,CAAiB,EAA7B,EAAmCpB,EAAE,CAAC+C,MAAH,CAAYd,OAAO,CAACZ,MAAR,CAAiB,EAApE,CAAwE,CAEpE,GAAI5B,UAAU,GAAKwC,OAAO,CAAC5C,KAA3B,CAAkC,CAAC;AAE/B,GAAM2D,CAAAA,KAAK,CAAG3D,KAAK,CAAC4D,OAAN,CAAchB,OAAd,CAAd,CACA,GAAIe,KAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,KAAK,CAAC6D,MAAN,CAAaF,KAAb,CAAoB,CAApB,EAA2B;AAC9B,CACDzD,KAAK,GACLG,WAAW,CAAG,IAAd,CACH,CARD,IASK,CAEDF,MAAM,CAAG,KAAT,CACH,CAEJ,CAhBD,IAiBK,CAEJ,CAED,MACJ,IAAK,EAAL,CAAU;AACN,GAAIQ,EAAE,CAAC8C,MAAH,CAAYb,OAAO,CAACb,MAAR,CAAiB,EAA7B,EAAmCpB,EAAE,CAAC+C,MAAH,CAAYd,OAAO,CAACZ,MAAR,CAAiB,EAApE,CAAwE,CAEpE,GAAI5B,UAAU,GAAKwC,OAAO,CAAC5C,KAA3B,CAAkC,CAE9B,GAAM2D,CAAAA,MAAK,CAAG3D,KAAK,CAAC4D,OAAN,CAAchB,OAAd,CAAd,CACA,GAAIe,MAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,KAAK,CAAC6D,MAAN,CAAaF,MAAb,CAAoB,CAApB,EACH,CACDzD,KAAK,GACLG,WAAW,CAAG,IAAd,CACH,CARD,IASK,CAEDF,MAAM,CAAG,KAAT,CACH,CAEJ,CAhBD,IAiBK,CAEJ,CAED,MACJ,IAAK,EAAL,CAAO;AACH,GAAIQ,EAAE,CAAC8C,MAAH,CAAYb,OAAO,CAACb,MAAR,CAAiB,EAA7B,EAAmCpB,EAAE,CAAC+C,MAAH,CAAYd,OAAO,CAACZ,MAAR,CAAiB,EAApE,CAAwE,CACpE,GAAI5B,UAAU,GAAKwC,OAAO,CAAC5C,KAA3B,CAAkC,CAE9B,GAAM2D,CAAAA,OAAK,CAAG3D,KAAK,CAAC4D,OAAN,CAAchB,OAAd,CAAd,CACA,GAAIe,OAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,KAAK,CAAC6D,MAAN,CAAaF,OAAb,CAAoB,CAApB,EACH,CACDzD,KAAK,GACLG,WAAW,CAAG,IAAd,CACH,CARD,IASK,CAEDF,MAAM,CAAG,KAAT,CACH,CAEJ,CAfD,IAgBK,CAEJ,CAED,MACJ,IAAK,EAAL,CAAO;AACH,GAAIQ,EAAE,CAAC8C,MAAH,CAAYb,OAAO,CAACb,MAAR,CAAiB,EAA7B,EAAmCpB,EAAE,CAAC+C,MAAH,CAAYd,OAAO,CAACZ,MAAR,CAAiB,EAApE,CAAwE,CAEpE,GAAI5B,UAAU,GAAKwC,OAAO,CAAC5C,KAA3B,CAAkC,CAE9B,GAAM2D,CAAAA,OAAK,CAAG3D,KAAK,CAAC4D,OAAN,CAAchB,OAAd,CAAd,CACA,GAAIe,OAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,KAAK,CAAC6D,MAAN,CAAaF,OAAb,CAAoB,CAApB,EACH,CACDzD,KAAK,GACLG,WAAW,CAAG,IAAd,CACH,CARD,IASK,CAEDF,MAAM,CAAG,KAAT,CACH,CAEJ,CAhBD,IAiBK,CAEJ,CAED,MACJ,IAAK,EAAL,CAAO;AACH,GAAIQ,EAAE,CAAC8C,MAAH,CAAYb,OAAO,CAACb,MAAR,CAAiB,EAA7B,EAAmCpB,EAAE,CAAC+C,MAAH,CAAYd,OAAO,CAACZ,MAAR,CAAiB,EAApE,CAAwE,CAEpE,GAAI5B,UAAU,GAAKwC,OAAO,CAAC5C,KAA3B,CAAkC,CAE9B,GAAM2D,CAAAA,OAAK,CAAG3D,KAAK,CAAC4D,OAAN,CAAchB,OAAd,CAAd,CACA,GAAIe,OAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,KAAK,CAAC6D,MAAN,CAAaF,OAAb,CAAoB,CAApB,EACH,CACDzD,KAAK,GACLG,WAAW,CAAG,IAAd,CACH,CARD,IASK,CAEDF,MAAM,CAAG,KAAT,CACH,CAEJ,CAhBD,IAiBK,CAEJ,CAED,MACJ,IAAK,EAAL,CAAO;AACH,GAAIQ,EAAE,CAAC8C,MAAH,CAAYb,OAAO,CAACb,MAAR,CAAiB,EAA7B,EAAmCpB,EAAE,CAAC+C,MAAH,CAAYd,OAAO,CAACZ,MAAR,CAAiB,EAApE,CAAwE,CAEpE,GAAI5B,UAAU,GAAKwC,OAAO,CAAC5C,KAA3B,CAAkC,CAE9B,GAAM2D,CAAAA,OAAK,CAAG3D,KAAK,CAAC4D,OAAN,CAAchB,OAAd,CAAd,CACA,GAAIe,OAAK,CAAG,CAAC,CAAb,CAAgB,CACZ3D,KAAK,CAAC6D,MAAN,CAAaF,OAAb,CAAoB,CAApB,EACH,CACDzD,KAAK,GACLG,WAAW,CAAG,IAAd,CACH,CARD,IASK,CAEDF,MAAM,CAAG,KAAT,CACH,CAEJ,CAhBD,IAiBK,CAEJ,CAED,MAEJ,QACI,MA5IR,CA+IH,CACJ,CAlJD,EAmJH,CApJD,IAsJK,IAAI,CAACA,MAAL,CAAa,CACd;AACA,GAAImD,OAAO,CAAG,EAAV,EAAgBC,OAAO,CAAG,EAA1B,EAAgCD,OAAO,CAAG,GAA1C,EAAiDC,OAAO,CAAG,EAA/D,CAAmE,CAC/DpD,MAAM,CAAG,IAAT,CACAI,OAAO,CAAG,KAAV,CACAL,KAAK,CAAG,CAAR,CACH,CACJ,CAEJ,CAxKD,CA2KA,mBAAO,KAAC,MAAD,EAAQ,KAAK,CAAEQ,KAAf,CACH,IAAI,CAAEQ,IADH,CAEH,KAAK,CACD,CACI4C,cAAc,CAAE,QADpB,CAEIC,UAAU,CAAE,QAFhB,CAGIC,YAAY,CAAE,QAHlB,CAHD,EAAP,CAWH,CA9aD","sourcesContent":["import { getQueriesForElement } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nlet shape = []; //shapes array contain multiple shapes\r\nlet speed = 1  // speed from which they comes down\r\nlet score = 0\r\nlet answer = true;  // if previous answer is true\r\nlet ques_shape = 1;   // correct answer shape\r\nlet change_ques = false  // to change the question\r\nlet next_shapes = false;   // setup the next shape\r\nlet dropped = false      // if correct shape is dropped\r\nlet start = true\r\n\r\nexport default (props) => {\r\n\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n        // use parent to render the canvas in this ref\r\n        // (without that p5 will render the canvas outside of your component)\r\n        p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n    };\r\n\r\n    const draw = (p5) => {\r\n\r\n\r\n\r\n        if (start) {\r\n            setupstart(p5)   // runs only first time\r\n        }\r\n        p5.background(255, 241, 208);\r\n\r\n        shapes(p5)   // display the shapes \r\n        getMouseClick(p5)  // get the mouse tap\r\n        questions_and_answers(p5);  //display the shapes\r\n\r\n        moveShapes(p5)  // move the shapes\r\n    };\r\n\r\n\r\n    const setupstart = (p5) => {\r\n        // runs only first time\r\n\r\n        // assign the shapes in the shape array with their position coordinates\r\n        for (let i = 1; i <= 3; i++) {\r\n            shape.push({\r\n                'x_cord': i === 1 ? window.innerWidth * 0.1 : i === 2 ? window.innerWidth * 0.3 : window.innerWidth * 0.5,\r\n                'y_cord': 10,\r\n                'shape': p5.floor(p5.random(1, 7))\r\n            })\r\n\r\n        }\r\n        //correct answer shape\r\n        ques_shape = p5.floor(p5.random(1, 7))\r\n\r\n        //adding the correct shape in the options\r\n        let ans = p5.floor(p5.random(1, 4))\r\n        for (let i = 0; i < 3; i++) {\r\n            if (i === ans - 1)\r\n                shape[i].shape = ques_shape\r\n        }\r\n        start = false\r\n\r\n    }\r\n    const questions_and_answers = (p5) => {\r\n\r\n        let shape_name;\r\n        // if question is changes or selcted the right answer\r\n        if (change_ques && next_shapes) {\r\n            ques_shape = p5.floor(p5.random(1, 7))\r\n            let ans = p5.floor(p5.random(1, 4))\r\n\r\n            //asign shapes to the option\r\n            for (let i = 0; i < 3; i++) {\r\n                if (shape[i]) {\r\n                    if (i === 0)\r\n                        shape[i].x_cord = window.innerWidth * 0.1;\r\n                    else if (i === 1)\r\n                        shape[i].x_cord = window.innerWidth * 0.3;\r\n                    else\r\n                        shape[i].x_cord = window.innerWidth * 0.5;\r\n\r\n                    shape[i].y_cord = 10;\r\n                    shape[i].shape = p5.floor(p5.random(1, 7));\r\n\r\n                }\r\n                //            adding new option if right answer is tapped and removed\r\n                else {\r\n                    shape.push({\r\n                        'x_cord': i === 0 ? window.innerWidth * 0.1 : i === 1 ? window.innerWidth * 0.3 : window.innerWidth * 0.5,\r\n                        'y_cord': 10,\r\n                        'shape': p5.floor(p5.random(1, 7))\r\n                    })\r\n                }\r\n                if (i === ans - 1)\r\n                    shape[i].shape = ques_shape\r\n            }\r\n\r\n            change_ques = false\r\n            next_shapes = true\r\n        }\r\n        // questions shapes with reference to their assign number\r\n        switch (ques_shape) {\r\n            case 1:\r\n                shape_name = 'Triangle'\r\n                break;\r\n            case 2:\r\n\r\n                shape_name = 'Half Circle'\r\n                break;\r\n            case 3:\r\n\r\n                shape_name = 'Square'\r\n                break;\r\n            case 4:\r\n\r\n                shape_name = 'Rectangle'\r\n                break;\r\n            case 5:\r\n\r\n                shape_name = 'Circle'\r\n                break;\r\n            case 6:\r\n\r\n                shape_name = 'Ellipse'\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        p5.noStroke();\r\n        p5.fill(255, 241, 208)\r\n        p5.rect(0, 0, window.innerWidth, 60)\r\n\r\n        // Display the question\r\n        p5.textSize(26);\r\n        p5.fill(0, 102, 153);\r\n        p5.textAlign(p5.CENTER, p5.TOP);\r\n        \r\n   p5 .textFont('Cursive')\r\n        p5.text('Task :: Tap the ' + shape_name + ' shape', (window.innerWidth * 0.6) / 2, 20);\r\n\r\n\r\n        // Display the score\r\n        p5.fill('#C22A85');\r\n        p5.textAlign(p5.RIGHT, p5.TOP);\r\n        \r\n   p5 .textFont('Cursive')\r\n        p5.text('Score : ' + score + '   ', (window.innerWidth * 0.6), 20);\r\n\r\n\r\n    }\r\n\r\n    const moveShapes = (p5) => {\r\n\r\n        // if previous answer is true and the shape is not dropped\r\n        if (answer && !dropped) {\r\n            shape.forEach(element => {\r\n\r\n\r\n                //            moves the y axis of the all shapes \r\n                element.y_cord += speed\r\n                if (element.y_cord > window.innerHeight) {\r\n                    //if shapes goes in the bottom of the canvas\r\n\r\n                    if (ques_shape === element.shape) {\r\n                        //if answer is dropped\r\n                        dropped = true\r\n                        answer = false\r\n                        change_ques = true\r\n                        next_shapes = true\r\n                    }\r\n                    else {\r\n                        // resetting their position \r\n                        element.y_cord = 0\r\n                        element.shape = p5.floor(p5.random(1, 7))\r\n                        next_shapes = true\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n        else if (!answer && dropped == false) {\r\n            // if the answer is wrong :: Display the wrong msg\r\n            p5.textSize(26);\r\n            p5.fill(157, 0, 0);\r\n            p5.textAlign(p5.CENTER, p5.TOP);\r\n            p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2, 70)\r\n            p5.fill('#C22A85');\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            p5.text('Retry ↻', 20, 20)\r\n        }\r\n        else if (dropped && !answer) {\r\n            // If the right answer shape is dropped ::display the msg\r\n            p5.textSize(26);\r\n\r\n            p5.fill(157, 0, 0);\r\n            p5.textAlign(p5.CENTER, p5.TOP);\r\n            \r\n   p5 .textFont('Cursive')\r\n            p5.text('Oops shape dropped ✘', window.innerWidth * 0.6 / 2, 70)\r\n            p5.fill('#C22A85');\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            \r\n   p5 .textFont('Cursive')\r\n            p5.text('Retry ↻', 20, 20)\r\n        }\r\n\r\n    }\r\n    const shapes = (p5) => {\r\n\r\n        // Sketch each shape and fill seprate color\r\n        p5.fill('#222')\r\n\r\n        shape.forEach(elemen => {\r\n            if (elemen.shape === 1) {\r\n\r\n                //                ---------------*****  Triangle   ****---------------------\r\n                p5.stroke(1)\r\n                p5.fill('#686DA7')\r\n                p5.triangle(elemen.x_cord, elemen.y_cord, elemen.x_cord + 50, elemen.y_cord + 50, elemen.x_cord, elemen.y_cord + 50)\r\n                // p5.line(elemen.x_cord,elemen.y_cord,elemen.x_cord+50,elemen.y_cord+50);\r\n                // p5.line(elemen.x_cord,elemen.y_cord,elemen.x_cord,elemen.y_cord+50);\r\n                // p5.line(elemen.x_cord,elemen.y_cord+50,elemen.x_cord+50,elemen.y_cord+50);\r\n            }\r\n            else if (elemen.shape === 2) {\r\n\r\n                //                ---------------*****  half circle   ****---------------------\r\n                p5.fill('#681346')\r\n                p5.arc(elemen.x_cord, elemen.y_cord + 25, 50, 50, p5.PI, 0, p5.CHORD);\r\n            }\r\n            else if (elemen.shape === 3) {\r\n\r\n                //                ---------------*****  square   ****---------------------\r\n                p5.fill('#4633FF')\r\n                p5.rect(elemen.x_cord, elemen.y_cord, 50, 50);\r\n            }\r\n            else if (elemen.shape === 4) {\r\n\r\n                //                ---------------*****  rectangle   ****---------------------\r\n                p5.fill('#FF5733')\r\n                p5.rect(elemen.x_cord, elemen.y_cord, 80, 50);\r\n            } else if (elemen.shape === 5) {\r\n                //                ---------------*****  circle   ****---------------------\r\n                p5.fill('#33FF36')\r\n                p5.circle(elemen.x_cord, elemen.y_cord + 25, 50, 50);\r\n            } else if (elemen.shape === 6) {\r\n                //                ---------------*****  ellipse   ****---------------------\r\n                p5.fill('#3396FF')\r\n                p5.ellipse(elemen.x_cord, elemen.y_cord + 25, 80, 50);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const getMouseClick = (p5) => {\r\n        // ge the mouse click position\r\n        let mouse_x;\r\n        let mouse_y;\r\n        if (p5.mouseIsPressed == true) {\r\n            mouse_x = p5.mouseX;\r\n            mouse_y = p5.mouseY;\r\n        }\r\n\r\n        if (answer) {\r\n            shape.forEach(element => {\r\n                if (mouse_x > element.x_cord - 25 && mouse_y > element.y_cord - 25) { // if mouse is tapped on the shape \r\n                    switch (element.shape) {\r\n                        case 1:    // if the shape is triangle\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {// check the ques shape\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);    // remove frrom the display\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 2:   /// if the shape is half circle\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 3:// if the shape is square\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 4:// if the shape is rectangle\r\n                            if (p5.mouseX < element.x_cord + 80 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 5:// if the shape is circle\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n                        case 6:// if the shape is ellipse\r\n                            if (p5.mouseX < element.x_cord + 50 && p5.mouseY < element.y_cord + 50) {\r\n\r\n                                if (ques_shape === element.shape) {\r\n\r\n                                    const index = shape.indexOf(element);\r\n                                    if (index > -1) {\r\n                                        shape.splice(index, 1);\r\n                                    }\r\n                                    score++;\r\n                                    change_ques = true\r\n                                }\r\n                                else {\r\n\r\n                                    answer = false\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n\r\n                            }\r\n\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n        else if (!answer) {\r\n            // if tapped on retry \r\n            if (mouse_x > 20 && mouse_y > 20 && mouse_x < 100 && mouse_y < 40) {\r\n                answer = true\r\n                dropped = false\r\n                score = 0\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return <Sketch setup={setup}\r\n        draw={draw}\r\n        style={\r\n            {\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                alignContent: 'center',\r\n\r\n            }\r\n        }\r\n    />;\r\n};"]},"metadata":{},"sourceType":"module"}