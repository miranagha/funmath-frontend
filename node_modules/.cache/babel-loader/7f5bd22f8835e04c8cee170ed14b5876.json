{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/funmath/funmath/src/games/game5.js\";\nimport React from \"react\";\nimport Sketch from \"react-p5\"; // Fish coordinates\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet fish_x;\nlet fish_y; // speed of the fish\n\nlet speed = 5;\nlet new_question = false; //oprator in the question\n\nlet op; // question json body with two numbers and oprator between them\n\nlet question = {\n  n1: 0,\n  n2: 0,\n  op: 0\n}; //options array\n\nlet options = [];\nlet answer = true; // if previous answer is true\n\nlet correct_option; // the correct option \n\nlet correct; // if the answer is correct\n\nlet score = 0;\nlet start = true;\nexport default (props => {\n  const setup = (p5, canvasParentRef) => {\n    // use parent to render the canvas in this ref\n    // (without that p5 will render the canvas outside of your component)\n    p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef);\n  };\n\n  const draw = p5 => {\n    if (start) {\n      setupstart(p5); //runs only first time\n    }\n\n    p5.background(255, 241, 208);\n    myfish(p5);\n    keyTyped(p5);\n    walls(p5);\n    questions_and_answers(p5);\n    retry(p5);\n  };\n\n  const setupstart = p5 => {\n    // fish position in the cordinates\n    fish_x = window.innerWidth * 0.6 / 2;\n    fish_y = window.innerHeight * 0.75; // picks the question randomly\n\n    question.n1 = p5.floor(p5.random(26, 50));\n    question.n2 = p5.floor(p5.random(1, 25));\n    question.op = p5.floor(p5.random(1, 3));\n    if (question.op == 1) // get the oprator +ve or -ve\n      op = '+';else op = '-'; // calculate the right answer\n\n    correct_option = question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2;\n    correct = p5.floor(p5.random(1, 5)); //        push the opions in the array \n\n    for (let i = 1; i <= 4; i++) {\n      if (i === 1) {\n        options.push({\n          'x_cord': 350,\n          'y_cord': window.innerHeight * 0.75 / 4,\n          'number': correct === i ? question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2 : p5.floor(p5.random(1, 100))\n        });\n      } else if (i === 2) {\n        options.push({\n          'x_cord': window.innerWidth * 0.6 / 4,\n          'y_cord': window.innerHeight * 0.75 / 1.8,\n          'number': correct === i ? question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2 : p5.floor(p5.random(1, 100))\n        });\n      } else if (i === 3) {\n        options.push({\n          'x_cord': window.innerWidth * 0.6 / 2 + 60,\n          'y_cord': window.innerHeight * 0.75 / 4,\n          'number': correct === i ? question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2 : p5.floor(p5.random(1, 100))\n        });\n      } else if (i === 4) {\n        options.push({\n          'x_cord': window.innerWidth * 0.6 / 2 + window.innerWidth * 0.6 / 3,\n          'y_cord': window.innerHeight * 0.75 / 1.8,\n          'number': correct === i ? question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2 : p5.floor(p5.random(1, 100))\n        });\n      }\n    }\n\n    start = false;\n  };\n\n  const retry = p5 => {\n    //get mouse position\n    let mouse_x;\n    let mouse_y;\n\n    if (p5.mouseIsPressed == true) {\n      mouse_x = p5.mouseX;\n      mouse_y = p5.mouseY;\n    } // if pressed retry or play again\n\n\n    if (new_question || !answer && mouse_x >= window.innerWidth * 0.6 / 4 && mouse_x <= window.innerWidth * 0.6 / 4 + 80 && mouse_y > window.innerHeight * 0.75 / 1.2 && window.innerHeight * 0.75 / 1.2 + 20) {\n      // assign the new question\n      question.n1 = p5.floor(p5.random(26, 50));\n      question.n2 = p5.floor(p5.random(1, 25));\n      question.op = p5.floor(p5.random(1, 3));\n      if (question.op == 1) op = '+';else op = '-'; // get the right answer\n\n      correct_option = question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2;\n      correct = p5.floor(p5.random(0, 3)); // assign new options to the options array\n\n      for (let i = 0; i <= 3; i++) {\n        if (i === 0) {\n          options[i].x_cord = 350;\n          options[i].Y_cord = window.innerHeight * 0.75 / 4;\n          options[i].number = correct === i ? question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2 : p5.floor(p5.random(1, 100));\n        } else if (i === 1) {\n          options[i].x_cord = window.innerWidth * 0.6 / 4;\n          options[i].y_cord = window.innerHeight * 0.75 / 1.8;\n          options[i].number = correct === i ? question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2 : p5.floor(p5.random(1, 100));\n        } else if (i === 2) {\n          options[i].x_cord = window.innerWidth * 0.6 / 2 + 60;\n          options[i].y_cord = window.innerHeight * 0.75 / 4;\n          options[i].number = correct === i ? question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2 : p5.floor(p5.random(1, 100));\n        } else if (i === 3) {\n          options[i].x_cord = window.innerWidth * 0.6 / 2 + window.innerWidth * 0.6 / 3;\n          options[i].y_cord = window.innerHeight * 0.75 / 1.8;\n          options[i].number = correct === i ? question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2 : p5.floor(p5.random(1, 100));\n        }\n      } //setting the fish position\n\n\n      fish_x = window.innerWidth * 0.6 / 2;\n      fish_y = window.innerHeight * 0.75;\n      if (!answer) // check if answer is wrong\n        score = 0;\n      answer = true;\n      new_question = false;\n    }\n  };\n\n  const questions_and_answers = p5 => {\n    p5.textSize(26);\n    p5.fill(0, 102, 153); // display the question\n\n    p5.textAlign(p5.CENTER, p5.CENTER);\n    p5.textFont('Cursive');\n    p5.text('Task :: Let the Funkie get the missing part', window.innerWidth * 0.6 / 2, 30);\n    p5.text(question.n1 + ' ' + op + ' ' + question.n2 + ' =  ___', window.innerWidth * 0.6 / 2, 60); // display the score\n\n    p5.fill('#C22A85');\n    p5.textAlign(p5.RIGHT, p5.TOP);\n    p5.text('Score : ' + score + '   ', window.innerWidth * 0.6, 20); // display the opions\n\n    options.forEach(element => {\n      p5.textSize(26);\n      p5.fill('#27AE60');\n      p5.textAlign(p5.CENTER, p5.CENTER);\n      p5.text(element.number, element.x_cord, element.y_cord);\n    });\n    options.forEach(element => {\n      if (fish_x > element.x_cord - 25 && fish_x < element.x_cord + 30 && fish_y > element.y_cord + 30 && fish_y < element.y_cord + 60) {\n        // if fish gets the right option\n        if (element.number === correct_option) {\n          const index = options.indexOf(element);\n\n          if (index > -1) {\n            score++;\n            new_question = true;\n          }\n        } else {\n          // if get the wrong options\n          answer = false;\n        }\n      }\n    }); //    if(new_question){   \n    //     question.n1=p5.floor(p5.random(1,50))\n    //     question.n2=p5.floor(p5.random(1,50))\n    //     question.op=p5.floor(p5.random(1,3))\n    //     if(question.op==1)\n    //     op='+'\n    //     else\n    //     op='-'\n    //        new_question=false\n    //    }\n  };\n\n  const walls = p5 => {\n    // Display the walls \n    p5.fill('#870000');\n    p5.rect(0, 0, window.innerWidth * 0.6, 10);\n    p5.rect(0, 0, 10, window.innerHeight * 0.75);\n    p5.rect(0, window.innerHeight * 0.75 - 10, window.innerWidth * 0.6, 10);\n    p5.rect(window.innerWidth * 0.6 - 10, 0, 10, window.innerHeight * 0.75);\n    p5.rect(window.innerWidth * 0.6 / 2, 120, 10, window.innerHeight * 0.75 - 240);\n    p5.rect(window.innerWidth * 0.6 / 2 * 0.3 - 10, window.innerHeight * 0.75 / 3, window.innerWidth * 0.6 / 4, 10);\n    p5.rect(window.innerWidth * 0.6 / 2 * 0.3 * 4 + 10, window.innerHeight * 0.75 / 3, window.innerWidth * 0.6 / 4, 10);\n    p5.rect(window.innerWidth * 0.6 / 2 * 0.3 - 10, window.innerHeight * 0.75 / 3 * 2, window.innerWidth * 0.6 / 4, 10);\n    p5.rect(window.innerWidth * 0.6 / 2 * 0.3 * 4 + 10, window.innerHeight * 0.75 / 3 * 2, window.innerWidth * 0.6 / 4, 10);\n  };\n\n  const myfish = p5 => {\n    // Sketch the Fish\n    p5.noStroke();\n    p5.fill('#FF4A1D');\n    p5.circle(fish_x, fish_y - 50, 50, 50);\n    p5.fill('#fff');\n    p5.ellipse(fish_x - 10, fish_y - 58, 13, 16);\n    p5.ellipse(fish_x + 10, fish_y - 58, 13, 16);\n    p5.fill('#000');\n    p5.ellipse(fish_x - 10, fish_y - 58, 6, 6);\n    p5.ellipse(fish_x + 10, fish_y - 58, 6, 6);\n    p5.fill('#fff');\n    p5.ellipse(fish_x, fish_y - 38, 9, 9);\n  };\n\n  const keyTyped = p5 => {\n    //Get the key typed\n    if (answer) {\n      if (p5.keyIsDown(p5.LEFT_ARROW) && fish_x > 35) {\n        // Check if there's wall between\n        if (fish_x >= window.innerWidth * 0.6 / 2 && fish_x <= window.innerWidth * 0.6 / 2 + 40 && fish_y > 150 && fish_y < 190 + window.innerHeight * 0.75 - 240 || (fish_x >= window.innerWidth * 0.6 / 2 * 0.3 - 10 && fish_x <= window.innerWidth * 0.6 / 2 * 0.3 + 18 + window.innerWidth * 0.6 / 4 || fish_x >= window.innerWidth * 0.6 / 2 * 0.3 * 4 && fish_x <= window.innerWidth * 0.6 / 2 * 0.3 * 4 + 45 + window.innerWidth * 0.6 / 4) && (fish_y >= window.innerHeight * 0.75 / 3 + 35 && fish_y < window.innerHeight * 0.75 / 3 + 80 || fish_y >= 2 * (window.innerHeight * 0.75 / 3) + 35 && fish_y < 2 * (window.innerHeight * 0.75 / 3) + 80)) {} else fish_x -= speed;\n      } // Check if there's wall between\n      else if (p5.keyIsDown(p5.RIGHT_ARROW) && fish_x < window.innerWidth * 0.6 - 35) {\n          if (fish_x >= window.innerWidth * 0.6 / 2 - 30 && fish_x <= window.innerWidth * 0.6 / 2 + 35 && fish_y > 150 && fish_y < 190 + window.innerHeight * 0.75 - 240 || (fish_x >= window.innerWidth * 0.6 / 2 * 0.3 - 43 && fish_x <= window.innerWidth * 0.6 / 2 * 0.3 - 20 + window.innerWidth * 0.6 / 4 || fish_x >= window.innerWidth * 0.6 / 2 * 0.3 * 4 - 30 && fish_x <= window.innerWidth * 0.6 / 2 * 0.3 * 4 + 34 + window.innerWidth * 0.6 / 4) && (fish_y >= window.innerHeight * 0.75 / 3 + 35 && fish_y < window.innerHeight * 0.75 / 3 + 80 || fish_y >= 2 * (window.innerHeight * 0.75 / 3) + 35 && fish_y < 2 * (window.innerHeight * 0.75 / 3) + 80)) {} else fish_x += speed;\n        } // Check if there's wall between\n        else if (p5.keyIsDown(p5.DOWN_ARROW) && fish_y < window.innerHeight * 0.75 + 15) {\n            if (fish_x >= window.innerWidth * 0.6 / 2 - 25 && fish_x <= window.innerWidth * 0.6 / 2 + 35 && fish_y > 145 && fish_y < 190 + window.innerHeight * 0.75 - 240 || (fish_x >= window.innerWidth * 0.6 / 2 * 0.3 - 38 && fish_x <= window.innerWidth * 0.6 / 2 * 0.3 + 10 + window.innerWidth * 0.6 / 4 || fish_x >= window.innerWidth * 0.6 / 2 * 0.3 * 4 - 20 && fish_x <= window.innerWidth * 0.6 / 2 * 0.3 * 4 + 34 + window.innerWidth * 0.6 / 4) && (fish_y >= window.innerHeight * 0.75 / 3 + 25 && fish_y < window.innerHeight * 0.75 / 3 + 70 || fish_y >= 2 * (window.innerHeight * 0.75 / 3) + 25 && fish_y < 2 * (window.innerHeight * 0.75 / 3) + 70)) {} else fish_y += speed;\n          } // Check if there's wall between\n          else if (p5.keyIsDown(p5.UP_ARROW) && fish_y > 85) {\n              if (fish_x >= window.innerWidth * 0.6 / 2 - 25 && fish_x <= window.innerWidth * 0.6 / 2 + 35 && fish_y > 130 && fish_y < 200 + window.innerHeight * 0.75 - 240 || (fish_x >= window.innerWidth * 0.6 / 2 * 0.3 - 38 && fish_x <= window.innerWidth * 0.6 / 2 * 0.3 + 10 + window.innerWidth * 0.6 / 4 || fish_x >= window.innerWidth * 0.6 / 2 * 0.3 * 4 - 20 && fish_x <= window.innerWidth * 0.6 / 2 * 0.3 * 4 + 34 + window.innerWidth * 0.6 / 4) && (fish_y >= window.innerHeight * 0.75 / 3 + 25 && fish_y < window.innerHeight * 0.75 / 3 + 90 || fish_y >= 2 * (window.innerHeight * 0.75 / 3) + 25 && fish_y < 2 * (window.innerHeight * 0.75 / 3) + 90)) {} else fish_y -= speed;\n            }\n    } else {\n      //Display the wrong answer message\n      p5.textSize(26);\n      p5.fill('#E74C3C');\n      p5.textAlign(p5.RIGHT, p5.TOP);\n      p5.textFont('Cursive');\n      p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2 + window.innerWidth * 0.6 / 3, window.innerHeight * 0.75 / 1.2);\n      p5.textAlign(p5.LEFT, p5.TOP);\n      p5.textFont('Cursive');\n      p5.text('Retry ↻', window.innerWidth * 0.6 / 4, window.innerHeight * 0.75 / 1.2);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw,\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 12\n  }, this);\n});","map":{"version":3,"sources":["/Users/user/Desktop/funmath/funmath/src/games/game5.js"],"names":["React","Sketch","fish_x","fish_y","speed","new_question","op","question","n1","n2","options","answer","correct_option","correct","score","start","props","setup","p5","canvasParentRef","createCanvas","window","innerWidth","innerHeight","parent","draw","setupstart","background","myfish","keyTyped","walls","questions_and_answers","retry","floor","random","i","push","mouse_x","mouse_y","mouseIsPressed","mouseX","mouseY","x_cord","Y_cord","number","y_cord","textSize","fill","textAlign","CENTER","textFont","text","RIGHT","TOP","forEach","element","index","indexOf","rect","noStroke","circle","ellipse","keyIsDown","LEFT_ARROW","RIGHT_ARROW","DOWN_ARROW","UP_ARROW","LEFT","justifyContent","alignItems","alignContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\n\r\n// Fish coordinates\r\nlet fish_x;\r\nlet fish_y;\r\n// speed of the fish\r\nlet speed = 5;\r\n\r\nlet new_question = false;\r\n//oprator in the question\r\nlet op;\r\n// question json body with two numbers and oprator between them\r\nlet question = {\r\n    n1: 0,\r\n    n2: 0,\r\n    op: 0\r\n}\r\n//options array\r\nlet options = []\r\nlet answer = true // if previous answer is true\r\nlet correct_option; // the correct option \r\nlet correct  // if the answer is correct\r\nlet score = 0\r\nlet start = true\r\n\r\nexport default (props) => {\r\n\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n        // use parent to render the canvas in this ref\r\n        // (without that p5 will render the canvas outside of your component)\r\n        p5.createCanvas(window.innerWidth * 0.6, window.innerHeight * 0.75).parent(canvasParentRef)\r\n\r\n    };\r\n\r\n    const draw = (p5) => {\r\n\r\n        if (start) {\r\n            setupstart(p5)  //runs only first time\r\n        }\r\n        p5.background(255, 241, 208);\r\n\r\n        myfish(p5)\r\n        keyTyped(p5)\r\n        walls(p5)\r\n\r\n        questions_and_answers(p5);\r\n        retry(p5)\r\n\r\n    };\r\n\r\n\r\n    const setupstart = (p5) => {\r\n\r\n        // fish position in the cordinates\r\n        fish_x = window.innerWidth * 0.6 / 2;\r\n        fish_y = window.innerHeight * 0.75;\r\n\r\n        // picks the question randomly\r\n        question.n1 = p5.floor(p5.random(26, 50))\r\n        question.n2 = p5.floor(p5.random(1, 25))\r\n        question.op = p5.floor(p5.random(1, 3))\r\n\r\n        if (question.op == 1)  // get the oprator +ve or -ve\r\n            op = '+'\r\n        else\r\n            op = '-'\r\n\r\n        // calculate the right answer\r\n        correct_option = question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2\r\n        correct = p5.floor(p5.random(1, 5))\r\n\r\n        //        push the opions in the array \r\n        for (let i = 1; i <= 4; i++) {\r\n            if (i === 1) {\r\n                options.push({\r\n                    'x_cord': 350,\r\n                    'y_cord': window.innerHeight * 0.75 / 4,\r\n                    'number': correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                })\r\n            }\r\n            else if (i === 2) {\r\n                options.push({\r\n                    'x_cord': (window.innerWidth * 0.6 / 4),\r\n                    'y_cord': window.innerHeight * 0.75 / 1.8,\r\n                    'number': correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                })\r\n            } else if (i === 3) {\r\n                options.push({\r\n                    'x_cord': (window.innerWidth * 0.6 / 2) + 60,\r\n                    'y_cord': window.innerHeight * 0.75 / 4,\r\n                    'number': correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                })\r\n            } else if (i === 4) {\r\n                options.push({\r\n                    'x_cord': (window.innerWidth * 0.6 / 2) + window.innerWidth * 0.6 / 3,\r\n                    'y_cord': window.innerHeight * 0.75 / 1.8,\r\n                    'number': correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                })\r\n            }\r\n        }\r\n        start = false\r\n    }\r\n\r\n    const retry = (p5) => {\r\n\r\n        //get mouse position\r\n        let mouse_x;\r\n        let mouse_y;\r\n        if (p5.mouseIsPressed == true) {\r\n            mouse_x = p5.mouseX;\r\n            mouse_y = p5.mouseY;\r\n        }\r\n\r\n        // if pressed retry or play again\r\n        if (new_question || !answer && mouse_x >= window.innerWidth * 0.6 / 4 && mouse_x <= window.innerWidth * 0.6 / 4 + 80\r\n            && mouse_y > window.innerHeight * 0.75 / 1.2 && window.innerHeight * 0.75 / 1.2 + 20) {\r\n\r\n            // assign the new question\r\n            question.n1 = p5.floor(p5.random(26, 50))\r\n            question.n2 = p5.floor(p5.random(1, 25))\r\n            question.op = p5.floor(p5.random(1, 3))\r\n            if (question.op == 1)\r\n                op = '+'\r\n            else\r\n                op = '-'\r\n\r\n            // get the right answer\r\n            correct_option = question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2\r\n            correct = p5.floor(p5.random(0, 3))\r\n\r\n\r\n            // assign new options to the options array\r\n            for (let i = 0; i <= 3; i++) {\r\n                if (i === 0) {\r\n                    options[i].x_cord = 350\r\n                    options[i].Y_cord = window.innerHeight * 0.75 / 4\r\n                    options[i].number = correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                }\r\n\r\n                else if (i === 1) {\r\n\r\n                    options[i].x_cord = (window.innerWidth * 0.6 / 4)\r\n                    options[i].y_cord = window.innerHeight * 0.75 / 1.8\r\n                    options[i].number = correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n\r\n                } else if (i === 2) {\r\n\r\n                    options[i].x_cord = (window.innerWidth * 0.6 / 2) + 60\r\n                    options[i].y_cord = window.innerHeight * 0.75 / 4\r\n                    options[i].number = correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n\r\n                } else if (i === 3) {\r\n\r\n                    options[i].x_cord = (window.innerWidth * 0.6 / 2) + window.innerWidth * 0.6 / 3\r\n                    options[i].y_cord = window.innerHeight * 0.75 / 1.8\r\n                    options[i].number = correct === i ? (question.op === 1 ? question.n1 + question.n2 : question.n1 - question.n2) : p5.floor(p5.random(1, 100))\r\n                }\r\n            }\r\n\r\n            //setting the fish position\r\n            fish_x = window.innerWidth * 0.6 / 2;\r\n            fish_y = window.innerHeight * 0.75;\r\n            if (!answer) // check if answer is wrong\r\n                score = 0\r\n\r\n            answer = true\r\n            new_question = false\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const questions_and_answers = (p5) => {\r\n        p5.textSize(26);\r\n        p5.fill(0, 102, 153);\r\n\r\n        // display the question\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        \r\n   p5 .textFont('Cursive')\r\n        p5.text('Task :: Let the Funkie get the missing part', (window.innerWidth * 0.6) / 2, 30);\r\n        p5.text(question.n1 + ' ' + op + ' ' + question.n2 + ' =  ___', (window.innerWidth * 0.6) / 2, 60);\r\n\r\n\r\n\r\n        // display the score\r\n        p5.fill('#C22A85');\r\n        p5.textAlign(p5.RIGHT, p5.TOP);\r\n        p5.text('Score : ' + score + '   ', (window.innerWidth * 0.6), 20);\r\n\r\n\r\n        // display the opions\r\n        options.forEach(element => {\r\n            p5.textSize(26);\r\n            p5.fill('#27AE60');\r\n            p5.textAlign(p5.CENTER, p5.CENTER);\r\n            p5.text(element.number, element.x_cord, element.y_cord)\r\n        });\r\n\r\n\r\n        options.forEach(element => {\r\n            if (fish_x > element.x_cord - 25 && fish_x < element.x_cord + 30 && fish_y > element.y_cord + 30 && fish_y < element.y_cord + 60) {\r\n\r\n                // if fish gets the right option\r\n                if (element.number === correct_option) {\r\n                    const index = options.indexOf(element);\r\n                    if (index > -1) {\r\n\r\n\r\n                        score++;\r\n                        new_question = true\r\n                    }\r\n                }\r\n                else { // if get the wrong options\r\n                    answer = false\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        //    if(new_question){   \r\n        //     question.n1=p5.floor(p5.random(1,50))\r\n        //     question.n2=p5.floor(p5.random(1,50))\r\n        //     question.op=p5.floor(p5.random(1,3))\r\n        //     if(question.op==1)\r\n        //     op='+'\r\n        //     else\r\n        //     op='-'\r\n        //        new_question=false\r\n        //    }\r\n\r\n    }\r\n\r\n\r\n    const walls = (p5) => {\r\n\r\n        // Display the walls \r\n        p5.fill('#870000')\r\n        p5.rect(0, 0, window.innerWidth * 0.6, 10)\r\n        p5.rect(0, 0, 10, window.innerHeight * 0.75)\r\n        p5.rect(0, window.innerHeight * 0.75 - 10, window.innerWidth * 0.6, 10)\r\n        p5.rect(window.innerWidth * 0.6 - 10, 0, 10, window.innerHeight * 0.75);\r\n        p5.rect((window.innerWidth * 0.6) / 2, 120, 10, window.innerHeight * 0.75 - 240)\r\n        p5.rect((window.innerWidth * 0.6 / 2 * 0.3) - 10, window.innerHeight * 0.75 / 3, window.innerWidth * 0.6 / 4, 10)\r\n        p5.rect((window.innerWidth * 0.6 / 2 * 0.3) * 4 + 10, window.innerHeight * 0.75 / 3, window.innerWidth * 0.6 / 4, 10)\r\n        p5.rect((window.innerWidth * 0.6 / 2 * 0.3) - 10, (window.innerHeight * 0.75 / 3) * 2, window.innerWidth * 0.6 / 4, 10)\r\n        p5.rect((window.innerWidth * 0.6 / 2 * 0.3) * 4 + 10, (window.innerHeight * 0.75 / 3) * 2, window.innerWidth * 0.6 / 4, 10)\r\n    }\r\n\r\n\r\n    const myfish = (p5) => {\r\n\r\n        // Sketch the Fish\r\n        p5.noStroke()\r\n        p5.fill('#FF4A1D')\r\n        p5.circle(fish_x, fish_y - 50, 50, 50)\r\n\r\n        p5.fill('#fff')\r\n        p5.ellipse(fish_x - 10, fish_y - 58, 13, 16)\r\n        p5.ellipse(fish_x + 10, fish_y - 58, 13, 16)\r\n\r\n        p5.fill('#000')\r\n        p5.ellipse(fish_x - 10, fish_y - 58, 6, 6)\r\n        p5.ellipse(fish_x + 10, fish_y - 58, 6, 6)\r\n\r\n        p5.fill('#fff')\r\n        p5.ellipse(fish_x, fish_y - 38, 9, 9)\r\n\r\n    }\r\n    const keyTyped = (p5) => {\r\n\r\n        //Get the key typed\r\n        if (answer) {\r\n            if (p5.keyIsDown(p5.LEFT_ARROW) && fish_x > 35) {\r\n\r\n\r\n\r\n                // Check if there's wall between\r\n                if (fish_x >= (window.innerWidth * 0.6) / 2 && fish_x <= (window.innerWidth * 0.6) / 2 + 40\r\n                    && (fish_y > 150 && fish_y < 190 + window.innerHeight * 0.75 - 240)\r\n                    ||\r\n                    (fish_x >= (window.innerWidth * 0.6 / 2 * 0.3) - 10 && fish_x <= (window.innerWidth * 0.6 / 2 * 0.3) + 18 + window.innerWidth * 0.6 / 4\r\n                        || fish_x >= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) && fish_x <= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) + 45 + window.innerWidth * 0.6 / 4\r\n                    )\r\n\r\n                    && ((fish_y >= (window.innerHeight * 0.75) / 3 + 35 && fish_y < (window.innerHeight * 0.75) / 3 + 80)\r\n                        || (fish_y >= (2 * ((window.innerHeight * 0.75) / 3) + 35) && fish_y < (2 * ((window.innerHeight * 0.75) / 3) + 80))\r\n\r\n                    )\r\n                ) {\r\n\r\n                }\r\n                else\r\n                    fish_x -= speed;\r\n            }\r\n\r\n            // Check if there's wall between\r\n            else if (p5.keyIsDown(p5.RIGHT_ARROW) && fish_x < window.innerWidth * 0.6 - 35) {\r\n                if ((fish_x >= (window.innerWidth * 0.6) / 2 - 30 && fish_x <= (window.innerWidth * 0.6) / 2 + 35\r\n                    && (fish_y > 150 && fish_y < 190 + window.innerHeight * 0.75 - 240))\r\n                    ||\r\n                    (fish_x >= (window.innerWidth * 0.6 / 2 * 0.3) - 43 && fish_x <= (window.innerWidth * 0.6 / 2 * 0.3) - 20 + window.innerWidth * 0.6 / 4\r\n                        || fish_x >= (((window.innerWidth * 0.6 / 2 * 0.3) * 4) - 30) && fish_x <= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) + 34 + window.innerWidth * 0.6 / 4\r\n                    )\r\n\r\n                    && ((fish_y >= (window.innerHeight * 0.75) / 3 + 35 && fish_y < (window.innerHeight * 0.75) / 3 + 80)\r\n                        || (fish_y >= (2 * ((window.innerHeight * 0.75) / 3) + 35) && fish_y < (2 * ((window.innerHeight * 0.75) / 3) + 80))\r\n\r\n                    )\r\n                ) {\r\n\r\n                }\r\n                else\r\n                    fish_x += speed;\r\n            }\r\n\r\n            // Check if there's wall between\r\n            else if (p5.keyIsDown(p5.DOWN_ARROW) && fish_y < window.innerHeight * 0.75 + 15) {\r\n                if ((fish_x >= (window.innerWidth * 0.6) / 2 - 25 && fish_x <= (window.innerWidth * 0.6) / 2 + 35\r\n                    && (fish_y > 145 && fish_y < 190 + window.innerHeight * 0.75 - 240))\r\n                    ||\r\n                    (fish_x >= (window.innerWidth * 0.6 / 2 * 0.3) - 38 && fish_x <= (window.innerWidth * 0.6 / 2 * 0.3) + 10 + window.innerWidth * 0.6 / 4\r\n                        || fish_x >= (((window.innerWidth * 0.6 / 2 * 0.3) * 4) - 20) && fish_x <= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) + 34 + window.innerWidth * 0.6 / 4\r\n                    )\r\n\r\n                    && ((fish_y >= (window.innerHeight * 0.75) / 3 + 25 && fish_y < (window.innerHeight * 0.75) / 3 + 70)\r\n                        || (fish_y >= (2 * ((window.innerHeight * 0.75) / 3) + 25) && fish_y < (2 * ((window.innerHeight * 0.75) / 3) + 70))\r\n\r\n                    )\r\n                ) { }\r\n                else\r\n                    fish_y += speed;\r\n            }\r\n\r\n            // Check if there's wall between\r\n            else if (p5.keyIsDown(p5.UP_ARROW) && fish_y > 85) {\r\n                if ((fish_x >= (window.innerWidth * 0.6) / 2 - 25 && fish_x <= (window.innerWidth * 0.6) / 2 + 35\r\n                    && (fish_y > 130 && fish_y < 200 + window.innerHeight * 0.75 - 240))\r\n                    ||\r\n                    (fish_x >= (window.innerWidth * 0.6 / 2 * 0.3) - 38 && fish_x <= (window.innerWidth * 0.6 / 2 * 0.3) + 10 + window.innerWidth * 0.6 / 4\r\n                        || fish_x >= (((window.innerWidth * 0.6 / 2 * 0.3) * 4) - 20) && fish_x <= ((window.innerWidth * 0.6 / 2 * 0.3) * 4) + 34 + window.innerWidth * 0.6 / 4\r\n                    )\r\n\r\n                    && ((fish_y >= (window.innerHeight * 0.75) / 3 + 25 && fish_y < (window.innerHeight * 0.75) / 3 + 90)\r\n                        || (fish_y >= (2 * ((window.innerHeight * 0.75) / 3) + 25) && fish_y < (2 * ((window.innerHeight * 0.75) / 3) + 90))\r\n\r\n                    )\r\n                ) { }\r\n                else\r\n                    fish_y -= speed;\r\n            }\r\n        }\r\n        else {\r\n            //Display the wrong answer message\r\n            p5.textSize(26);\r\n            p5.fill('#E74C3C')\r\n\r\n            p5.textAlign(p5.RIGHT, p5.TOP);\r\n            \r\n   p5 .textFont('Cursive')\r\n            p5.text('Wrong answer ✘', window.innerWidth * 0.6 / 2 + window.innerWidth * 0.6 / 3, window.innerHeight * 0.75 / 1.2)\r\n\r\n            p5.textAlign(p5.LEFT, p5.TOP);\r\n            \r\n   p5 .textFont('Cursive')\r\n            p5.text('Retry ↻', window.innerWidth * 0.6 / 4, window.innerHeight * 0.75 / 1.2)\r\n        }\r\n    }\r\n\r\n    return <Sketch setup={setup}\r\n        draw={draw}\r\n        style={\r\n            {\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                alignContent: 'center',\r\n\r\n            }\r\n        }\r\n    />;\r\n};"]},"metadata":{},"sourceType":"module"}