{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/funmath/funmath/src/games/game1.js\";\nimport React, { Component } from 'react';\nimport Sketch from 'react-p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game1 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.width = 0;\n    this.height = 0;\n    this.initial = true;\n    this.equ = [];\n    this.anw = [];\n    this.hosX = 0;\n    this.hosY = 0;\n    this.balX = 0;\n    this.balY = 0;\n    this.bans = 0;\n    this.rise = 0;\n    this.run = 0;\n    this.mball = {\n      X: 0,\n      Y: 0,\n      val: 0\n    };\n    this.thit = [];\n    this.youlose = false;\n    this.youwin = true;\n\n    this.setup = (p5, canvasParentRef) => {\n      this.width = window.innerWidth * 0.6; //sets console width to 60% of the screen\n\n      this.height = window.innerHeight * 0.75; //sets console height to 75% of the screen\n\n      p5.createCanvas(this.width, this.height).parent(canvasParentRef);\n    };\n\n    this.draw = p5 => {\n      p5.background(255, 241, 208).fill(0, 0, 102).textSize(25) // .textFont('Cursive')\n      .text(\"Task :: Hit the target with right answer.\", 20, 60);\n      let num = this.width / 150 - 1;\n      let sign = ['+', '-'];\n      this.hosX = this.width / 2 - 30; //ball bank x-y coordinates\n\n      this.hosY = this.height - 60; // this if runs every one the game restart\n\n      if (this.initial) {\n        this.balX = this.hosX + 30; //ball x-y coordinates\n\n        this.balY = this.hosY + 30;\n        let eq = [];\n        let ans = [];\n        let hit = []; //store true if the block gets hit by the ball\n\n        for (let i = 0; i < num; i++) {\n          hit.push(false); //initialize with false \n\n          let a = p5.int(p5.random(49)); //a and b of question equation\n\n          let b = p5.int(p5.random(49));\n          let si = p5.int(p5.random(2)); // operation between a and b (+ or -)\n\n          if (a > b) {\n            // always puts the greater number first to avoid negtive answer\n            eq.push(a + sign[si] + b);\n          } else {\n            a = a + b;\n            b = a - b;\n            a = a - b;\n            eq.push(a + sign[si] + b);\n          }\n\n          if (sign[si] === '+') //store the answer of each block in array\n            ans.push(a + b);else ans.push(a - b);\n        }\n\n        this.thit = hit; // set to that global variables\n\n        this.equ = eq;\n        this.anw = ans;\n        this.mball.X = this.balX; //initial position of moving ball is same is static ball\n\n        this.mball.Y = this.balY;\n        this.initial = false;\n        this.bans = p5.random(this.anw); // value of the ball always selected form the answer array\n      }\n\n      p5.textSize(22).fill(0, 0, 102).text(this.bans, this.hosX + 20, this.hosY - 5);\n\n      for (let i = 0; i < num; i++) {\n        // this for loop displays the blocks\n        if (!this.thit[i]) {\n          //if the corresponding hit of the block is true-> do not show the block-> means block is popped\n          p5.fill(204, 204, 0).noStroke().rect(i * 150 + i * 20, 100, 135, 50).fill(50, 50, 255).textSize(20).textFont('Helvetica').text(this.equ[i] + \"=?\", i * 150 + i * 20 + 35, 130); //question equation on the block\n\n          if (this.mball.X >= i * 150 + i * 20 && this.mball.X <= i * 150 + i * 20 + 135 && this.mball.Y <= 150 && this.anw[i] === this.mball.val) // if the ball hits the (i)block and value of block is the answer of the block \n            this.thit[i] = true; //stores that the (i)block is hit\n          else if (this.mball.X >= i * 150 + i * 20 && this.mball.X <= i * 150 + i * 20 + 135 && this.mball.Y <= 150) //block gets hit but value of ball is not the answer of the block.\n              {\n                this.youlose = true; //player losses\n              }\n        }\n      }\n\n      p5.fill(204, 204, 0).square(this.hosX, this.hosY, 60, 20, 20, 0, 0) //render the ball bank\n      .fill(255, 0, 0).circle(this.balX, this.balY, 20); //render the static ball\n\n      this.mball.X += this.run; //moving ball x-y cord. adding x-y value in previous location\n\n      this.mball.Y += this.rise;\n      if (this.mball.Y > 100) //if ball have not passed block than show it...otherwise dont.\n        p5.fill(255, 0, 0).circle(this.mball.X, this.mball.Y, 20);else {\n        //otherwise moving ball is static\n        this.mball.X = this.balX;\n        this.mball.Y = this.balY;\n        this.rise = 0;\n        this.run = 0;\n      }\n\n      for (let i = 0; i < num; i++) {\n        //if all the block got hit...player wins\n        if (!this.thit[i]) {\n          this.youwin = false;\n          break;\n        } else this.youwin = true;\n      }\n\n      if (this.youwin) {\n        //show the victory sign\n        p5.textSize(30).fill(0, 153, 0).text(\"You Win !\", this.width / 2 - 60, this.height / 2).text(\"Play Again ↻\", this.width / 2 - 80, this.height / 2 + 60);\n      }\n\n      if (this.youlose) {\n        p5.textSize(30).fill(255, 0, 0).text(\"You Lose !\", this.width / 2 - 60, this.height / 2).text(\"Retry ↻\", this.width / 2 - 40, this.height / 2 + 60);\n      } else {\n        p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\n\n        let a = p5.atan2(p5.mouseY - this.balY, p5.mouseX - this.balX); //to rotae the ball bank pointer around the static ball but in the direction of mouse cursor\n\n        p5.translate(this.balX, this.balY);\n        p5.rotate(a) //rotate according to the calculation above\n        .fill(p5.mouseY, 50, 50).rect(55, -4, 100, 8); //all above rotates this rectangle...pointer of the ball bank\n      }\n    };\n\n    this.mouseClicked = p5 => {\n      if (this.youlose || this.youwin) {\n        //if any victory or lost sign is showing ...remove them\n        this.youlose = false;\n        this.initial = true; //restart game by resting all the variable \n      } else {\n        this.mball.val = this.bans; //value of the moving ball\n\n        this.mball.X = this.balX;\n        this.mball.Y = this.balY;\n        this.rise = 0;\n        this.run = 0;\n        this.rise = (p5.mouseY - this.balY) / 10; //direction of the ball calculated in the mouse direction\n\n        this.run = (p5.mouseX - this.balX) / 10;\n        let prev = this.bans;\n\n        do {\n          this.bans = p5.random(this.anw);\n        } while (this.bans === prev); //avoid to repeat previous answer\n\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: this.setup,\n      draw: this.draw,\n      mouseClicked: this.mouseClicked.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 20\n    }, this);\n  }\n\n}\n\nexport default Game1;","map":{"version":3,"sources":["/Users/user/Desktop/funmath/funmath/src/games/game1.js"],"names":["React","Component","Sketch","Game1","width","height","initial","equ","anw","hosX","hosY","balX","balY","bans","rise","run","mball","X","Y","val","thit","youlose","youwin","setup","p5","canvasParentRef","window","innerWidth","innerHeight","createCanvas","parent","draw","background","fill","textSize","text","num","sign","eq","ans","hit","i","push","a","int","random","b","si","noStroke","rect","textFont","square","circle","angleMode","DEGREES","atan2","mouseY","mouseX","translate","rotate","mouseClicked","prev","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Sketch from 'react-p5'\r\n\r\nclass Game1 extends Component {\r\n    width =0;\r\n    height =0;\r\n     initial = true; \r\n     equ=[];    // holds the question of all blocks\r\n     anw=[];    // holds the answer of all blocks\r\n     hosX =0;\r\n     hosY =0;\r\n     balX =0;\r\n     balY =0;\r\n     bans = 0;  //bans -> ball answer\r\n     rise =0;   //increment veriable to move ball in y direction\r\n     run=0;   //increment veriable to move ball in x direction\r\n     mball = {\r\n        X: 0,\r\n        Y: 0,\r\n        val: 0\r\n      };    //mball -> moving ball\r\n      thit = [];    // hold the hit array as global\r\n      youlose = false;\r\n      youwin = true;\r\n            setup = (p5, canvasParentRef) => {\r\n                this.width = window.innerWidth*0.6;  //sets console width to 60% of the screen\r\n                this.height = window.innerHeight*0.75;  //sets console height to 75% of the screen\r\n                p5.createCanvas(this.width, this.height).parent(canvasParentRef);\r\n            };\r\n        \r\n            draw = (p5) => {\r\n                p5.background(255, 241, 208)\r\n                .fill(0,0,102)\r\n                .textSize(25)\r\n                // .textFont('Cursive')\r\n                .text(\"Task :: Hit the target with right answer.\", 20, 60);\r\n                let num = (this.width/150)-1;\r\n                let sign = ['+','-'];\r\n                this.hosX = this.width/2 - 30;  //ball bank x-y coordinates\r\n                this.hosY = this.height - 60;\r\n                // this if runs every one the game restart\r\n                if(this.initial){\r\n                    this.balX = this.hosX + 30 ;    //ball x-y coordinates\r\n                    this.balY = this.hosY + 30 ;\r\n                    let eq =[];\r\n                    let ans = [];\r\n                    let hit = [];  //store true if the block gets hit by the ball\r\n                    for(let i=0;i<num;i++){\r\n                        \r\n                        hit.push(false);      //initialize with false \r\n                        let a = p5.int(p5.random(49));  //a and b of question equation\r\n                        let b = p5.int(p5.random(49));\r\n                        let si = p5.int(p5.random(2));  // operation between a and b (+ or -)\r\n                        if(a>b){  // always puts the greater number first to avoid negtive answer\r\n                        eq.push(a+sign[si]+b)\r\n                        }else{\r\n                            a=a+b;\r\n                            b=a-b;\r\n                            a=a-b;\r\n                        eq.push(a+sign[si]+b)\r\n                        }\r\n                     if(sign[si]==='+') //store the answer of each block in array\r\n                        ans.push(a+b);\r\n                        else\r\n                        ans.push(a-b);\r\n                    }\r\n                    this.thit= hit;// set to that global variables\r\n                    this.equ = eq;\r\n                    this.anw = ans;\r\n                    this.mball.X = this.balX; //initial position of moving ball is same is static ball\r\n                    this.mball.Y = this.balY;\r\n                    this.initial = false;\r\n                    this.bans = p5.random(this.anw);// value of the ball always selected form the answer array\r\n                }\r\n                p5\r\n                .textSize(22)\r\n                .fill(0,0,102)\r\n                .text(this.bans,this.hosX+20,this.hosY-5);\r\n                for(let i=0;i<num;i++){ // this for loop displays the blocks\r\n                \r\n                    if(!this.thit[i]){  //if the corresponding hit of the block is true-> do not show the block-> means block is popped\r\n                    p5.fill(204,204,0)\r\n                    .noStroke()\r\n                    .rect((i*150)+i*20,100, 135, 50)\r\n                    .fill(50,50,255)\r\n                    .textSize(20)\r\n                    .textFont('Helvetica')\r\n                    .text(this.equ[i]+\"=?\", (i*150)+i*20+35, 130);  //question equation on the block\r\n                    \r\n                    if(this.mball.X >= (i*150)+i*20 && this.mball.X <= (i*150)+(i*20)+135 && this.mball.Y <=150 && this.anw[i]===this.mball.val)// if the ball hits the (i)block and value of block is the answer of the block \r\n                    this.thit[i] = true;    //stores that the (i)block is hit\r\n                    else if(this.mball.X >= (i*150)+i*20 && this.mball.X <= (i*150)+(i*20)+135 && this.mball.Y <=150)//block gets hit but value of ball is not the answer of the block.\r\n                    {\r\n                        this.youlose = true;    //player losses\r\n                    }\r\n                }\r\n                }\r\n                p5.fill(204,204,0)\r\n                .square(this.hosX,this.hosY,60,20,20,0,0)//render the ball bank\r\n                .fill(255,0,0)\r\n                .circle(this.balX,this.balY,20);        //render the static ball\r\n                this.mball.X+=this.run;   //moving ball x-y cord. adding x-y value in previous location\r\n                this.mball.Y+=this.rise;\r\n                if(this.mball.Y>100)    //if ball have not passed block than show it...otherwise dont.\r\n                p5.fill(255,0,0)\r\n                .circle(this.mball.X,this.mball.Y,20);\r\n                else{   //otherwise moving ball is static\r\n                    this.mball.X = this.balX;\r\n                    this.mball.Y = this.balY; \r\n                    this.rise=0;\r\n                this.run=0;\r\n                }\r\n                for(let i=0;i<num;i++){//if all the block got hit...player wins\r\n                    if(!this.thit[i]){  \r\n                        this.youwin = false;\r\n                        break;\r\n                    }else\r\n                    this.youwin = true;\r\n                }\r\n                if(this.youwin){//show the victory sign\r\n                    p5\r\n                .textSize(30)\r\n                .fill(0,153,0)\r\n                .text(\"You Win !\",(this.width/2)-60,this.height/2)\r\n                .text(\"Play Again ↻\",(this.width/2)-80,this.height/2+60);\r\n                }\r\n                if(this.youlose){\r\n                    p5\r\n                .textSize(30)\r\n                .fill(255,0,0)\r\n                .text(\"You Lose !\",(this.width/2)-60,this.height/2)\r\n                .text(\"Retry ↻\",(this.width/2)-40,this.height/2+60);\r\n                }else{\r\n\r\n                p5.angleMode(p5.DEGREES); // Change the mode to DEGREES\r\n                let a = p5.atan2(p5.mouseY - this.balY, p5.mouseX - this.balX);//to rotae the ball bank pointer around the static ball but in the direction of mouse cursor\r\n                p5.translate(this.balX, this.balY);\r\n                p5.rotate(a)//rotate according to the calculation above\r\n                .fill(p5.mouseY,50,50)\r\n                .rect(55, -4, 100, 8);//all above rotates this rectangle...pointer of the ball bank\r\n                }\r\n            };\r\n            mouseClicked = (p5) =>{\r\n               if(this.youlose || this.youwin){//if any victory or lost sign is showing ...remove them\r\n                    this.youlose = false;\r\n                   this.initial = true;//restart game by resting all the variable \r\n                       \r\n               }else{\r\n                this.mball.val = this.bans; //value of the moving ball\r\n                this.mball.X = this.balX;\r\n                this.mball.Y = this.balY;\r\n                this.rise=0;\r\n                this.run=0;\r\n                this.rise = (p5.mouseY-this.balY)/10;//direction of the ball calculated in the mouse direction\r\n                this.run  = (p5.mouseX-this.balX)/10; \r\n                let prev = this.bans;\r\n                do {\r\n                   this.bans = p5.random(this.anw); \r\n                } while (this.bans === prev);   //avoid to repeat previous answer\r\n                \r\n               }\r\n            }\r\n        render(){\r\n            return <Sketch \r\n            setup={this.setup} \r\n            draw={this.draw} \r\n            mouseClicked={this.mouseClicked.bind(this)}\r\n            />;\r\n        }\r\n        \r\n    \r\n}\r\n\r\nexport default Game1;"]},"metadata":{},"sourceType":"module"}